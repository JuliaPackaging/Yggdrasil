diff --git a/cmake/tribits/core/package_arch/TribitsConstants.cmake b/cmake/tribits/core/package_arch/TribitsConstants.cmake
index ebdf44b91b8..7c1032187bb 100644
--- a/cmake/tribits/core/package_arch/TribitsConstants.cmake
+++ b/cmake/tribits/core/package_arch/TribitsConstants.cmake
@@ -95,11 +95,11 @@ SET(${PROJECT_NAME}_PACKAGE_DEPS_FILES_DIR "cmake/dependencies")
 
 # Other stuff
 
-IF(WIN32)
+IF(${CMAKE_HOST_SYSTEM_NAME} STREQUAL "Windows")
   #Apparently FIND_PROGRAM looks for an exact match of the file name.
   #So even though "git clone ..." is valid to use on windows we need to give the
   #full name of the command we want to run.
   SET(GIT_NAME git.cmd)
-ELSE(WIN32)
+ELSE()
   SET(GIT_NAME git)
-ENDIF(WIN32)
+ENDIF()
diff --git a/packages/epetra/src/Epetra_C_wrappers.h b/packages/epetra/src/Epetra_C_wrappers.h
index 08b64f19cb6..3d617c17fee 100644
--- a/packages/epetra/src/Epetra_C_wrappers.h
+++ b/packages/epetra/src/Epetra_C_wrappers.h
@@ -55,8 +55,8 @@ typedef long long  * EPETRA_LONG_LONG;
 
 #ifdef EPETRA_ADDRESS64BIT
 
-typedef long int EPETRA_OBJECT_PTR;
-typedef long int & EPETRA_OBJECT_REF;
+typedef long long int EPETRA_OBJECT_PTR;
+typedef long long int & EPETRA_OBJECT_REF;
 
 #else
 
diff --git a/packages/epetra/src/Epetra_Import_Util.h b/packages/epetra/src/Epetra_Import_Util.h
index f7282955f5e..61961788d34 100644
--- a/packages/epetra/src/Epetra_Import_Util.h
+++ b/packages/epetra/src/Epetra_Import_Util.h
@@ -67,7 +67,8 @@ namespace Epetra_Import_Util {
 
    \warning This method is intended for expert developer use only, and should never be called by user code.
  */
-int PackAndPrepareWithOwningPIDs(const Epetra_CrsMatrix & SourceMatrix,
+int EPETRA_LIB_DLL_EXPORT PackAndPrepareWithOwningPIDs(
+				 const Epetra_CrsMatrix & SourceMatrix,
 				 int NumExportIDs,
 				 int * ExportLIDs,
 				 int & LenExports,
@@ -83,7 +84,8 @@ int PackAndPrepareWithOwningPIDs(const Epetra_CrsMatrix & SourceMatrix,
 
    \warning This method is intended for expert developer use only, and should never be called by user code.
 */
-int UnpackWithOwningPIDsCount(const Epetra_CrsMatrix& SourceMatrix,
+int EPETRA_LIB_DLL_EXPORT UnpackWithOwningPIDsCount(
+					const Epetra_CrsMatrix& SourceMatrix,
 			      int NumSameIDs,
 			      int NumRemoteIDs,
 			      const int * RemoteLIDs,
@@ -105,7 +107,8 @@ int UnpackWithOwningPIDsCount(const Epetra_CrsMatrix& SourceMatrix,
 
    \warning This method is intended for expert developer use only, and should never be called by user code.
    */
-int UnpackAndCombineIntoCrsArrays(const Epetra_CrsMatrix& SourceMatrix,
+int EPETRA_LIB_DLL_EXPORT UnpackAndCombineIntoCrsArrays(
+				  const Epetra_CrsMatrix& SourceMatrix,
 				  int NumSameIDs,
 				  int NumRemoteIDs,
 				  const int * RemoteLIDs,
@@ -134,7 +137,8 @@ int UnpackAndCombineIntoCrsArrays(const Epetra_CrsMatrix& SourceMatrix,
 
    \warning This method is intended for expert developer use only, and should never be called by user code.
    */
-int UnpackAndCombineIntoCrsArrays(const Epetra_CrsMatrix& SourceMatrix,
+int EPETRA_LIB_DLL_EXPORT UnpackAndCombineIntoCrsArrays(
+				  const Epetra_CrsMatrix& SourceMatrix,
 				  int NumSameIDs,
 				  int NumRemoteIDs,
 				  const int * RemoteLIDs,
diff --git a/packages/epetra/src/Epetra_LinearProblemRedistor.h b/packages/epetra/src/Epetra_LinearProblemRedistor.h
index f2296d60e47..3f96b1be617 100644
--- a/packages/epetra/src/Epetra_LinearProblemRedistor.h
+++ b/packages/epetra/src/Epetra_LinearProblemRedistor.h
@@ -63,7 +63,7 @@ class Epetra_RowMatrixTransposer;
 
 */
 
-class Epetra_LinearProblemRedistor {
+class EPETRA_LIB_DLL_EXPORT Epetra_LinearProblemRedistor {
 
   public:
 
diff --git a/packages/epetra/src/Epetra_SerialDenseSVD.h b/packages/epetra/src/Epetra_SerialDenseSVD.h
index c0cc72d301c..b155032b107 100644
--- a/packages/epetra/src/Epetra_SerialDenseSVD.h
+++ b/packages/epetra/src/Epetra_SerialDenseSVD.h
@@ -112,7 +112,7 @@ Examples using Epetra_SerialDenseSVD can be found in the Epetra test directories
 */
 
 //=========================================================================
-class Epetra_SerialDenseSVD : public virtual Epetra_SerialDenseOperator, public Epetra_CompObject, public virtual Epetra_Object, public Epetra_BLAS, public Epetra_LAPACK{
+class EPETRA_LIB_DLL_EXPORT Epetra_SerialDenseSVD : public virtual Epetra_SerialDenseOperator, public Epetra_CompObject, public virtual Epetra_Object, public Epetra_BLAS, public Epetra_LAPACK{
   public:
 
     //! @name Constructor/Destructor Methods
diff --git a/packages/epetra/src/Epetra_Util.h b/packages/epetra/src/Epetra_Util.h
index 123458b4e1b..bb0edf4d7c1 100644
--- a/packages/epetra/src/Epetra_Util.h
+++ b/packages/epetra/src/Epetra_Util.h
@@ -144,7 +144,7 @@ class EPETRA_LIB_DLL_EXPORT Epetra_Util {
 	
   */
   template<typename T>
-  static void Sort(bool SortAscending, int NumKeys, T * Keys,
+  static void EPETRA_LIB_DLL_EXPORT Sort(bool SortAscending, int NumKeys, T * Keys,
 		   int NumDoubleCompanions,double ** DoubleCompanions,
 		   int NumIntCompanions, int ** IntCompanions,
 		   int NumLongLongCompanions, long long ** LongLongCompanions);
@@ -418,7 +418,8 @@ int Epetra_Util_insert(T item, int offset, T*& list,
     \param lhs (Out) Fortran-style 2D array of LHS values.
     \param ldrhs (Out) Stride between columns of lhs.
 */
-int Epetra_Util_ExtractHbData(Epetra_CrsMatrix * A, Epetra_MultiVector * LHS,
+int EPETRA_LIB_DLL_EXPORT Epetra_Util_ExtractHbData(
+            Epetra_CrsMatrix * A, Epetra_MultiVector * LHS,
 			      Epetra_MultiVector * RHS,
 			      int & M, int & N, int & nz, int * & ptr,
 			      int * & ind, double * & val, int & Nrhs,
diff --git a/packages/epetraext/CMakeLists.txt b/packages/epetraext/CMakeLists.txt
index 0b2112a73c7..dac2114a687 100644
--- a/packages/epetraext/CMakeLists.txt
+++ b/packages/epetraext/CMakeLists.txt
@@ -10,6 +10,10 @@ TRIBITS_PACKAGE(EpetraExt)
 # B) Set up package-specific options
 #
 
+TRIBITS_PACKAGE_DEFINE_DEPENDENCIES(
+  LIB_REQUIRED_PACKAGES Epetra
+)
+
 TRIBITS_ADD_SHOW_DEPRECATED_WARNINGS_OPTION()
 
 TRIBITS_ADD_OPTION_AND_DEFINE(${PACKAGE_NAME}_BUILD_TRANSFORM
diff --git a/packages/ifpack/src/Ifpack_SerialTriDiMatrix.h b/packages/ifpack/src/Ifpack_SerialTriDiMatrix.h
index 55aa6a1592b..fdf3b8175a6 100644
--- a/packages/ifpack/src/Ifpack_SerialTriDiMatrix.h
+++ b/packages/ifpack/src/Ifpack_SerialTriDiMatrix.h
@@ -103,7 +103,7 @@ method in the Epetra_CompObject base class.
 
 
 //=========================================================================
-class EPETRA_LIB_DLL_EXPORT Ifpack_SerialTriDiMatrix : public Epetra_CompObject, public Epetra_Object, public Epetra_BLAS {
+class Ifpack_SerialTriDiMatrix : public Epetra_CompObject, public Epetra_Object, public Epetra_BLAS {
 
   public:
 
diff --git a/packages/ifpack/src/Ifpack_SerialTriDiSolver.h b/packages/ifpack/src/Ifpack_SerialTriDiSolver.h
index 7c4ad3006a7..e65d65c249b 100644
--- a/packages/ifpack/src/Ifpack_SerialTriDiSolver.h
+++ b/packages/ifpack/src/Ifpack_SerialTriDiSolver.h
@@ -127,7 +127,7 @@ Examples using Ifpack_SerialTriDiSolver can be found in the Epetra test director
 */
 
 //=========================================================================
-class EPETRA_LIB_DLL_EXPORT Ifpack_SerialTriDiSolver :
+class Ifpack_SerialTriDiSolver :
   public Epetra_CompObject, public Epetra_BLAS,
   public Epetra_Object    {
   public:
diff --git a/packages/teuchos/numerics/src/Teuchos_BLAS.cpp b/packages/teuchos/numerics/src/Teuchos_BLAS.cpp
index 70e3b05162b..10f63611012 100644
--- a/packages/teuchos/numerics/src/Teuchos_BLAS.cpp
+++ b/packages/teuchos/numerics/src/Teuchos_BLAS.cpp
@@ -113,11 +113,11 @@ namespace Teuchos {
 //resolving them when linking dlls.
 #ifdef _WIN32
 #  ifdef HAVE_TEUCHOS_COMPLEX
-     template BLAS<long int, std::complex<float> >;
-     template BLAS<long int, std::complex<double> >;
+     template class BLAS<long int, std::complex<float> >;
+     template class BLAS<long int, std::complex<double> >;
 #  endif
-     template BLAS<long int, float>;
-     template BLAS<long int, double>;
+     template class BLAS<long int, float>;
+     template class BLAS<long int, double>;
 #endif
 
   // *************************** BLAS<int,float> DEFINITIONS ******************************
diff --git a/packages/teuchos/parameterlist/src/CMakeLists.txt b/packages/teuchos/parameterlist/src/CMakeLists.txt
index e98ed02f8a0..66fae41143c 100644
--- a/packages/teuchos/parameterlist/src/CMakeLists.txt
+++ b/packages/teuchos/parameterlist/src/CMakeLists.txt
@@ -35,3 +35,7 @@ TRIBITS_ADD_LIBRARY(
   SOURCES ${SOURCES}
   DEFINES -DTEUCHOSPARAMETERLIST_LIB_EXPORTS_MODE
   )
+
+IF(WIN32)
+  target_link_libraries(teuchosparameterlist ws2_32)
+ENDIF()
\ No newline at end of file
diff --git a/packages/teuchos/parameterlist/src/Teuchos_ParameterListAcceptorDefaultBase.hpp b/packages/teuchos/parameterlist/src/Teuchos_ParameterListAcceptorDefaultBase.hpp
index de5e2712308..4e77224f3b4 100644
--- a/packages/teuchos/parameterlist/src/Teuchos_ParameterListAcceptorDefaultBase.hpp
+++ b/packages/teuchos/parameterlist/src/Teuchos_ParameterListAcceptorDefaultBase.hpp
@@ -58,7 +58,7 @@ namespace Teuchos {
  * using the non-virtual protected members <tt>setMyParamList()</tt> and
  * <tt>getMyParamList()</tt>.
  */
-class ParameterListAcceptorDefaultBase : virtual public ParameterListAcceptor {
+class TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT ParameterListAcceptorDefaultBase : virtual public ParameterListAcceptor {
 public:
 
   /** \name Overridden from ParameterListAcceptor */
diff --git a/packages/teuchos/parameterlist/src/Teuchos_XMLPerfTestArchive.cpp b/packages/teuchos/parameterlist/src/Teuchos_XMLPerfTestArchive.cpp
index 1cd1a002643..c2f6d8d02a7 100644
--- a/packages/teuchos/parameterlist/src/Teuchos_XMLPerfTestArchive.cpp
+++ b/packages/teuchos/parameterlist/src/Teuchos_XMLPerfTestArchive.cpp
@@ -48,7 +48,7 @@
 #include <Teuchos_FileInputSource.hpp>
 #include <Teuchos_XMLPerfTestArchive.hpp>
 #if defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
-#include <Winsock2.h>
+#include <winsock2.h>
 #pragma comment(lib, "ws2_32.lib")
 #else
 #include <unistd.h>
