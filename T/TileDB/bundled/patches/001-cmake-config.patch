diff --git a/cmake/Options/BuildOptions.cmake b/cmake/Options/BuildOptions.cmake
index 4bc86d5..68a1c55 100644
--- a/cmake/Options/BuildOptions.cmake
+++ b/cmake/Options/BuildOptions.cmake
@@ -8,7 +8,7 @@
 include(CMakeDependentOption)
 
 option(TILEDB_SUPERBUILD "If true, perform a superbuild (builds all missing dependencies)." ON)
-option(TILEDB_VCPKG "If true, use vcpkg to download and build dependencies." ON)
+option(TILEDB_VCPKG "If true, use vcpkg to download and build dependencies." OFF)
 cmake_dependent_option(TILEDB_FORCE_ALL_DEPS "If true, force superbuild to download and build all dependencies, even those installed on the system." OFF "NOT TILEDB_VCPKG" OFF)
 option(TILEDB_SANITIZER "Sets the sanitizers to use. Only address is currently supported." "")
 option(TILEDB_VCPKG_BASE_TRIPLET "Sets the base vcpkg triplet when building with sanitizers." "")
@@ -48,10 +48,6 @@ if (DEFINED TILEDB_STATIC)
   endif()
 endif()
 
-if (NOT TILEDB_VCPKG)
-  message(FATAL_ERROR "Disabling TILEDB_VCPKG is not supported.")
-endif()
-
 # enable assertions by default for debug builds
 if (CMAKE_BUILD_TYPE STREQUAL "Debug")
   set(TILEDB_ASSERTIONS TRUE)
diff --git a/cmake/inputs/Config.cmake.in b/cmake/inputs/Config.cmake.in
index df94a0f..d7f7f60 100644
--- a/cmake/inputs/Config.cmake.in
+++ b/cmake/inputs/Config.cmake.in
@@ -15,7 +15,6 @@ if(NOT @BUILD_SHARED_LIBS@) # NOT BUILD_SHARED_LIBS
   include(CMakeFindDependencyMacro)
   find_dependency(Threads)
   find_dependency(BZip2)
-  find_dependency(lz4)
   find_dependency(spdlog)
   find_dependency(ZLIB)
   find_dependency(zstd)
