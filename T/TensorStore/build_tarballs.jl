# Note that this script can accept some limited command-line arguments,
# run `julia build_tarballs.jl --help` to see a usage message.
using BinaryBuilder, Pkg

name = "TensorStore"
version = v"0.1.59"

# Collection of sources required to complete build
sources = [
    GitSource("https://github.com/google/tensorstore", "825f35e67f50103b5906dd6ee0d78c1dded00455"),
    DirectorySource("bundled"),
]

# Bash recipe for building across all platforms
script = raw"""
cd ${WORKSPACE}/srcdir/tensorstore

export PATH=${host_bindir}:${PATH}
ln -s ${host_bindir}/protoc ${host_bindir}/protobuf::protoc

# TensorStore builds some vendored other packages. We have basically
# no control over this. We use `ccsafe` etc. to avoid problems with
# `-ffast-math` etc.
sed -i -e 's!set(CMAKE_C_COMPILER.*!set(CMAKE_C_COMPILER '${WORKSPACE}/srcdir/files/ccsafe')!' ${CMAKE_TARGET_TOOLCHAIN}
sed -i -e 's!set(CMAKE_CXX_COMPILER.*!set(CMAKE_CXX_COMPILER '${WORKSPACE}/srcdir/files/c++safe')!' ${CMAKE_TARGET_TOOLCHAIN}

cmake -B build -G Ninja \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_FIND_ROOT_PATH=${prefix} \
    -DCMAKE_INSTALL_PREFIX=${prefix} \
    -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TARGET_TOOLCHAIN} \
    -DBUILD_SHARED_LIBS=ON \
    -DBUILD_TESTING=OFF \
    -DTENSORSTORE_USE_SYSTEM_ABSL=OFF \
    -DTENSORSTORE_USE_SYSTEM_AOM=ON \
    -DTENSORSTORE_USE_SYSTEM_AVIF=ON \
    -DTENSORSTORE_USE_SYSTEM_BLOSC=ON \
    -DTENSORSTORE_USE_SYSTEM_BROTLI=ON \
    -DTENSORSTORE_USE_SYSTEM_BZIP2=ON \
    -DTENSORSTORE_USE_SYSTEM_CURL=ON \
    -DTENSORSTORE_USE_SYSTEM_C_ARES=ON \
    -DTENSORSTORE_USE_SYSTEM_DAV1D=ON \
    -DTENSORSTORE_USE_SYSTEM_JPEG=ON \
    -DTENSORSTORE_USE_SYSTEM_LIBLZMA=ON \
    -DTENSORSTORE_USE_SYSTEM_LZ4=ON \
    -DTENSORSTORE_USE_SYSTEM_NGHTTP2=ON \
    -DTENSORSTORE_USE_SYSTEM_NLOHMANN_JSON=ON \
    -DTENSORSTORE_USE_SYSTEM_OPENSSL=ON \
    -DTENSORSTORE_USE_SYSTEM_PNG=ON \
    -DTENSORSTORE_USE_SYSTEM_PROTOBUF=OFF \
    -DTENSORSTORE_USE_SYSTEM_SNAPPY=ON \
    -DTENSORSTORE_USE_SYSTEM_TIFF=ON \
    -DTENSORSTORE_USE_SYSTEM_TINYXML2=OFF \
    -DTENSORSTORE_USE_SYSTEM_WEBP=ON \
    -DTENSORSTORE_USE_SYSTEM_ZLIB=ON \
    -DTENSORSTORE_USE_SYSTEM_ZSTD=ON

# Other possible dependencies that we could provide:
# option(TENSORSTORE_USE_SYSTEM_BLAKE3 "Use an installed version of BLAKE3")
# option(TENSORSTORE_USE_SYSTEM_UDPA "Use an installed version of udpa")
# option(TENSORSTORE_USE_SYSTEM_BENCHMARK "Use an installed version of benchmark")
# option(TENSORSTORE_USE_SYSTEM_GOOGLEAPIS "Use an installed version of Googleapis")
# option(TENSORSTORE_USE_SYSTEM_GTEST "Use an installed version of GTest")
# option(TENSORSTORE_USE_SYSTEM_LIBYUV "Use an installed version of libyuv")
# option(TENSORSTORE_USE_SYSTEM_UTF8_RANGE "Use an installed version of utf8_range")
# option(TENSORSTORE_USE_SYSTEM_RE2 "Use an installed version of Re2")
# option(TENSORSTORE_USE_SYSTEM_RIEGELI "Use an installed version of riegeli")
# option(TENSORSTORE_USE_SYSTEM_ENVOY "Use an installed version of envoy")
# option(TENSORSTORE_USE_SYSTEM_HALF "Use an installed version of half")

cmake --build build --parallel ${nproc}

# cmake --install build
for file in $(cd build/bin && ls tensorstore*); do
    install -Dvm 755 build/bin/${file} ${bindir}/${file}
done
libdirs=(
    build
    build/_local_mirror/lpm-build
    build/_deps/tinyxml2-build
    build/_deps/googleapis-build
    build/_deps/benchmark-build
    build/_deps/protobuf-build
    build/_deps/udpa-build
    build/_deps/envoy-build
    build/_deps/re2-build
    build/_deps/blake3-build
    build/_deps/grpc-build
    build/_deps/absl-build/absl/numeric
    build/_deps/absl-build/absl/log
    build/_deps/absl-build/absl/debugging
    build/_deps/absl-build/absl/types
    build/_deps/absl-build/absl/time
    build/_deps/absl-build/absl/status
    build/_deps/absl-build/absl/flags
    build/_deps/absl-build/absl/random
    build/_deps/absl-build/absl/base
    build/_deps/absl-build/absl/container
    build/_deps/absl-build/absl/hash
    build/_deps/absl-build/absl/synchronization
    build/_deps/absl-build/absl/strings
    build/_deps/absl-build/absl/profiling
    build/_deps/absl-build/absl/crc
    build/_deps/riegeli-build
    build/_deps/gtest-build
)
for dir in ${libdirs[@]}; do
    for file in $(cd ${dir} && ls lib*); do
        install -Dvm 755 ${dir}/${file} ${libdir}/${file}
    done
done

install_license LICENSE
"""

# These are the platforms we will build for by default, unless further
# platforms are passed in on the command line
platforms = supported_platforms()
platforms = expand_cxxstring_abis(platforms)

# The products that we will ensure are always built
products = [
    ExecutableProduct("tensorstore_array_test", :tensorstore_array_test),
    ExecutableProduct("tensorstore_array_testutil_test", :tensorstore_array_testutil_test),
    ExecutableProduct("tensorstore_batch_test", :tensorstore_batch_test),
    ExecutableProduct("tensorstore_box_test", :tensorstore_box_test),
    ExecutableProduct("tensorstore_chunk_layout_test", :tensorstore_chunk_layout_test),
    ExecutableProduct("tensorstore_codec_spec_test", :tensorstore_codec_spec_test),
    ExecutableProduct("tensorstore_context_test", :tensorstore_context_test),
    ExecutableProduct("tensorstore_contiguous_layout_test", :tensorstore_contiguous_layout_test),
    ExecutableProduct("tensorstore_data_type_conversion_test", :tensorstore_data_type_conversion_test),
    ExecutableProduct("tensorstore_data_type_test", :tensorstore_data_type_test),
    ExecutableProduct("tensorstore_driver_array_array_test", :tensorstore_driver_array_array_test),
    ExecutableProduct("tensorstore_driver_cast_cast_test", :tensorstore_driver_cast_cast_test),
    ExecutableProduct("tensorstore_driver_downsample_downsample_array_test", :tensorstore_driver_downsample_downsample_array_test),
    ExecutableProduct("tensorstore_driver_downsample_downsample_benchmark_test", :tensorstore_driver_downsample_downsample_benchmark_test),
    ExecutableProduct("tensorstore_driver_downsample_downsample_test", :tensorstore_driver_downsample_downsample_test),
    ExecutableProduct("tensorstore_driver_downsample_downsample_util_test", :tensorstore_driver_downsample_downsample_util_test),
    ExecutableProduct("tensorstore_driver_downsample_grid_occupancy_map_test", :tensorstore_driver_downsample_grid_occupancy_map_test),
    ExecutableProduct("tensorstore_driver_driver_test", :tensorstore_driver_driver_test),
    ExecutableProduct("tensorstore_driver_image_image_test", :tensorstore_driver_image_image_test),
    ExecutableProduct("tensorstore_driver_json_json_change_map_test", :tensorstore_driver_json_json_change_map_test),
    ExecutableProduct("tensorstore_driver_json_json_test", :tensorstore_driver_json_json_test),
    ExecutableProduct("tensorstore_driver_kvs_backed_chunk_driver_test", :tensorstore_driver_kvs_backed_chunk_driver_test),
    ExecutableProduct("tensorstore_driver_n5_blosc_compressor_test", :tensorstore_driver_n5_blosc_compressor_test),
    ExecutableProduct("tensorstore_driver_n5_bzip2_compressor_test", :tensorstore_driver_n5_bzip2_compressor_test),
    ExecutableProduct("tensorstore_driver_n5_driver_test", :tensorstore_driver_n5_driver_test),
    ExecutableProduct("tensorstore_driver_n5_golden_file_test", :tensorstore_driver_n5_golden_file_test),
    ExecutableProduct("tensorstore_driver_n5_gzip_compressor_test", :tensorstore_driver_n5_gzip_compressor_test),
    ExecutableProduct("tensorstore_driver_n5_metadata_test", :tensorstore_driver_n5_metadata_test),
    ExecutableProduct("tensorstore_driver_n5_storage_statistics_test", :tensorstore_driver_n5_storage_statistics_test),
    ExecutableProduct("tensorstore_driver_n5_xz_compressor_test", :tensorstore_driver_n5_xz_compressor_test),
    ExecutableProduct("tensorstore_driver_neuroglancer_precomputed_chunk_encoding_test", :tensorstore_driver_neuroglancer_precomputed_chunk_encoding_test),
    ExecutableProduct("tensorstore_driver_neuroglancer_precomputed_driver_test", :tensorstore_driver_neuroglancer_precomputed_driver_test),
    ExecutableProduct("tensorstore_driver_neuroglancer_precomputed_metadata_test", :tensorstore_driver_neuroglancer_precomputed_metadata_test),
    ExecutableProduct("tensorstore_driver_neuroglancer_precomputed_storage_statistics_test", :tensorstore_driver_neuroglancer_precomputed_storage_statistics_test),
    ExecutableProduct("tensorstore_driver_stack_driver_test", :tensorstore_driver_stack_driver_test),
    ExecutableProduct("tensorstore_driver_stack_integration_test", :tensorstore_driver_stack_integration_test),
    ExecutableProduct("tensorstore_driver_virtual_chunked_virtual_chunked_test", :tensorstore_driver_virtual_chunked_virtual_chunked_test),
    ExecutableProduct("tensorstore_driver_zarr3_codec_blosc_test", :tensorstore_driver_zarr3_codec_blosc_test),
    ExecutableProduct("tensorstore_driver_zarr3_codec_bytes_test", :tensorstore_driver_zarr3_codec_bytes_test),
    ExecutableProduct("tensorstore_driver_zarr3_codec_codec_chain_spec_test", :tensorstore_driver_zarr3_codec_codec_chain_spec_test),
    ExecutableProduct("tensorstore_driver_zarr3_codec_gzip_test", :tensorstore_driver_zarr3_codec_gzip_test),
    ExecutableProduct("tensorstore_driver_zarr3_codec_sharding_indexed_test", :tensorstore_driver_zarr3_codec_sharding_indexed_test),
    ExecutableProduct("tensorstore_driver_zarr3_codec_transpose_test", :tensorstore_driver_zarr3_codec_transpose_test),
    ExecutableProduct("tensorstore_driver_zarr3_codec_zstd_test", :tensorstore_driver_zarr3_codec_zstd_test),
    ExecutableProduct("tensorstore_driver_zarr3_driver_test", :tensorstore_driver_zarr3_driver_test),
    ExecutableProduct("tensorstore_driver_zarr3_metadata_test", :tensorstore_driver_zarr3_metadata_test),
    ExecutableProduct("tensorstore_driver_zarr3_sharding_benchmark_test", :tensorstore_driver_zarr3_sharding_benchmark_test),
    ExecutableProduct("tensorstore_driver_zarr3_storage_statistics_test", :tensorstore_driver_zarr3_storage_statistics_test),
    ExecutableProduct("tensorstore_driver_zarr_blosc_compressor_test", :tensorstore_driver_zarr_blosc_compressor_test),
    ExecutableProduct("tensorstore_driver_zarr_bzip2_compressor_test", :tensorstore_driver_zarr_bzip2_compressor_test),
    ExecutableProduct("tensorstore_driver_zarr_compressor_test", :tensorstore_driver_zarr_compressor_test),
    ExecutableProduct("tensorstore_driver_zarr_driver_impl_test", :tensorstore_driver_zarr_driver_impl_test),
    ExecutableProduct("tensorstore_driver_zarr_driver_test", :tensorstore_driver_zarr_driver_test),
    ExecutableProduct("tensorstore_driver_zarr_dtype_test", :tensorstore_driver_zarr_dtype_test),
    ExecutableProduct("tensorstore_driver_zarr_metadata_test", :tensorstore_driver_zarr_metadata_test),
    ExecutableProduct("tensorstore_driver_zarr_spec_test", :tensorstore_driver_zarr_spec_test),
    ExecutableProduct("tensorstore_driver_zarr_storage_statistics_test", :tensorstore_driver_zarr_storage_statistics_test),
    ExecutableProduct("tensorstore_driver_zarr_zlib_compressor_test", :tensorstore_driver_zarr_zlib_compressor_test),
    ExecutableProduct("tensorstore_driver_zarr_zstd_compressor_test", :tensorstore_driver_zarr_zstd_compressor_test),
    ExecutableProduct("tensorstore_index_interval_test", :tensorstore_index_interval_test),
    ExecutableProduct("tensorstore_index_space_add_new_dims_op_test", :tensorstore_index_space_add_new_dims_op_test),
    ExecutableProduct("tensorstore_index_space_alignment_test", :tensorstore_index_space_alignment_test),
    ExecutableProduct("tensorstore_index_space_compose_transforms_test", :tensorstore_index_space_compose_transforms_test),
    ExecutableProduct("tensorstore_index_space_deep_copy_transform_rep_ptr_test", :tensorstore_index_space_deep_copy_transform_rep_ptr_test),
    ExecutableProduct("tensorstore_index_space_diagonal_op_test", :tensorstore_index_space_diagonal_op_test),
    ExecutableProduct("tensorstore_index_space_dim_expression_test", :tensorstore_index_space_dim_expression_test),
    ExecutableProduct("tensorstore_index_space_dimension_identifier_test", :tensorstore_index_space_dimension_identifier_test),
    ExecutableProduct("tensorstore_index_space_dimension_permutation_test", :tensorstore_index_space_dimension_permutation_test),
    ExecutableProduct("tensorstore_index_space_dimension_selection_test", :tensorstore_index_space_dimension_selection_test),
    ExecutableProduct("tensorstore_index_space_dimension_units_test", :tensorstore_index_space_dimension_units_test),
    ExecutableProduct("tensorstore_index_space_get_output_range_test", :tensorstore_index_space_get_output_range_test),
    ExecutableProduct("tensorstore_index_space_identity_transform_test", :tensorstore_index_space_identity_transform_test),
    ExecutableProduct("tensorstore_index_space_index_array_slice_op_test", :tensorstore_index_space_index_array_slice_op_test),
    ExecutableProduct("tensorstore_index_space_index_transform_builder_test", :tensorstore_index_space_index_transform_builder_test),
    ExecutableProduct("tensorstore_index_space_index_transform_test", :tensorstore_index_space_index_transform_test),
    ExecutableProduct("tensorstore_index_space_index_vector_or_scalar_test", :tensorstore_index_space_index_vector_or_scalar_test),
    ExecutableProduct("tensorstore_index_space_interval_slice_op_test", :tensorstore_index_space_interval_slice_op_test),
    ExecutableProduct("tensorstore_index_space_inverse_transform_test", :tensorstore_index_space_inverse_transform_test),
    ExecutableProduct("tensorstore_index_space_iterate_benchmark_test", :tensorstore_index_space_iterate_benchmark_test),
    ExecutableProduct("tensorstore_index_space_iterate_test", :tensorstore_index_space_iterate_test),
    ExecutableProduct("tensorstore_index_space_json_test", :tensorstore_index_space_json_test),
    ExecutableProduct("tensorstore_index_space_label_op_test", :tensorstore_index_space_label_op_test),
    ExecutableProduct("tensorstore_index_space_mark_explicit_op_test", :tensorstore_index_space_mark_explicit_op_test),
    ExecutableProduct("tensorstore_index_space_move_to_op_test", :tensorstore_index_space_move_to_op_test),
    ExecutableProduct("tensorstore_index_space_output_index_map_test", :tensorstore_index_space_output_index_map_test),
    ExecutableProduct("tensorstore_index_space_propagate_bounds_test", :tensorstore_index_space_propagate_bounds_test),
    ExecutableProduct("tensorstore_index_space_propagate_input_domain_resize_to_output_test", :tensorstore_index_space_propagate_input_domain_resize_to_output_test),
    ExecutableProduct("tensorstore_index_space_single_index_slice_op_test", :tensorstore_index_space_single_index_slice_op_test),
    ExecutableProduct("tensorstore_index_space_slice_by_box_test", :tensorstore_index_space_slice_by_box_test),
    ExecutableProduct("tensorstore_index_space_slice_by_index_domain_test", :tensorstore_index_space_slice_by_index_domain_test),
    ExecutableProduct("tensorstore_index_space_transform_array_constraints_test", :tensorstore_index_space_transform_array_constraints_test),
    ExecutableProduct("tensorstore_index_space_transform_array_test", :tensorstore_index_space_transform_array_test),
    ExecutableProduct("tensorstore_index_space_transform_broadcastable_array_test", :tensorstore_index_space_transform_broadcastable_array_test),
    ExecutableProduct("tensorstore_index_space_transform_rep_test", :tensorstore_index_space_transform_rep_test),
    ExecutableProduct("tensorstore_index_space_transformed_array_test", :tensorstore_index_space_transformed_array_test),
    ExecutableProduct("tensorstore_index_space_translate_op_test", :tensorstore_index_space_translate_op_test),
    ExecutableProduct("tensorstore_index_space_transpose_op_test", :tensorstore_index_space_transpose_op_test),
    ExecutableProduct("tensorstore_index_space_transpose_test", :tensorstore_index_space_transpose_test),
    ExecutableProduct("tensorstore_index_space_transpose_to_op_test", :tensorstore_index_space_transpose_to_op_test),
    ExecutableProduct("tensorstore_internal_arena_test", :tensorstore_internal_arena_test),
    ExecutableProduct("tensorstore_internal_async_write_array_test", :tensorstore_internal_async_write_array_test),
    ExecutableProduct("tensorstore_internal_benchmark_kvstore_benchmark", :tensorstore_internal_benchmark_kvstore_benchmark),
    ExecutableProduct("tensorstore_internal_benchmark_kvstore_duration", :tensorstore_internal_benchmark_kvstore_duration),
    ExecutableProduct("tensorstore_internal_benchmark_ts_benchmark", :tensorstore_internal_benchmark_ts_benchmark),
    ExecutableProduct("tensorstore_internal_box_difference_test", :tensorstore_internal_box_difference_test),
    ExecutableProduct("tensorstore_internal_cache_async_cache_test", :tensorstore_internal_cache_async_cache_test),
    ExecutableProduct("tensorstore_internal_cache_cache_pool_resource_test", :tensorstore_internal_cache_cache_pool_resource_test),
    ExecutableProduct("tensorstore_internal_cache_cache_test", :tensorstore_internal_cache_cache_test),
    ExecutableProduct("tensorstore_internal_cache_chunk_cache_benchmark_test", :tensorstore_internal_cache_chunk_cache_benchmark_test),
    ExecutableProduct("tensorstore_internal_cache_chunk_cache_test", :tensorstore_internal_cache_chunk_cache_test),
    ExecutableProduct("tensorstore_internal_cache_key_cache_key_test", :tensorstore_internal_cache_key_cache_key_test),
    ExecutableProduct("tensorstore_internal_cache_kvs_backed_cache_test", :tensorstore_internal_cache_kvs_backed_cache_test),
    ExecutableProduct("tensorstore_internal_compression_blosc_test", :tensorstore_internal_compression_blosc_test),
    ExecutableProduct("tensorstore_internal_compression_neuroglancer_compressed_segmentation_test", :tensorstore_internal_compression_neuroglancer_compressed_segmentation_test),
    ExecutableProduct("tensorstore_internal_compression_xz_compressor_test", :tensorstore_internal_compression_xz_compressor_test),
    ExecutableProduct("tensorstore_internal_compression_zip_details_test", :tensorstore_internal_compression_zip_details_test),
    ExecutableProduct("tensorstore_internal_compression_zlib_test", :tensorstore_internal_compression_zlib_test),
    ExecutableProduct("tensorstore_internal_container_block_queue_test", :tensorstore_internal_container_block_queue_test),
    ExecutableProduct("tensorstore_internal_container_circular_queue_test", :tensorstore_internal_container_circular_queue_test),
    ExecutableProduct("tensorstore_internal_container_compressed_pair_test", :tensorstore_internal_container_compressed_pair_test),
    ExecutableProduct("tensorstore_internal_container_hash_set_of_any_test", :tensorstore_internal_container_hash_set_of_any_test),
    ExecutableProduct("tensorstore_internal_container_heterogeneous_container_test", :tensorstore_internal_container_heterogeneous_container_test),
    ExecutableProduct("tensorstore_internal_container_intrusive_linked_list_test", :tensorstore_internal_container_intrusive_linked_list_test),
    ExecutableProduct("tensorstore_internal_container_intrusive_red_black_tree_test", :tensorstore_internal_container_intrusive_red_black_tree_test),
    ExecutableProduct("tensorstore_internal_container_single_producer_queue_test", :tensorstore_internal_container_single_producer_queue_test),
    ExecutableProduct("tensorstore_internal_container_to_shared_test", :tensorstore_internal_container_to_shared_test),
    ExecutableProduct("tensorstore_internal_data_type_endian_conversion_test", :tensorstore_internal_data_type_endian_conversion_test),
    ExecutableProduct("tensorstore_internal_decoded_matches_test", :tensorstore_internal_decoded_matches_test),
    ExecutableProduct("tensorstore_internal_digest_sha256_test", :tensorstore_internal_digest_sha256_test),
    ExecutableProduct("tensorstore_internal_dimension_labels_test", :tensorstore_internal_dimension_labels_test),
    ExecutableProduct("tensorstore_internal_elementwise_function_test", :tensorstore_internal_elementwise_function_test),
    ExecutableProduct("tensorstore_internal_env_test", :tensorstore_internal_env_test),
    ExecutableProduct("tensorstore_internal_estimate_heap_usage_estimate_heap_usage_test", :tensorstore_internal_estimate_heap_usage_estimate_heap_usage_test),
    ExecutableProduct("tensorstore_internal_global_initializer_test", :tensorstore_internal_global_initializer_test),
    ExecutableProduct("tensorstore_internal_grid_chunk_key_ranges_base10_test", :tensorstore_internal_grid_chunk_key_ranges_base10_test),
    ExecutableProduct("tensorstore_internal_grid_chunk_key_ranges_test", :tensorstore_internal_grid_chunk_key_ranges_test),
    ExecutableProduct("tensorstore_internal_grid_partition_impl_test", :tensorstore_internal_grid_partition_impl_test),
    ExecutableProduct("tensorstore_internal_grid_partition_test", :tensorstore_internal_grid_partition_test),
    ExecutableProduct("tensorstore_internal_grpc_client_credentials_test", :tensorstore_internal_grpc_client_credentials_test),
    ExecutableProduct("tensorstore_internal_grpc_server_credentials_test", :tensorstore_internal_grpc_server_credentials_test),
    ExecutableProduct("tensorstore_internal_grpc_utils_test", :tensorstore_internal_grpc_utils_test),
    ExecutableProduct("tensorstore_internal_http_curl_transport_http2_test", :tensorstore_internal_http_curl_transport_http2_test),
    ExecutableProduct("tensorstore_internal_http_curl_transport_test", :tensorstore_internal_http_curl_transport_test),
    ExecutableProduct("tensorstore_internal_http_curl_wrappers_test", :tensorstore_internal_http_curl_wrappers_test),
    ExecutableProduct("tensorstore_internal_http_http_header_test", :tensorstore_internal_http_http_header_test),
    ExecutableProduct("tensorstore_internal_http_http_request_test", :tensorstore_internal_http_http_request_test),
    ExecutableProduct("tensorstore_internal_http_http_response_test", :tensorstore_internal_http_http_response_test),
    ExecutableProduct("tensorstore_internal_image_avif_test", :tensorstore_internal_image_avif_test),
    ExecutableProduct("tensorstore_internal_image_bmp_test", :tensorstore_internal_image_bmp_test),
    ExecutableProduct("tensorstore_internal_image_image_reader_test", :tensorstore_internal_image_image_reader_test),
    ExecutableProduct("tensorstore_internal_image_image_writer_test", :tensorstore_internal_image_image_writer_test),
    ExecutableProduct("tensorstore_internal_image_jpeg_test", :tensorstore_internal_image_jpeg_test),
    ExecutableProduct("tensorstore_internal_image_png_test", :tensorstore_internal_image_png_test),
    ExecutableProduct("tensorstore_internal_image_tiff_test", :tensorstore_internal_image_tiff_test),
    ExecutableProduct("tensorstore_internal_image_webp_test", :tensorstore_internal_image_webp_test),
    ExecutableProduct("tensorstore_internal_integer_overflow_test", :tensorstore_internal_integer_overflow_test),
    ExecutableProduct("tensorstore_internal_intrusive_ptr_test", :tensorstore_internal_intrusive_ptr_test),
    ExecutableProduct("tensorstore_internal_irregular_grid_test", :tensorstore_internal_irregular_grid_test),
    ExecutableProduct("tensorstore_internal_json_array_test", :tensorstore_internal_json_array_test),
    ExecutableProduct("tensorstore_internal_json_binding_absl_time_test", :tensorstore_internal_json_binding_absl_time_test),
    ExecutableProduct("tensorstore_internal_json_binding_array_test", :tensorstore_internal_json_binding_array_test),
    ExecutableProduct("tensorstore_internal_json_binding_data_type_test", :tensorstore_internal_json_binding_data_type_test),
    ExecutableProduct("tensorstore_internal_json_binding_enum_test", :tensorstore_internal_json_binding_enum_test),
    ExecutableProduct("tensorstore_internal_json_binding_json_binding_test", :tensorstore_internal_json_binding_json_binding_test),
    ExecutableProduct("tensorstore_internal_json_binding_optional_object_test", :tensorstore_internal_json_binding_optional_object_test),
    ExecutableProduct("tensorstore_internal_json_binding_rational_test", :tensorstore_internal_json_binding_rational_test),
    ExecutableProduct("tensorstore_internal_json_binding_raw_bytes_hex_test", :tensorstore_internal_json_binding_raw_bytes_hex_test),
    ExecutableProduct("tensorstore_internal_json_binding_staleness_bound_test", :tensorstore_internal_json_binding_staleness_bound_test),
    ExecutableProduct("tensorstore_internal_json_binding_std_array_test", :tensorstore_internal_json_binding_std_array_test),
    ExecutableProduct("tensorstore_internal_json_binding_std_optional_test", :tensorstore_internal_json_binding_std_optional_test),
    ExecutableProduct("tensorstore_internal_json_binding_std_tuple_test", :tensorstore_internal_json_binding_std_tuple_test),
    ExecutableProduct("tensorstore_internal_json_binding_std_variant_test", :tensorstore_internal_json_binding_std_variant_test),
    ExecutableProduct("tensorstore_internal_json_gtest_test", :tensorstore_internal_json_gtest_test),
    ExecutableProduct("tensorstore_internal_json_json_test", :tensorstore_internal_json_json_test),
    ExecutableProduct("tensorstore_internal_json_pointer_test", :tensorstore_internal_json_pointer_test),
    ExecutableProduct("tensorstore_internal_json_pprint_python_test", :tensorstore_internal_json_pprint_python_test),
    ExecutableProduct("tensorstore_internal_json_registry_test", :tensorstore_internal_json_registry_test),
    ExecutableProduct("tensorstore_internal_json_same_test", :tensorstore_internal_json_same_test),
    ExecutableProduct("tensorstore_internal_json_value_as_test", :tensorstore_internal_json_value_as_test),
    ExecutableProduct("tensorstore_internal_lock_collection_test", :tensorstore_internal_lock_collection_test),
    ExecutableProduct("tensorstore_internal_log_verbose_flag_test", :tensorstore_internal_log_verbose_flag_test),
    ExecutableProduct("tensorstore_internal_masked_array_test", :tensorstore_internal_masked_array_test),
    ExecutableProduct("tensorstore_internal_meta_test", :tensorstore_internal_meta_test),
    ExecutableProduct("tensorstore_internal_metrics_collect_test", :tensorstore_internal_metrics_collect_test),
    ExecutableProduct("tensorstore_internal_metrics_metadata_test", :tensorstore_internal_metrics_metadata_test),
    ExecutableProduct("tensorstore_internal_metrics_metrics_benchmark_test", :tensorstore_internal_metrics_metrics_benchmark_test),
    ExecutableProduct("tensorstore_internal_metrics_metrics_test", :tensorstore_internal_metrics_metrics_test),
    ExecutableProduct("tensorstore_internal_metrics_prometheus_test", :tensorstore_internal_metrics_prometheus_test),
    ExecutableProduct("tensorstore_internal_metrics_protobuf_test", :tensorstore_internal_metrics_protobuf_test),
    ExecutableProduct("tensorstore_internal_metrics_registry_test", :tensorstore_internal_metrics_registry_test),
    ExecutableProduct("tensorstore_internal_multi_barrier_test", :tensorstore_internal_multi_barrier_test),
    ExecutableProduct("tensorstore_internal_multi_vector_test", :tensorstore_internal_multi_vector_test),
    ExecutableProduct("tensorstore_internal_multi_vector_view_test", :tensorstore_internal_multi_vector_view_test),
    ExecutableProduct("tensorstore_internal_nditerable_array_test", :tensorstore_internal_nditerable_array_test),
    ExecutableProduct("tensorstore_internal_nditerable_copy_benchmark_test", :tensorstore_internal_nditerable_copy_benchmark_test),
    ExecutableProduct("tensorstore_internal_nditerable_copy_test", :tensorstore_internal_nditerable_copy_test),
    ExecutableProduct("tensorstore_internal_nditerable_data_type_conversion_test", :tensorstore_internal_nditerable_data_type_conversion_test),
    ExecutableProduct("tensorstore_internal_nditerable_elementwise_input_transform_test", :tensorstore_internal_nditerable_elementwise_input_transform_test),
    ExecutableProduct("tensorstore_internal_nditerable_elementwise_output_transform_test", :tensorstore_internal_nditerable_elementwise_output_transform_test),
    ExecutableProduct("tensorstore_internal_nditerable_transformed_array_test", :tensorstore_internal_nditerable_transformed_array_test),
    ExecutableProduct("tensorstore_internal_nditerable_util_test", :tensorstore_internal_nditerable_util_test),
    ExecutableProduct("tensorstore_internal_no_destructor_test", :tensorstore_internal_no_destructor_test),
    ExecutableProduct("tensorstore_internal_oauth2_fixed_token_auth_provider_test", :tensorstore_internal_oauth2_fixed_token_auth_provider_test),
    ExecutableProduct("tensorstore_internal_oauth2_gce_auth_provider_test", :tensorstore_internal_oauth2_gce_auth_provider_test),
    ExecutableProduct("tensorstore_internal_oauth2_google_auth_provider_test", :tensorstore_internal_oauth2_google_auth_provider_test),
    ExecutableProduct("tensorstore_internal_oauth2_google_service_account_auth_provider_test", :tensorstore_internal_oauth2_google_service_account_auth_provider_test),
    ExecutableProduct("tensorstore_internal_oauth2_oauth2_auth_provider_test", :tensorstore_internal_oauth2_oauth2_auth_provider_test),
    ExecutableProduct("tensorstore_internal_oauth2_oauth_utils_test", :tensorstore_internal_oauth2_oauth_utils_test),
    ExecutableProduct("tensorstore_internal_os_subprocess_test", :tensorstore_internal_os_subprocess_test),
    ExecutableProduct("tensorstore_internal_parse_json_matches_test", :tensorstore_internal_parse_json_matches_test),
    ExecutableProduct("tensorstore_internal_path_test", :tensorstore_internal_path_test),
    ExecutableProduct("tensorstore_internal_poly_poly_test", :tensorstore_internal_poly_poly_test),
    ExecutableProduct("tensorstore_internal_poly_storage_test", :tensorstore_internal_poly_storage_test),
    ExecutableProduct("tensorstore_internal_rate_limiter_admission_queue_test", :tensorstore_internal_rate_limiter_admission_queue_test),
    ExecutableProduct("tensorstore_internal_rate_limiter_scaling_rate_limiter_test", :tensorstore_internal_rate_limiter_scaling_rate_limiter_test),
    ExecutableProduct("tensorstore_internal_ref_counted_string_test", :tensorstore_internal_ref_counted_string_test),
    ExecutableProduct("tensorstore_internal_retry_test", :tensorstore_internal_retry_test),
    ExecutableProduct("tensorstore_internal_riegeli_array_endian_codec_test", :tensorstore_internal_riegeli_array_endian_codec_test),
    ExecutableProduct("tensorstore_internal_riegeli_digest_suffixed_test", :tensorstore_internal_riegeli_digest_suffixed_test),
    ExecutableProduct("tensorstore_internal_riegeli_find_test", :tensorstore_internal_riegeli_find_test),
    ExecutableProduct("tensorstore_internal_riegeli_json_io_test", :tensorstore_internal_riegeli_json_io_test),
    ExecutableProduct("tensorstore_internal_source_location_test", :tensorstore_internal_source_location_test),
    ExecutableProduct("tensorstore_internal_string_like_test", :tensorstore_internal_string_like_test),
    ExecutableProduct("tensorstore_internal_tagged_ptr_test", :tensorstore_internal_tagged_ptr_test),
    ExecutableProduct("tensorstore_internal_testing_concurrent_test", :tensorstore_internal_testing_concurrent_test),
    ExecutableProduct("tensorstore_internal_thread_pool_impl_test", :tensorstore_internal_thread_pool_impl_test),
    ExecutableProduct("tensorstore_internal_thread_schedule_at_test", :tensorstore_internal_thread_schedule_at_test),
    ExecutableProduct("tensorstore_internal_thread_thread_pool_benchmark", :tensorstore_internal_thread_thread_pool_benchmark),
    ExecutableProduct("tensorstore_internal_thread_thread_pool_test", :tensorstore_internal_thread_thread_pool_test),
    ExecutableProduct("tensorstore_internal_thread_thread_test", :tensorstore_internal_thread_thread_test),
    ExecutableProduct("tensorstore_internal_type_traits_test", :tensorstore_internal_type_traits_test),
    ExecutableProduct("tensorstore_internal_unique_with_intrusive_allocator_test", :tensorstore_internal_unique_with_intrusive_allocator_test),
    ExecutableProduct("tensorstore_internal_uri_utils_test", :tensorstore_internal_uri_utils_test),
    ExecutableProduct("tensorstore_internal_utf8_test", :tensorstore_internal_utf8_test),
    ExecutableProduct("tensorstore_internal_void_wrapper_test", :tensorstore_internal_void_wrapper_test),
    ExecutableProduct("tensorstore_kvstore_byte_range_test", :tensorstore_kvstore_byte_range_test),
    ExecutableProduct("tensorstore_kvstore_copy", :tensorstore_kvstore_copy),
    ExecutableProduct("tensorstore_kvstore_file_file_key_value_store_test", :tensorstore_kvstore_file_file_key_value_store_test),
    ExecutableProduct("tensorstore_kvstore_file_util_test", :tensorstore_kvstore_file_util_test),
    ExecutableProduct("tensorstore_kvstore_gcs_grpc_gcs_grpc_test", :tensorstore_kvstore_gcs_grpc_gcs_grpc_test),
    ExecutableProduct("tensorstore_kvstore_gcs_http_object_metadata_test", :tensorstore_kvstore_gcs_http_object_metadata_test),
    ExecutableProduct("tensorstore_kvstore_gcs_validate_test", :tensorstore_kvstore_gcs_validate_test),
    ExecutableProduct("tensorstore_kvstore_generation_test", :tensorstore_kvstore_generation_test),
    ExecutableProduct("tensorstore_kvstore_http_driver_test", :tensorstore_kvstore_http_driver_test),
    ExecutableProduct("tensorstore_kvstore_key_range_test", :tensorstore_kvstore_key_range_test),
    ExecutableProduct("tensorstore_kvstore_kvstore_test", :tensorstore_kvstore_kvstore_test),
    ExecutableProduct("tensorstore_kvstore_live_kvstore_test", :tensorstore_kvstore_live_kvstore_test),
    ExecutableProduct("tensorstore_kvstore_memory_memory_key_value_store_test", :tensorstore_kvstore_memory_memory_key_value_store_test),
    ExecutableProduct("tensorstore_kvstore_neuroglancer_uint64_sharded_murmurhash3_test", :tensorstore_kvstore_neuroglancer_uint64_sharded_murmurhash3_test),
    ExecutableProduct("tensorstore_kvstore_neuroglancer_uint64_sharded_neuroglancer_uint64_sharded_test", :tensorstore_kvstore_neuroglancer_uint64_sharded_neuroglancer_uint64_sharded_test),
    ExecutableProduct("tensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded_decoder_test", :tensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded_decoder_test),
    ExecutableProduct("tensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded_encoder_test", :tensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded_encoder_test),
    ExecutableProduct("tensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded_test", :tensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_distributed_cooperator_server_test", :tensorstore_kvstore_ocdbt_distributed_cooperator_server_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_distributed_coordinator_server_test", :tensorstore_kvstore_ocdbt_distributed_coordinator_server_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_distributed_driver_test", :tensorstore_kvstore_ocdbt_distributed_driver_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_driver_test", :tensorstore_kvstore_ocdbt_driver_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_dump", :tensorstore_kvstore_ocdbt_dump),
    ExecutableProduct("tensorstore_kvstore_ocdbt_flush_promise_test", :tensorstore_kvstore_ocdbt_flush_promise_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_format_btree_test", :tensorstore_kvstore_ocdbt_format_btree_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_format_data_file_id_codec_test", :tensorstore_kvstore_ocdbt_format_data_file_id_codec_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_format_dump_test", :tensorstore_kvstore_ocdbt_format_dump_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_format_manifest_test", :tensorstore_kvstore_ocdbt_format_manifest_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_io_coalesce_kvstore_test", :tensorstore_kvstore_ocdbt_io_coalesce_kvstore_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_io_indirect_data_writer_test", :tensorstore_kvstore_ocdbt_io_indirect_data_writer_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_read_version_test", :tensorstore_kvstore_ocdbt_read_version_test),
    ExecutableProduct("tensorstore_kvstore_ocdbt_zarr_test", :tensorstore_kvstore_ocdbt_zarr_test),
    ExecutableProduct("tensorstore_kvstore_s3_credentials_default_credential_provider_test", :tensorstore_kvstore_s3_credentials_default_credential_provider_test),
    ExecutableProduct("tensorstore_kvstore_s3_credentials_ec2_credential_provider_test", :tensorstore_kvstore_s3_credentials_ec2_credential_provider_test),
    ExecutableProduct("tensorstore_kvstore_s3_credentials_environmental_credential_provider_test", :tensorstore_kvstore_s3_credentials_environmental_credential_provider_test),
    ExecutableProduct("tensorstore_kvstore_s3_credentials_file_credential_provider_test", :tensorstore_kvstore_s3_credentials_file_credential_provider_test),
    ExecutableProduct("tensorstore_kvstore_s3_s3_endpoint_test", :tensorstore_kvstore_s3_s3_endpoint_test),
    ExecutableProduct("tensorstore_kvstore_s3_s3_key_value_store_test", :tensorstore_kvstore_s3_s3_key_value_store_test),
    ExecutableProduct("tensorstore_kvstore_s3_s3_metadata_test", :tensorstore_kvstore_s3_s3_metadata_test),
    ExecutableProduct("tensorstore_kvstore_s3_s3_request_builder_test", :tensorstore_kvstore_s3_s3_request_builder_test),
    ExecutableProduct("tensorstore_kvstore_s3_validate_test", :tensorstore_kvstore_s3_validate_test),
    ExecutableProduct("tensorstore_kvstore_transaction_test", :tensorstore_kvstore_transaction_test),
    ExecutableProduct("tensorstore_kvstore_tsgrpc_kvstore_server_main", :tensorstore_kvstore_tsgrpc_kvstore_server_main),
    ExecutableProduct("tensorstore_kvstore_tsgrpc_kvstore_server_test", :tensorstore_kvstore_tsgrpc_kvstore_server_test),
    ExecutableProduct("tensorstore_kvstore_tsgrpc_tsgrpc_test", :tensorstore_kvstore_tsgrpc_tsgrpc_test),
    ExecutableProduct("tensorstore_kvstore_zarr3_sharding_indexed_key_test", :tensorstore_kvstore_zarr3_sharding_indexed_key_test),
    ExecutableProduct("tensorstore_kvstore_zarr3_sharding_indexed_shard_format_test", :tensorstore_kvstore_zarr3_sharding_indexed_shard_format_test),
    ExecutableProduct("tensorstore_kvstore_zarr3_sharding_indexed_zarr3_sharding_indexed_test", :tensorstore_kvstore_zarr3_sharding_indexed_zarr3_sharding_indexed_test),
    ExecutableProduct("tensorstore_kvstore_zip_zip_dir_cache_test", :tensorstore_kvstore_zip_zip_dir_cache_test),
    ExecutableProduct("tensorstore_kvstore_zip_zip_key_value_store_test", :tensorstore_kvstore_zip_zip_key_value_store_test),
    ExecutableProduct("tensorstore_open_mode_test", :tensorstore_open_mode_test),
    ExecutableProduct("tensorstore_progress_test", :tensorstore_progress_test),
    ExecutableProduct("tensorstore_proto_array_test", :tensorstore_proto_array_test),
    ExecutableProduct("tensorstore_proto_encode_time_test", :tensorstore_proto_encode_time_test),
    ExecutableProduct("tensorstore_proto_index_transform_test", :tensorstore_proto_index_transform_test),
    ExecutableProduct("tensorstore_proto_proto_binder_test", :tensorstore_proto_proto_binder_test),
    ExecutableProduct("tensorstore_proto_proto_util_test", :tensorstore_proto_proto_util_test),
    ExecutableProduct("tensorstore_proto_schema_test", :tensorstore_proto_schema_test),
    ExecutableProduct("tensorstore_rank_test", :tensorstore_rank_test),
    ExecutableProduct("tensorstore_resize_options_test", :tensorstore_resize_options_test),
    ExecutableProduct("tensorstore_schema_test", :tensorstore_schema_test),
    ExecutableProduct("tensorstore_serialization_absl_time_test", :tensorstore_serialization_absl_time_test),
    ExecutableProduct("tensorstore_serialization_function_test", :tensorstore_serialization_function_test),
    ExecutableProduct("tensorstore_serialization_json_test", :tensorstore_serialization_json_test),
    ExecutableProduct("tensorstore_serialization_registry_test", :tensorstore_serialization_registry_test),
    ExecutableProduct("tensorstore_serialization_result_test", :tensorstore_serialization_result_test),
    ExecutableProduct("tensorstore_serialization_serialization_test", :tensorstore_serialization_serialization_test),
    ExecutableProduct("tensorstore_serialization_span_test", :tensorstore_serialization_span_test),
    ExecutableProduct("tensorstore_serialization_status_test", :tensorstore_serialization_status_test),
    ExecutableProduct("tensorstore_spec_test", :tensorstore_spec_test),
    ExecutableProduct("tensorstore_static_cast_test", :tensorstore_static_cast_test),
    ExecutableProduct("tensorstore_strided_layout_test", :tensorstore_strided_layout_test),
    ExecutableProduct("tensorstore_tensorstore_serialization_test", :tensorstore_tensorstore_serialization_test),
    ExecutableProduct("tensorstore_transaction_test", :tensorstore_transaction_test),
    ExecutableProduct("tensorstore_util_apply_members_apply_members_test", :tensorstore_util_apply_members_apply_members_test),
    ExecutableProduct("tensorstore_util_bfloat16_test", :tensorstore_util_bfloat16_test),
    ExecutableProduct("tensorstore_util_bit_span_test", :tensorstore_util_bit_span_test),
    ExecutableProduct("tensorstore_util_bit_vec_test", :tensorstore_util_bit_vec_test),
    ExecutableProduct("tensorstore_util_byte_strided_pointer_test", :tensorstore_util_byte_strided_pointer_test),
    ExecutableProduct("tensorstore_util_constant_bit_vector_test", :tensorstore_util_constant_bit_vector_test),
    ExecutableProduct("tensorstore_util_constant_vector_test", :tensorstore_util_constant_vector_test),
    ExecutableProduct("tensorstore_util_division_test", :tensorstore_util_division_test),
    ExecutableProduct("tensorstore_util_element_pointer_test", :tensorstore_util_element_pointer_test),
    ExecutableProduct("tensorstore_util_element_traits_test", :tensorstore_util_element_traits_test),
    ExecutableProduct("tensorstore_util_execution_any_receiver_test", :tensorstore_util_execution_any_receiver_test),
    ExecutableProduct("tensorstore_util_execution_any_sender_test", :tensorstore_util_execution_any_sender_test),
    ExecutableProduct("tensorstore_util_execution_collecting_sender_test", :tensorstore_util_execution_collecting_sender_test),
    ExecutableProduct("tensorstore_util_execution_future_collecting_receiver_test", :tensorstore_util_execution_future_collecting_receiver_test),
    ExecutableProduct("tensorstore_util_execution_future_sender_test", :tensorstore_util_execution_future_sender_test),
    ExecutableProduct("tensorstore_util_execution_result_sender_test", :tensorstore_util_execution_result_sender_test),
    ExecutableProduct("tensorstore_util_execution_sender_test", :tensorstore_util_execution_sender_test),
    ExecutableProduct("tensorstore_util_execution_sender_util_test", :tensorstore_util_execution_sender_util_test),
    ExecutableProduct("tensorstore_util_execution_sync_flow_sender_test", :tensorstore_util_execution_sync_flow_sender_test),
    ExecutableProduct("tensorstore_util_executor_test", :tensorstore_util_executor_test),
    ExecutableProduct("tensorstore_util_extents_test", :tensorstore_util_extents_test),
    ExecutableProduct("tensorstore_util_float8_test", :tensorstore_util_float8_test),
    ExecutableProduct("tensorstore_util_future_test", :tensorstore_util_future_test),
    ExecutableProduct("tensorstore_util_int4_test", :tensorstore_util_int4_test),
    ExecutableProduct("tensorstore_util_iterate_over_index_range_test", :tensorstore_util_iterate_over_index_range_test),
    ExecutableProduct("tensorstore_util_iterate_test", :tensorstore_util_iterate_test),
    ExecutableProduct("tensorstore_util_json_absl_flag_test", :tensorstore_util_json_absl_flag_test),
    ExecutableProduct("tensorstore_util_quote_string_test", :tensorstore_util_quote_string_test),
    ExecutableProduct("tensorstore_util_rational_test", :tensorstore_util_rational_test),
    ExecutableProduct("tensorstore_util_result_test", :tensorstore_util_result_test),
    ExecutableProduct("tensorstore_util_small_bit_set_test", :tensorstore_util_small_bit_set_test),
    ExecutableProduct("tensorstore_util_span_json_test", :tensorstore_util_span_json_test),
    ExecutableProduct("tensorstore_util_span_test", :tensorstore_util_span_test),
    ExecutableProduct("tensorstore_util_status_test", :tensorstore_util_status_test),
    ExecutableProduct("tensorstore_util_status_testutil_test", :tensorstore_util_status_testutil_test),
    ExecutableProduct("tensorstore_util_stop_token_test", :tensorstore_util_stop_token_test),
    ExecutableProduct("tensorstore_util_str_cat_test", :tensorstore_util_str_cat_test),
    ExecutableProduct("tensorstore_util_unit_test", :tensorstore_util_unit_test),
    ExecutableProduct("tensorstore_util_utf8_string_test", :tensorstore_util_utf8_string_test),

    LibraryProduct("libtensorstore_array", :libtensorstore_array),
    LibraryProduct("libtensorstore_array_storage_statistics", :libtensorstore_array_storage_statistics),
    LibraryProduct("libtensorstore_array_testutil", :libtensorstore_array_testutil),
    LibraryProduct("libtensorstore_batch", :libtensorstore_batch),
    LibraryProduct("libtensorstore_box", :libtensorstore_box),
    LibraryProduct("libtensorstore_chunk_layout", :libtensorstore_chunk_layout),
    LibraryProduct("libtensorstore_codec_spec", :libtensorstore_codec_spec),
    LibraryProduct("libtensorstore_context", :libtensorstore_context),
    LibraryProduct("libtensorstore_contiguous_layout", :libtensorstore_contiguous_layout),
    LibraryProduct("libtensorstore_data_type", :libtensorstore_data_type),
    LibraryProduct("libtensorstore_downsample_method", :libtensorstore_downsample_method),
    LibraryProduct("libtensorstore_driver", :libtensorstore_driver),
    LibraryProduct("libtensorstore_driver_array", :libtensorstore_driver_array),
    LibraryProduct("libtensorstore_driver_cast", :libtensorstore_driver_cast),
    LibraryProduct("libtensorstore_driver_downsample", :libtensorstore_driver_downsample),
    LibraryProduct("libtensorstore_driver_downsample_downsample_array", :libtensorstore_driver_downsample_downsample_array),
    LibraryProduct("libtensorstore_driver_downsample_downsample_nditerable", :libtensorstore_driver_downsample_downsample_nditerable),
    LibraryProduct("libtensorstore_driver_downsample_downsample_util", :libtensorstore_driver_downsample_downsample_util),
    LibraryProduct("libtensorstore_driver_downsample_grid_occupancy_map", :libtensorstore_driver_downsample_grid_occupancy_map),
    LibraryProduct("libtensorstore_driver_driver_testutil", :libtensorstore_driver_driver_testutil),
    LibraryProduct("libtensorstore_driver_image_avif", :libtensorstore_driver_image_avif),
    LibraryProduct("libtensorstore_driver_image_bmp", :libtensorstore_driver_image_bmp),
    LibraryProduct("libtensorstore_driver_image_jpeg", :libtensorstore_driver_image_jpeg),
    LibraryProduct("libtensorstore_driver_image_png", :libtensorstore_driver_image_png),
    LibraryProduct("libtensorstore_driver_image_tiff", :libtensorstore_driver_image_tiff),
    LibraryProduct("libtensorstore_driver_image_webp", :libtensorstore_driver_image_webp),
    LibraryProduct("libtensorstore_driver_json", :libtensorstore_driver_json),
    LibraryProduct("libtensorstore_driver_json_json_change_map", :libtensorstore_driver_json_json_change_map),
    LibraryProduct("libtensorstore_driver_kvs_backed_chunk_driver", :libtensorstore_driver_kvs_backed_chunk_driver),
    LibraryProduct("libtensorstore_driver_n5_blosc_compressor", :libtensorstore_driver_n5_blosc_compressor),
    LibraryProduct("libtensorstore_driver_n5_bzip2_compressor", :libtensorstore_driver_n5_bzip2_compressor),
    LibraryProduct("libtensorstore_driver_n5_compressor", :libtensorstore_driver_n5_compressor),
    LibraryProduct("libtensorstore_driver_n5_driver", :libtensorstore_driver_n5_driver),
    LibraryProduct("libtensorstore_driver_n5_gzip_compressor", :libtensorstore_driver_n5_gzip_compressor),
    LibraryProduct("libtensorstore_driver_n5_metadata", :libtensorstore_driver_n5_metadata),
    LibraryProduct("libtensorstore_driver_n5_xz_compressor", :libtensorstore_driver_n5_xz_compressor),
    LibraryProduct("libtensorstore_driver_n5_zstd_compressor", :libtensorstore_driver_n5_zstd_compressor),
    LibraryProduct("libtensorstore_driver_neuroglancer_precomputed", :libtensorstore_driver_neuroglancer_precomputed),
    LibraryProduct("libtensorstore_driver_neuroglancer_precomputed_chunk_encoding", :libtensorstore_driver_neuroglancer_precomputed_chunk_encoding),
    LibraryProduct("libtensorstore_driver_neuroglancer_precomputed_metadata", :libtensorstore_driver_neuroglancer_precomputed_metadata),
    LibraryProduct("libtensorstore_driver_stack", :libtensorstore_driver_stack),
    LibraryProduct("libtensorstore_driver_virtual_chunked", :libtensorstore_driver_virtual_chunked),
    LibraryProduct("libtensorstore_driver_zarr3_chunk_cache", :libtensorstore_driver_zarr3_chunk_cache),
    LibraryProduct("libtensorstore_driver_zarr3_codec", :libtensorstore_driver_zarr3_codec),
    LibraryProduct("libtensorstore_driver_zarr3_codec_blosc", :libtensorstore_driver_zarr3_codec_blosc),
    LibraryProduct("libtensorstore_driver_zarr3_codec_bytes", :libtensorstore_driver_zarr3_codec_bytes),
    LibraryProduct("libtensorstore_driver_zarr3_codec_codec_chain_spec", :libtensorstore_driver_zarr3_codec_codec_chain_spec),
    LibraryProduct("libtensorstore_driver_zarr3_codec_codec_test_util", :libtensorstore_driver_zarr3_codec_codec_test_util),
    LibraryProduct("libtensorstore_driver_zarr3_codec_crc32c", :libtensorstore_driver_zarr3_codec_crc32c),
    LibraryProduct("libtensorstore_driver_zarr3_codec_gzip", :libtensorstore_driver_zarr3_codec_gzip),
    LibraryProduct("libtensorstore_driver_zarr3_codec_sharding_indexed", :libtensorstore_driver_zarr3_codec_sharding_indexed),
    LibraryProduct("libtensorstore_driver_zarr3_codec_transpose", :libtensorstore_driver_zarr3_codec_transpose),
    LibraryProduct("libtensorstore_driver_zarr3_codec_zstd", :libtensorstore_driver_zarr3_codec_zstd),
    LibraryProduct("libtensorstore_driver_zarr3_driver", :libtensorstore_driver_zarr3_driver),
    LibraryProduct("libtensorstore_driver_zarr3_metadata", :libtensorstore_driver_zarr3_metadata),
    LibraryProduct("libtensorstore_driver_zarr_blosc_compressor", :libtensorstore_driver_zarr_blosc_compressor),
    LibraryProduct("libtensorstore_driver_zarr_bzip2_compressor", :libtensorstore_driver_zarr_bzip2_compressor),
    LibraryProduct("libtensorstore_driver_zarr_compressor", :libtensorstore_driver_zarr_compressor),
    LibraryProduct("libtensorstore_driver_zarr_driver", :libtensorstore_driver_zarr_driver),
    LibraryProduct("libtensorstore_driver_zarr_dtype", :libtensorstore_driver_zarr_dtype),
    LibraryProduct("libtensorstore_driver_zarr_metadata", :libtensorstore_driver_zarr_metadata),
    LibraryProduct("libtensorstore_driver_zarr_metadata_testutil", :libtensorstore_driver_zarr_metadata_testutil),
    LibraryProduct("libtensorstore_driver_zarr_spec", :libtensorstore_driver_zarr_spec),
    LibraryProduct("libtensorstore_driver_zarr_storage_statistics_test_util", :libtensorstore_driver_zarr_storage_statistics_test_util),
    LibraryProduct("libtensorstore_driver_zarr_zlib_compressor", :libtensorstore_driver_zarr_zlib_compressor),
    LibraryProduct("libtensorstore_driver_zarr_zstd_compressor", :libtensorstore_driver_zarr_zstd_compressor),
    LibraryProduct("libtensorstore_index_interval", :libtensorstore_index_interval),
    LibraryProduct("libtensorstore_index_space_add_new_dims_op", :libtensorstore_index_space_add_new_dims_op),
    LibraryProduct("libtensorstore_index_space_alignment", :libtensorstore_index_space_alignment),
    LibraryProduct("libtensorstore_index_space_diagonal_op", :libtensorstore_index_space_diagonal_op),
    LibraryProduct("libtensorstore_index_space_dimension_identifier", :libtensorstore_index_space_dimension_identifier),
    LibraryProduct("libtensorstore_index_space_dimension_selection", :libtensorstore_index_space_dimension_selection),
    LibraryProduct("libtensorstore_index_space_dimension_units", :libtensorstore_index_space_dimension_units),
    LibraryProduct("libtensorstore_index_space_index_array_slice_op", :libtensorstore_index_space_index_array_slice_op),
    LibraryProduct("libtensorstore_index_space_index_transform", :libtensorstore_index_space_index_transform),
    LibraryProduct("libtensorstore_index_space_index_transform_testutil", :libtensorstore_index_space_index_transform_testutil),
    LibraryProduct("libtensorstore_index_space_index_vector_or_scalar", :libtensorstore_index_space_index_vector_or_scalar),
    LibraryProduct("libtensorstore_index_space_interval_slice_op", :libtensorstore_index_space_interval_slice_op),
    LibraryProduct("libtensorstore_index_space_label_op", :libtensorstore_index_space_label_op),
    LibraryProduct("libtensorstore_index_space_mark_explicit_op", :libtensorstore_index_space_mark_explicit_op),
    LibraryProduct("libtensorstore_index_space_numpy_indexing_spec", :libtensorstore_index_space_numpy_indexing_spec),
    LibraryProduct("libtensorstore_index_space_output_index_method", :libtensorstore_index_space_output_index_method),
    LibraryProduct("libtensorstore_index_space_single_index_slice_op", :libtensorstore_index_space_single_index_slice_op),
    LibraryProduct("libtensorstore_index_space_transform_broadcastable_array", :libtensorstore_index_space_transform_broadcastable_array),
    LibraryProduct("libtensorstore_index_space_transformed_array", :libtensorstore_index_space_transformed_array),
    LibraryProduct("libtensorstore_index_space_translate_op", :libtensorstore_index_space_translate_op),
    LibraryProduct("libtensorstore_index_space_transpose_op", :libtensorstore_index_space_transpose_op),
    LibraryProduct("libtensorstore_internal_async_write_array", :libtensorstore_internal_async_write_array),
    LibraryProduct("libtensorstore_internal_benchmark_metric_utils", :libtensorstore_internal_benchmark_metric_utils),
    LibraryProduct("libtensorstore_internal_box_difference", :libtensorstore_internal_box_difference),
    LibraryProduct("libtensorstore_internal_cache", :libtensorstore_internal_cache),
    LibraryProduct("libtensorstore_internal_cache_async_cache", :libtensorstore_internal_cache_async_cache),
    LibraryProduct("libtensorstore_internal_cache_cache_pool_resource", :libtensorstore_internal_cache_cache_pool_resource),
    LibraryProduct("libtensorstore_internal_cache_chunk_cache", :libtensorstore_internal_cache_chunk_cache),
    LibraryProduct("libtensorstore_internal_cache_kvs_backed_cache", :libtensorstore_internal_cache_kvs_backed_cache),
    LibraryProduct("libtensorstore_internal_cache_kvs_backed_cache_testutil", :libtensorstore_internal_cache_kvs_backed_cache_testutil),
    LibraryProduct("libtensorstore_internal_cache_kvs_backed_chunk_cache", :libtensorstore_internal_cache_kvs_backed_chunk_cache),
    LibraryProduct("libtensorstore_internal_chunk_grid_specification", :libtensorstore_internal_chunk_grid_specification),
    LibraryProduct("libtensorstore_internal_compression_blosc", :libtensorstore_internal_compression_blosc),
    LibraryProduct("libtensorstore_internal_compression_blosc_compressor", :libtensorstore_internal_compression_blosc_compressor),
    LibraryProduct("libtensorstore_internal_compression_bzip2_compressor", :libtensorstore_internal_compression_bzip2_compressor),
    LibraryProduct("libtensorstore_internal_compression_json_specified_compressor", :libtensorstore_internal_compression_json_specified_compressor),
    LibraryProduct("libtensorstore_internal_compression_neuroglancer_compressed_segmentation", :libtensorstore_internal_compression_neuroglancer_compressed_segmentation),
    LibraryProduct("libtensorstore_internal_compression_xz_compressor", :libtensorstore_internal_compression_xz_compressor),
    LibraryProduct("libtensorstore_internal_compression_zip_details", :libtensorstore_internal_compression_zip_details),
    LibraryProduct("libtensorstore_internal_compression_zlib", :libtensorstore_internal_compression_zlib),
    LibraryProduct("libtensorstore_internal_compression_zlib_compressor", :libtensorstore_internal_compression_zlib_compressor),
    LibraryProduct("libtensorstore_internal_compression_zstd_compressor", :libtensorstore_internal_compression_zstd_compressor),
    LibraryProduct("libtensorstore_internal_concurrency_resource", :libtensorstore_internal_concurrency_resource),
    LibraryProduct("libtensorstore_internal_container_intrusive_red_black_tree", :libtensorstore_internal_container_intrusive_red_black_tree),
    LibraryProduct("libtensorstore_internal_cord_util", :libtensorstore_internal_cord_util),
    LibraryProduct("libtensorstore_internal_data_copy_concurrency_resource", :libtensorstore_internal_data_copy_concurrency_resource),
    LibraryProduct("libtensorstore_internal_data_type_endian_conversion", :libtensorstore_internal_data_type_endian_conversion),
    LibraryProduct("libtensorstore_internal_data_type_random_generator", :libtensorstore_internal_data_type_random_generator),
    LibraryProduct("libtensorstore_internal_decoded_matches", :libtensorstore_internal_decoded_matches),
    LibraryProduct("libtensorstore_internal_digest_sha256", :libtensorstore_internal_digest_sha256),
    LibraryProduct("libtensorstore_internal_dimension_labels", :libtensorstore_internal_dimension_labels),
    LibraryProduct("libtensorstore_internal_env", :libtensorstore_internal_env),
    LibraryProduct("libtensorstore_internal_file_io_concurrency_resource", :libtensorstore_internal_file_io_concurrency_resource),
    LibraryProduct("libtensorstore_internal_grid_chunk_key_ranges", :libtensorstore_internal_grid_chunk_key_ranges),
    LibraryProduct("libtensorstore_internal_grid_chunk_key_ranges_base10", :libtensorstore_internal_grid_chunk_key_ranges_base10),
    LibraryProduct("libtensorstore_internal_grid_partition", :libtensorstore_internal_grid_partition),
    LibraryProduct("libtensorstore_internal_grid_partition_impl", :libtensorstore_internal_grid_partition_impl),
    LibraryProduct("libtensorstore_internal_grid_storage_statistics", :libtensorstore_internal_grid_storage_statistics),
    LibraryProduct("libtensorstore_internal_grpc_client_credentials", :libtensorstore_internal_grpc_client_credentials),
    LibraryProduct("libtensorstore_internal_grpc_peer_address", :libtensorstore_internal_grpc_peer_address),
    LibraryProduct("libtensorstore_internal_grpc_server_credentials", :libtensorstore_internal_grpc_server_credentials),
    LibraryProduct("libtensorstore_internal_grpc_utils", :libtensorstore_internal_grpc_utils),
    LibraryProduct("libtensorstore_internal_http", :libtensorstore_internal_http),
    LibraryProduct("libtensorstore_internal_http_curl_factory", :libtensorstore_internal_http_curl_factory),
    LibraryProduct("libtensorstore_internal_http_curl_handle", :libtensorstore_internal_http_curl_handle),
    LibraryProduct("libtensorstore_internal_http_curl_transport", :libtensorstore_internal_http_curl_transport),
    LibraryProduct("libtensorstore_internal_http_curl_wrappers", :libtensorstore_internal_http_curl_wrappers),
    LibraryProduct("libtensorstore_internal_http_http_header", :libtensorstore_internal_http_http_header),
    LibraryProduct("libtensorstore_internal_http_mock_http_transport", :libtensorstore_internal_http_mock_http_transport),
    LibraryProduct("libtensorstore_internal_http_transport_test_utils", :libtensorstore_internal_http_transport_test_utils),
    LibraryProduct("libtensorstore_internal_image", :libtensorstore_internal_image),
    LibraryProduct("libtensorstore_internal_image_avif", :libtensorstore_internal_image_avif),
    LibraryProduct("libtensorstore_internal_image_bmp", :libtensorstore_internal_image_bmp),
    LibraryProduct("libtensorstore_internal_image_jpeg", :libtensorstore_internal_image_jpeg),
    LibraryProduct("libtensorstore_internal_image_png", :libtensorstore_internal_image_png),
    LibraryProduct("libtensorstore_internal_image_tiff", :libtensorstore_internal_image_tiff),
    LibraryProduct("libtensorstore_internal_image_webp", :libtensorstore_internal_image_webp),
    LibraryProduct("libtensorstore_internal_irregular_grid", :libtensorstore_internal_irregular_grid),
    LibraryProduct("libtensorstore_internal_json", :libtensorstore_internal_json),
    LibraryProduct("libtensorstore_internal_json_array", :libtensorstore_internal_json_array),
    LibraryProduct("libtensorstore_internal_json_binding", :libtensorstore_internal_json_binding),
    LibraryProduct("libtensorstore_internal_json_binding_data_type", :libtensorstore_internal_json_binding_data_type),
    LibraryProduct("libtensorstore_internal_json_binding_raw_bytes_hex", :libtensorstore_internal_json_binding_raw_bytes_hex),
    LibraryProduct("libtensorstore_internal_json_binding_staleness_bound", :libtensorstore_internal_json_binding_staleness_bound),
    LibraryProduct("libtensorstore_internal_json_binding_unit", :libtensorstore_internal_json_binding_unit),
    LibraryProduct("libtensorstore_internal_json_gtest", :libtensorstore_internal_json_gtest),
    LibraryProduct("libtensorstore_internal_json_metadata_matching", :libtensorstore_internal_json_metadata_matching),
    LibraryProduct("libtensorstore_internal_json_pointer", :libtensorstore_internal_json_pointer),
    LibraryProduct("libtensorstore_internal_json_pprint_python", :libtensorstore_internal_json_pprint_python),
    LibraryProduct("libtensorstore_internal_json_registry", :libtensorstore_internal_json_registry),
    LibraryProduct("libtensorstore_internal_json_same", :libtensorstore_internal_json_same),
    LibraryProduct("libtensorstore_internal_json_value_as", :libtensorstore_internal_json_value_as),
    LibraryProduct("libtensorstore_internal_lock_collection", :libtensorstore_internal_lock_collection),
    LibraryProduct("libtensorstore_internal_log_verbose_flag", :libtensorstore_internal_log_verbose_flag),
    LibraryProduct("libtensorstore_internal_masked_array", :libtensorstore_internal_masked_array),
    LibraryProduct("libtensorstore_internal_masked_array_testutil", :libtensorstore_internal_masked_array_testutil),
    LibraryProduct("libtensorstore_internal_metrics_collect", :libtensorstore_internal_metrics_collect),
    LibraryProduct("libtensorstore_internal_metrics_metadata", :libtensorstore_internal_metrics_metadata),
    LibraryProduct("libtensorstore_internal_metrics_metric_impl", :libtensorstore_internal_metrics_metric_impl),
    LibraryProduct("libtensorstore_internal_metrics_metrics_proto__cpp_library", :libtensorstore_internal_metrics_metrics_proto__cpp_library),
    LibraryProduct("libtensorstore_internal_metrics_metrics_proto__minitable_library", :libtensorstore_internal_metrics_metrics_proto__minitable_library),
    LibraryProduct("libtensorstore_internal_metrics_metrics_proto__upb_library", :libtensorstore_internal_metrics_metrics_proto__upb_library),
    LibraryProduct("libtensorstore_internal_metrics_metrics_proto__upbdefs_library", :libtensorstore_internal_metrics_metrics_proto__upbdefs_library),
    LibraryProduct("libtensorstore_internal_metrics_prometheus", :libtensorstore_internal_metrics_prometheus),
    LibraryProduct("libtensorstore_internal_metrics_protobuf", :libtensorstore_internal_metrics_protobuf),
    LibraryProduct("libtensorstore_internal_metrics_registry", :libtensorstore_internal_metrics_registry),
    LibraryProduct("libtensorstore_internal_multi_barrier", :libtensorstore_internal_multi_barrier),
    LibraryProduct("libtensorstore_internal_nditerable", :libtensorstore_internal_nditerable),
    LibraryProduct("libtensorstore_internal_nditerable_array", :libtensorstore_internal_nditerable_array),
    LibraryProduct("libtensorstore_internal_nditerable_copy", :libtensorstore_internal_nditerable_copy),
    LibraryProduct("libtensorstore_internal_nditerable_data_type_conversion", :libtensorstore_internal_nditerable_data_type_conversion),
    LibraryProduct("libtensorstore_internal_nditerable_elementwise_input_transform", :libtensorstore_internal_nditerable_elementwise_input_transform),
    LibraryProduct("libtensorstore_internal_nditerable_elementwise_output_transform", :libtensorstore_internal_nditerable_elementwise_output_transform),
    LibraryProduct("libtensorstore_internal_nditerable_transformed_array", :libtensorstore_internal_nditerable_transformed_array),
    LibraryProduct("libtensorstore_internal_nditerable_util", :libtensorstore_internal_nditerable_util),
    LibraryProduct("libtensorstore_internal_oauth2", :libtensorstore_internal_oauth2),
    LibraryProduct("libtensorstore_internal_oauth2_fake_private_key", :libtensorstore_internal_oauth2_fake_private_key),
    LibraryProduct("libtensorstore_internal_oauth2_google_auth_provider", :libtensorstore_internal_oauth2_google_auth_provider),
    LibraryProduct("libtensorstore_internal_oauth2_google_auth_test_utils", :libtensorstore_internal_oauth2_google_auth_test_utils),
    LibraryProduct("libtensorstore_internal_oauth2_google_service_account_auth_provider", :libtensorstore_internal_oauth2_google_service_account_auth_provider),
    LibraryProduct("libtensorstore_internal_oauth2_oauth2_auth_provider", :libtensorstore_internal_oauth2_oauth2_auth_provider),
    LibraryProduct("libtensorstore_internal_oauth2_oauth_utils", :libtensorstore_internal_oauth2_oauth_utils),
    LibraryProduct("libtensorstore_internal_open_mode_spec", :libtensorstore_internal_open_mode_spec),
    LibraryProduct("libtensorstore_internal_os_error_code", :libtensorstore_internal_os_error_code),
    LibraryProduct("libtensorstore_internal_os_filesystem", :libtensorstore_internal_os_filesystem),
    LibraryProduct("libtensorstore_internal_os_subprocess", :libtensorstore_internal_os_subprocess),
    LibraryProduct("libtensorstore_internal_os_wstring", :libtensorstore_internal_os_wstring),
    LibraryProduct("libtensorstore_internal_parse_json_matches", :libtensorstore_internal_parse_json_matches),
    LibraryProduct("libtensorstore_internal_path", :libtensorstore_internal_path),
    LibraryProduct("libtensorstore_internal_poly_storage", :libtensorstore_internal_poly_storage),
    LibraryProduct("libtensorstore_internal_preprocessor_cat_test__lib", :libtensorstore_internal_preprocessor_cat_test__lib),
    LibraryProduct("libtensorstore_internal_preprocessor_stringify_test__lib", :libtensorstore_internal_preprocessor_stringify_test__lib),
    LibraryProduct("libtensorstore_internal_rate_limiter", :libtensorstore_internal_rate_limiter),
    LibraryProduct("libtensorstore_internal_rate_limiter_admission_queue", :libtensorstore_internal_rate_limiter_admission_queue),
    LibraryProduct("libtensorstore_internal_rate_limiter_scaling_rate_limiter", :libtensorstore_internal_rate_limiter_scaling_rate_limiter),
    LibraryProduct("libtensorstore_internal_rate_limiter_token_bucket_rate_limiter", :libtensorstore_internal_rate_limiter_token_bucket_rate_limiter),
    LibraryProduct("libtensorstore_internal_ref_counted_string", :libtensorstore_internal_ref_counted_string),
    LibraryProduct("libtensorstore_internal_retry", :libtensorstore_internal_retry),
    LibraryProduct("libtensorstore_internal_riegeli_array_endian_codec", :libtensorstore_internal_riegeli_array_endian_codec),
    LibraryProduct("libtensorstore_internal_riegeli_delimited", :libtensorstore_internal_riegeli_delimited),
    LibraryProduct("libtensorstore_internal_riegeli_find", :libtensorstore_internal_riegeli_find),
    LibraryProduct("libtensorstore_internal_riegeli_json_input", :libtensorstore_internal_riegeli_json_input),
    LibraryProduct("libtensorstore_internal_riegeli_json_output", :libtensorstore_internal_riegeli_json_output),
    LibraryProduct("libtensorstore_internal_storage_statistics", :libtensorstore_internal_storage_statistics),
    LibraryProduct("libtensorstore_internal_testing_concurrent", :libtensorstore_internal_testing_concurrent),
    LibraryProduct("libtensorstore_internal_testing_dynamic", :libtensorstore_internal_testing_dynamic),
    LibraryProduct("libtensorstore_internal_testing_random_seed", :libtensorstore_internal_testing_random_seed),
    LibraryProduct("libtensorstore_internal_testing_scoped_directory", :libtensorstore_internal_testing_scoped_directory),
    LibraryProduct("libtensorstore_internal_thread", :libtensorstore_internal_thread),
    LibraryProduct("libtensorstore_internal_thread_pool_impl", :libtensorstore_internal_thread_pool_impl),
    LibraryProduct("libtensorstore_internal_thread_schedule_at", :libtensorstore_internal_thread_schedule_at),
    LibraryProduct("libtensorstore_internal_thread_task_group_impl", :libtensorstore_internal_thread_task_group_impl),
    LibraryProduct("libtensorstore_internal_thread_thread_pool", :libtensorstore_internal_thread_thread_pool),
    LibraryProduct("libtensorstore_internal_unaligned_data_type_functions", :libtensorstore_internal_unaligned_data_type_functions),
    LibraryProduct("libtensorstore_internal_uri_utils", :libtensorstore_internal_uri_utils),
    LibraryProduct("libtensorstore_internal_utf8", :libtensorstore_internal_utf8),
    LibraryProduct("libtensorstore_kvstore", :libtensorstore_kvstore),
    LibraryProduct("libtensorstore_kvstore_byte_range", :libtensorstore_kvstore_byte_range),
    LibraryProduct("libtensorstore_kvstore_file", :libtensorstore_kvstore_file),
    LibraryProduct("libtensorstore_kvstore_file_file_util", :libtensorstore_kvstore_file_file_util),
    LibraryProduct("libtensorstore_kvstore_file_util", :libtensorstore_kvstore_file_util),
    LibraryProduct("libtensorstore_kvstore_gcs_gcs_resource", :libtensorstore_kvstore_gcs_gcs_resource),
    LibraryProduct("libtensorstore_kvstore_gcs_gcs_testbench", :libtensorstore_kvstore_gcs_gcs_testbench),
    LibraryProduct("libtensorstore_kvstore_gcs_grpc", :libtensorstore_kvstore_gcs_grpc),
    LibraryProduct("libtensorstore_kvstore_gcs_grpc_get_credentials", :libtensorstore_kvstore_gcs_grpc_get_credentials),
    LibraryProduct("libtensorstore_kvstore_gcs_grpc_storage_stub_pool", :libtensorstore_kvstore_gcs_grpc_storage_stub_pool),
    LibraryProduct("libtensorstore_kvstore_gcs_http", :libtensorstore_kvstore_gcs_http),
    LibraryProduct("libtensorstore_kvstore_gcs_http_gcs_resource", :libtensorstore_kvstore_gcs_http_gcs_resource),
    LibraryProduct("libtensorstore_kvstore_gcs_validate", :libtensorstore_kvstore_gcs_validate),
    LibraryProduct("libtensorstore_kvstore_generation", :libtensorstore_kvstore_generation),
    LibraryProduct("libtensorstore_kvstore_http", :libtensorstore_kvstore_http),
    LibraryProduct("libtensorstore_kvstore_http_byte_range_util", :libtensorstore_kvstore_http_byte_range_util),
    LibraryProduct("libtensorstore_kvstore_key_range", :libtensorstore_kvstore_key_range),
    LibraryProduct("libtensorstore_kvstore_memory", :libtensorstore_kvstore_memory),
    LibraryProduct("libtensorstore_kvstore_mock_kvstore", :libtensorstore_kvstore_mock_kvstore),
    LibraryProduct("libtensorstore_kvstore_neuroglancer_uint64_sharded", :libtensorstore_kvstore_neuroglancer_uint64_sharded),
    LibraryProduct("libtensorstore_kvstore_neuroglancer_uint64_sharded_murmurhash3", :libtensorstore_kvstore_neuroglancer_uint64_sharded_murmurhash3),
    LibraryProduct("libtensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded", :libtensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded),
    LibraryProduct("libtensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded_decoder", :libtensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded_decoder),
    LibraryProduct("libtensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded_encoder", :libtensorstore_kvstore_neuroglancer_uint64_sharded_uint64_sharded_encoder),
    LibraryProduct("libtensorstore_kvstore_ocdbt", :libtensorstore_kvstore_ocdbt),
    LibraryProduct("libtensorstore_kvstore_ocdbt_config", :libtensorstore_kvstore_ocdbt_config),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_btree_node_identifier", :libtensorstore_kvstore_ocdbt_distributed_btree_node_identifier),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_btree_node_write_mutation", :libtensorstore_kvstore_ocdbt_distributed_btree_node_write_mutation),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_btree_writer", :libtensorstore_kvstore_ocdbt_distributed_btree_writer),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_cooperator", :libtensorstore_kvstore_ocdbt_distributed_cooperator),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_cooperator_cc_grpc", :libtensorstore_kvstore_ocdbt_distributed_cooperator_cc_grpc),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_cooperator_proto__cpp_library", :libtensorstore_kvstore_ocdbt_distributed_cooperator_proto__cpp_library),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_cooperator_proto__minitable_library", :libtensorstore_kvstore_ocdbt_distributed_cooperator_proto__minitable_library),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_cooperator_proto__upb_library", :libtensorstore_kvstore_ocdbt_distributed_cooperator_proto__upb_library),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_cooperator_proto__upbdefs_library", :libtensorstore_kvstore_ocdbt_distributed_cooperator_proto__upbdefs_library),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_coordinator_cc_grpc", :libtensorstore_kvstore_ocdbt_distributed_coordinator_cc_grpc),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_coordinator_proto__cpp_library", :libtensorstore_kvstore_ocdbt_distributed_coordinator_proto__cpp_library),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_coordinator_proto__minitable_library", :libtensorstore_kvstore_ocdbt_distributed_coordinator_proto__minitable_library),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_coordinator_proto__upb_library", :libtensorstore_kvstore_ocdbt_distributed_coordinator_proto__upb_library),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_coordinator_proto__upbdefs_library", :libtensorstore_kvstore_ocdbt_distributed_coordinator_proto__upbdefs_library),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_coordinator_server", :libtensorstore_kvstore_ocdbt_distributed_coordinator_server),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_lease_cache_for_cooperator", :libtensorstore_kvstore_ocdbt_distributed_lease_cache_for_cooperator),
    LibraryProduct("libtensorstore_kvstore_ocdbt_distributed_rpc_security", :libtensorstore_kvstore_ocdbt_distributed_rpc_security),
    LibraryProduct("libtensorstore_kvstore_ocdbt_dump_util", :libtensorstore_kvstore_ocdbt_dump_util),
    LibraryProduct("libtensorstore_kvstore_ocdbt_format", :libtensorstore_kvstore_ocdbt_format),
    LibraryProduct("libtensorstore_kvstore_ocdbt_format_dump", :libtensorstore_kvstore_ocdbt_format_dump),
    LibraryProduct("libtensorstore_kvstore_ocdbt_io_coalesce_kvstore", :libtensorstore_kvstore_ocdbt_io_coalesce_kvstore),
    LibraryProduct("libtensorstore_kvstore_ocdbt_io_handle", :libtensorstore_kvstore_ocdbt_io_handle),
    LibraryProduct("libtensorstore_kvstore_ocdbt_io_indirect_data_kvstore_driver", :libtensorstore_kvstore_ocdbt_io_indirect_data_kvstore_driver),
    LibraryProduct("libtensorstore_kvstore_ocdbt_io_indirect_data_writer", :libtensorstore_kvstore_ocdbt_io_indirect_data_writer),
    LibraryProduct("libtensorstore_kvstore_ocdbt_io_io_handle_impl", :libtensorstore_kvstore_ocdbt_io_io_handle_impl),
    LibraryProduct("libtensorstore_kvstore_ocdbt_io_manifest_cache", :libtensorstore_kvstore_ocdbt_io_manifest_cache),
    LibraryProduct("libtensorstore_kvstore_ocdbt_io_node_cache", :libtensorstore_kvstore_ocdbt_io_node_cache),
    LibraryProduct("libtensorstore_kvstore_ocdbt_non_distributed_btree_writer", :libtensorstore_kvstore_ocdbt_non_distributed_btree_writer),
    LibraryProduct("libtensorstore_kvstore_ocdbt_non_distributed_create_new_manifest", :libtensorstore_kvstore_ocdbt_non_distributed_create_new_manifest),
    LibraryProduct("libtensorstore_kvstore_ocdbt_non_distributed_list", :libtensorstore_kvstore_ocdbt_non_distributed_list),
    LibraryProduct("libtensorstore_kvstore_ocdbt_non_distributed_list_versions", :libtensorstore_kvstore_ocdbt_non_distributed_list_versions),
    LibraryProduct("libtensorstore_kvstore_ocdbt_non_distributed_read", :libtensorstore_kvstore_ocdbt_non_distributed_read),
    LibraryProduct("libtensorstore_kvstore_ocdbt_non_distributed_read_version", :libtensorstore_kvstore_ocdbt_non_distributed_read_version),
    LibraryProduct("libtensorstore_kvstore_ocdbt_non_distributed_staged_mutations", :libtensorstore_kvstore_ocdbt_non_distributed_staged_mutations),
    LibraryProduct("libtensorstore_kvstore_ocdbt_non_distributed_storage_generation", :libtensorstore_kvstore_ocdbt_non_distributed_storage_generation),
    LibraryProduct("libtensorstore_kvstore_ocdbt_non_distributed_write_nodes", :libtensorstore_kvstore_ocdbt_non_distributed_write_nodes),
    LibraryProduct("libtensorstore_kvstore_ocdbt_test_util", :libtensorstore_kvstore_ocdbt_test_util),
    LibraryProduct("libtensorstore_kvstore_s3", :libtensorstore_kvstore_s3),
    LibraryProduct("libtensorstore_kvstore_s3_credentials_default_credential_provider", :libtensorstore_kvstore_s3_credentials_default_credential_provider),
    LibraryProduct("libtensorstore_kvstore_s3_credentials_ec2_credential_provider", :libtensorstore_kvstore_s3_credentials_ec2_credential_provider),
    LibraryProduct("libtensorstore_kvstore_s3_credentials_environment_credential_provider", :libtensorstore_kvstore_s3_credentials_environment_credential_provider),
    LibraryProduct("libtensorstore_kvstore_s3_credentials_file_credential_provider", :libtensorstore_kvstore_s3_credentials_file_credential_provider),
    LibraryProduct("libtensorstore_kvstore_s3_credentials_test_utils", :libtensorstore_kvstore_s3_credentials_test_utils),
    LibraryProduct("libtensorstore_kvstore_s3_s3_endpoint", :libtensorstore_kvstore_s3_s3_endpoint),
    LibraryProduct("libtensorstore_kvstore_s3_s3_request_builder", :libtensorstore_kvstore_s3_s3_request_builder),
    LibraryProduct("libtensorstore_kvstore_s3_s3_resource", :libtensorstore_kvstore_s3_s3_resource),
    LibraryProduct("libtensorstore_kvstore_s3_validate", :libtensorstore_kvstore_s3_validate),
    LibraryProduct("libtensorstore_kvstore_test_util", :libtensorstore_kvstore_test_util),
    LibraryProduct("libtensorstore_kvstore_tsgrpc", :libtensorstore_kvstore_tsgrpc),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_common", :libtensorstore_kvstore_tsgrpc_common),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_common_proto__cpp_library", :libtensorstore_kvstore_tsgrpc_common_proto__cpp_library),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_common_proto__minitable_library", :libtensorstore_kvstore_tsgrpc_common_proto__minitable_library),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_common_proto__upb_library", :libtensorstore_kvstore_tsgrpc_common_proto__upb_library),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_common_proto__upbdefs_library", :libtensorstore_kvstore_tsgrpc_common_proto__upbdefs_library),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_kvstore_cc_grpc", :libtensorstore_kvstore_tsgrpc_kvstore_cc_grpc),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_kvstore_proto__cpp_library", :libtensorstore_kvstore_tsgrpc_kvstore_proto__cpp_library),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_kvstore_proto__minitable_library", :libtensorstore_kvstore_tsgrpc_kvstore_proto__minitable_library),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_kvstore_proto__upb_library", :libtensorstore_kvstore_tsgrpc_kvstore_proto__upb_library),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_kvstore_proto__upbdefs_library", :libtensorstore_kvstore_tsgrpc_kvstore_proto__upbdefs_library),
    LibraryProduct("libtensorstore_kvstore_tsgrpc_kvstore_server", :libtensorstore_kvstore_tsgrpc_kvstore_server),
    LibraryProduct("libtensorstore_kvstore_zarr3_sharding_indexed", :libtensorstore_kvstore_zarr3_sharding_indexed),
    LibraryProduct("libtensorstore_kvstore_zarr3_sharding_indexed_key", :libtensorstore_kvstore_zarr3_sharding_indexed_key),
    LibraryProduct("libtensorstore_kvstore_zarr3_sharding_indexed_shard_format", :libtensorstore_kvstore_zarr3_sharding_indexed_shard_format),
    LibraryProduct("libtensorstore_kvstore_zip", :libtensorstore_kvstore_zip),
    LibraryProduct("libtensorstore_kvstore_zip_zip_dir_cache", :libtensorstore_kvstore_zip_zip_dir_cache),
    LibraryProduct("libtensorstore_open_mode", :libtensorstore_open_mode),
    LibraryProduct("libtensorstore_progress", :libtensorstore_progress),
    LibraryProduct("libtensorstore_proto_array", :libtensorstore_proto_array),
    LibraryProduct("libtensorstore_proto_array_proto__cpp_library", :libtensorstore_proto_array_proto__cpp_library),
    LibraryProduct("libtensorstore_proto_array_proto__minitable_library", :libtensorstore_proto_array_proto__minitable_library),
    LibraryProduct("libtensorstore_proto_array_proto__upb_library", :libtensorstore_proto_array_proto__upb_library),
    LibraryProduct("libtensorstore_proto_array_proto__upbdefs_library", :libtensorstore_proto_array_proto__upbdefs_library),
    LibraryProduct("libtensorstore_proto_encode_time", :libtensorstore_proto_encode_time),
    LibraryProduct("libtensorstore_proto_index_transform", :libtensorstore_proto_index_transform),
    LibraryProduct("libtensorstore_proto_index_transform_proto__cpp_library", :libtensorstore_proto_index_transform_proto__cpp_library),
    LibraryProduct("libtensorstore_proto_index_transform_proto__minitable_library", :libtensorstore_proto_index_transform_proto__minitable_library),
    LibraryProduct("libtensorstore_proto_index_transform_proto__upb_library", :libtensorstore_proto_index_transform_proto__upb_library),
    LibraryProduct("libtensorstore_proto_index_transform_proto__upbdefs_library", :libtensorstore_proto_index_transform_proto__upbdefs_library),
    LibraryProduct("libtensorstore_proto_proto_binder", :libtensorstore_proto_proto_binder),
    LibraryProduct("libtensorstore_proto_proto_util", :libtensorstore_proto_proto_util),
    LibraryProduct("libtensorstore_proto_protobuf_matchers", :libtensorstore_proto_protobuf_matchers),
    LibraryProduct("libtensorstore_proto_schema", :libtensorstore_proto_schema),
    LibraryProduct("libtensorstore_proto_schema_proto__cpp_library", :libtensorstore_proto_schema_proto__cpp_library),
    LibraryProduct("libtensorstore_proto_schema_proto__minitable_library", :libtensorstore_proto_schema_proto__minitable_library),
    LibraryProduct("libtensorstore_proto_schema_proto__upb_library", :libtensorstore_proto_schema_proto__upb_library),
    LibraryProduct("libtensorstore_proto_schema_proto__upbdefs_library", :libtensorstore_proto_schema_proto__upbdefs_library),
    LibraryProduct("libtensorstore_rank", :libtensorstore_rank),
    LibraryProduct("libtensorstore_resize_options", :libtensorstore_resize_options),
    LibraryProduct("libtensorstore_schema", :libtensorstore_schema),
    LibraryProduct("libtensorstore_serialization", :libtensorstore_serialization),
    LibraryProduct("libtensorstore_serialization_absl_time", :libtensorstore_serialization_absl_time),
    LibraryProduct("libtensorstore_serialization_batch", :libtensorstore_serialization_batch),
    LibraryProduct("libtensorstore_serialization_function", :libtensorstore_serialization_function),
    LibraryProduct("libtensorstore_serialization_json", :libtensorstore_serialization_json),
    LibraryProduct("libtensorstore_serialization_protobuf", :libtensorstore_serialization_protobuf),
    LibraryProduct("libtensorstore_serialization_registry", :libtensorstore_serialization_registry),
    LibraryProduct("libtensorstore_serialization_status", :libtensorstore_serialization_status),
    LibraryProduct("libtensorstore_spec", :libtensorstore_spec),
    LibraryProduct("libtensorstore_static_cast", :libtensorstore_static_cast),
    LibraryProduct("libtensorstore_strided_layout", :libtensorstore_strided_layout),
    LibraryProduct("libtensorstore_tensorstore", :libtensorstore_tensorstore),
    LibraryProduct("libtensorstore_transaction", :libtensorstore_transaction),
    LibraryProduct("libtensorstore_util_bit_vec", :libtensorstore_util_bit_vec),
    LibraryProduct("libtensorstore_util_constant_vector", :libtensorstore_util_constant_vector),
    LibraryProduct("libtensorstore_util_element_pointer", :libtensorstore_util_element_pointer),
    LibraryProduct("libtensorstore_util_future", :libtensorstore_util_future),
    LibraryProduct("libtensorstore_util_iterate", :libtensorstore_util_iterate),
    LibraryProduct("libtensorstore_util_quote_string", :libtensorstore_util_quote_string),
    LibraryProduct("libtensorstore_util_status", :libtensorstore_util_status),
    LibraryProduct("libtensorstore_util_status_testutil", :libtensorstore_util_status_testutil),
    LibraryProduct("libtensorstore_util_stop_token", :libtensorstore_util_stop_token),
    LibraryProduct("libtensorstore_util_unit", :libtensorstore_util_unit),
    LibraryProduct("libtensorstore_util_utf8_string", :libtensorstore_util_utf8_string),
]

# Dependencies that must be installed before this package can be built
dependencies = [
    # TODO: add compat versions
    HostBuildDependency(PackageSpec("CMake_jll", v"3.24.3")), # we need 3.24
    HostBuildDependency(PackageSpec("protoc_jll", v"26.1")),
    Dependency("Blosc_jll"),
    Dependency("Bzip2_jll"),
    Dependency("Cares_jll"),
    Dependency("JpegTurbo_jll"),
    Dependency("LibCURL_jll"),
    Dependency("Libtiff_jll"),
    Dependency("Lz4_jll"),
    Dependency("OpenSSL_jll"; compat="3.0.8"),
    # Dependency("TinyXML_jll"),
    Dependency("XZ_jll"),
    Dependency("Zlib_jll"),
    Dependency("Zstd_jll"),
    # Dependency("abseil_cpp_jll"),
    Dependency("brotli_jll"),
    Dependency("dav1d_jll"),
    Dependency("libaom_jll"),
    Dependency("libavif_jll"),
    Dependency("libpng_jll"),
    Dependency("libwebp_jll"),
    Dependency("nghttp2_jll"),
    Dependency("nlohmann_json_jll"),
    Dependency("snappy_jll"),
]

# Build the tarballs, and possibly a `build.jl` as well.
# We skip the audit pass because it is too slow (it takes hours and would time out on CI)
build_tarballs(ARGS, name, version, sources, script, platforms, products, dependencies;
               julia_compat="1.6", preferred_gcc_version=v"10", skip_audit=true)
