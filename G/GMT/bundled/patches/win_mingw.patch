diff --git before/gmt-6.2.0/src/gmt_api.c after/gmt-6.2.0/src/gmt_api.c
index 8b317b3..dcf7a07 100644
--- before/gmt-6.2.0/src/gmt_api.c
+++ after/gmt-6.2.0/src/gmt_api.c
@@ -901,7 +901,7 @@ free_and_return:
 
 /* Function to get PPID under Windows is a bit different */
 #ifdef _WIN32
-#include <TlHelp32.h>
+#include <tlhelp32.h>
 GMT_LOCAL int gmtapi_winppid (int pidin) {
 	/* If pidin == 0 get the PPID of current process
 	   otherwise, get the PPID of pidin process
diff --git before/gmt-6.2.0/src/gmt_init.c after/gmt-6.2.0/src/gmt_init.c
index b8772bd..a5fcdc6 100644
--- before/gmt-6.2.0/src/gmt_init.c
+++ after/gmt-6.2.0/src/gmt_init.c
@@ -405,7 +405,7 @@ static struct GMT_HASH keys_hashnode[GMT_N_KEYS];
  /* Local functions */
 
 #if defined (WIN32) /* Use Windows API */
-#include <Windows.h>
+#include <windows.h>
 
 /*! . */
 bool gmtlib_file_lock (struct GMT_CTRL *GMT, int fd) {
diff --git before/gmt-6.2.0/src/gmt_support.c after/gmt-6.2.0/src/gmt_support.c
index d96ecc4..4a48102 100644
--- before/gmt-6.2.0/src/gmt_support.c
+++ after/gmt-6.2.0/src/gmt_support.c
@@ -86,7 +86,7 @@
 #ifndef WIN32
 #include <glob.h>
 #else
-#include <Windows.h>
+#include <windows.h>
 #include <tchar.h>
 #endif
 
@@ -5984,7 +5984,7 @@ GMT_LOCAL int gmtsupport_globerr (const char *path, int eerrno) {
 	return 0;	/* let glob() keep going */
 }
 #else
-/* Build our own glob for Windows, using tips and code from
+/* Build our own glob for windows, using tips and code from
    http://www.thecodingforums.com/threads/globing-on-windows-in-c-c-language.739310/
 
   match a character.
@@ -11364,7 +11364,7 @@ void gmt_sprintf_float (struct GMT_CTRL *GMT, char *string, char *format, double
 #ifndef WIN32
 		sprintf (string, format, x);
 #else
-	{	/* Windows doesn't support %' format */
+	{	/* windows doesn't support %' format */
 		if (use_locale) {
 			char *new_format = gmt_strrep(format, "%'", "%");
 			sprintf (string, new_format, x);
@@ -17498,7 +17498,7 @@ bool gmt_check_executable (struct GMT_CTRL *GMT, char *program, char *arg, char
 	bool answer = false;
 
 	/* Turn off any stderr messages coming to the terminal */
-	if (strchr (program, ' ')) {	/* Command has spaces [most likely under Windows] */
+	if (strchr (program, ' ')) {	/* Command has spaces [most likely under windows] */
 		if (!(program[0] == '\'' || program[0] == '\"'))	/* Not in quotes, place double quotes */
 			snprintf (cmd, PATH_MAX, "\"%s\"", program);
 		else	/* Already has quotes, but these might be double or single */
