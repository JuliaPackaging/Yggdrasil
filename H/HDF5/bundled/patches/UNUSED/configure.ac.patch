--- hdf5-1.14.0.old/configure.ac	2022-12-28 16:18:22
+++ hdf5-1.14.0.new/configure.ac	2023-04-14 16:50:12
@@ -567,16 +567,13 @@
   AC_CHECK_SIZEOF([__float128])
   AC_CHECK_SIZEOF([_Quad])
   AC_CHECK_HEADERS([quadmath.h], [HAVE_QUADMATH=1], [])
-  PAC_FC_LDBL_DIG
 
   AC_SUBST([PAC_C_MAX_REAL_PRECISION])
 
   if test "$ac_cv_sizeof___float128" != 0 && test "$FLT128_DIG" != 0 ; then
     AC_DEFINE([HAVE_FLOAT128], [1], [Determine if __float128 is available])
-    PAC_C_MAX_REAL_PRECISION=$FLT128_DIG
-  else
-    PAC_C_MAX_REAL_PRECISION=$LDBL_DIG
   fi
+  PAC_C_MAX_REAL_PRECISION="$hdf5_cv_PAC_C_MAX_REAL_PRECISION"
   AC_DEFINE_UNQUOTED([PAC_C_MAX_REAL_PRECISION], $PAC_C_MAX_REAL_PRECISION, [Determine the maximum decimal precision in C])
   AC_MSG_RESULT([$PAC_C_MAX_REAL_PRECISION])
 
@@ -668,14 +665,37 @@
 
   ## See if the fortran compiler supports the intrinsic module "ISO_FORTRAN_ENV"
   PAC_PROG_FC_ISO_FORTRAN_ENV
-  ## Check KIND and size of native integer
-  PAC_FC_NATIVE_INTEGER
 
-  ## Find all available KINDs
-  PAC_FC_AVAIL_KINDS
-  ## Find all sizeofs for available KINDs
-  PAC_FC_SIZEOF_INT_KINDS
-  PAC_FC_SIZEOF_REAL_KINDS
+  PAC_FC_ALL_REAL_KINDS="$hdf5_cv_PAC_FC_ALL_REAL_KINDS"
+  PAC_FC_MAX_REAL_PRECISION="$hdf5_cv_PAC_FC_MAX_REAL_PRECISION"
+  PAC_FORTRAN_NUM_INTEGER_KINDS="$hdf5_cv_PAC_FORTRAN_NUM_INTEGER_KINDS"
+  PAC_FC_ALL_INTEGER_KINDS="$hdf5_cv_PAC_FC_ALL_INTEGER_KINDS"
+  PAC_FC_ALL_REAL_KINDS_SIZEOF="$hdf5_cv_PAC_FC_ALL_REAL_KINDS_SIZEOF"
+  PAC_FC_ALL_INTEGER_KINDS_SIZEOF="$hdf5_cv_PAC_FC_ALL_INTEGER_KINDS_SIZEOF"
+  PAC_FORTRAN_NATIVE_INTEGER_KIND="$hdf5_cv_PAC_FORTRAN_NATIVE_INTEGER_KIND"
+  PAC_FORTRAN_NATIVE_INTEGER_SIZEOF="$hdf5_cv_PAC_FORTRAN_NATIVE_INTEGER_SIZEOF"
+  PAC_FORTRAN_NATIVE_REAL_KIND="$hdf5_cv_PAC_FORTRAN_NATIVE_REAL_KIND"
+  PAC_FORTRAN_NATIVE_REAL_SIZEOF="$hdf5_cv_PAC_FORTRAN_NATIVE_REAL_SIZEOF"
+  PAC_FORTRAN_NATIVE_DOUBLE_KIND="$hdf5_cv_PAC_FORTRAN_NATIVE_DOUBLE_KIND"
+  PAC_FORTRAN_NATIVE_DOUBLE_SIZEOF="$hdf5_cv_PAC_FORTRAN_NATIVE_DOUBLE_SIZEOF"
+  HAVE_Fortran_INTEGER_SIZEOF="$hdf5_cv_HAVE_Fortran_INTEGER_SIZEOF"
+  FORTRAN_HAVE_C_LONG_DOUBLE="$hdf5_cv_FORTRAN_HAVE_C_LONG_DOUBLE"
+  FORTRAN_C_LONG_DOUBLE_IS_UNIQUE="$hdf5_cv_FORTRAN_C_LONG_DOUBLE_IS_UNIQUE"
+  H5CONFIG_F_NUM_RKIND="$hdf5_cv_H5CONFIG_F_NUM_RKIND"
+  H5CONFIG_F_RKIND="$hdf5_cv_H5CONFIG_F_RKIND"
+  H5CONFIG_F_RKIND_SIZEOF="$hdf5_cv_H5CONFIG_F_RKIND_SIZEOF"
+  H5CONFIG_F_NUM_IKIND="$hdf5_cv_H5CONFIG_F_NUM_IKIND"
+  H5CONFIG_F_IKIND="$hdf5_cv_H5CONFIG_F_IKIND"
+
+  AC_DEFINE_UNQUOTED([PAC_FC_MAX_REAL_PRECISION], $PAC_FC_MAX_REAL_PRECISION, [Define Fortran Maximum Real Decimal Precision])
+  AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_RKIND], $H5CONFIG_F_NUM_RKIND, [Define number of valid Fortran REAL KINDs])
+  AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_IKIND], $H5CONFIG_F_NUM_IKIND, [Define number of valid Fortran INTEGER KINDs])
+  AC_DEFINE_UNQUOTED([H5CONFIG_F_RKIND], $H5CONFIG_F_RKIND, [Define valid Fortran REAL KINDs])
+  AC_DEFINE_UNQUOTED([H5CONFIG_F_IKIND], $H5CONFIG_F_IKIND, [Define valid Fortran INTEGER KINDs])
+  AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_RKIND], $H5CONFIG_F_NUM_RKIND, [Define number of valid Fortran REAL KINDs])
+  AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_IKIND], $H5CONFIG_F_NUM_IKIND, [Define number of valid Fortran INTEGER KINDs])
+  AC_DEFINE_UNQUOTED([H5CONFIG_F_RKIND], $H5CONFIG_F_RKIND, [Define valid Fortran REAL KINDs])
+  AC_DEFINE_UNQUOTED([H5CONFIG_F_IKIND], $H5CONFIG_F_IKIND, [Define valid Fortran INTEGER KINDs])
 
   AC_SUBST([PAC_FC_ALL_REAL_KINDS])
   AC_SUBST([PAC_FC_MAX_REAL_PRECISION])
