diff --git a/configure.ac b/configure.ac
index d914705..880d678 100644
--- a/configure.ac
+++ b/configure.ac
@@ -832,16 +832,16 @@ if test "X$HDF_FORTRAN" = "Xyes"; then
   MY_LDBL_DIG=0
 
   ## Macro to compare long double and __float128 to see which has higher precision
-  PAC_FC_LDBL_DIG
 
   ## Set results
   if test "$MY_FLT128_DIG" -gt "$MY_LDBL_DIG" ; then
-    PAC_C_MAX_REAL_PRECISION=$MY_FLT128_DIG
     PRECISION_TYPE="(__float128)"
   else
-    PAC_C_MAX_REAL_PRECISION=$MY_LDBL_DIG
     PRECISION_TYPE="(long double)"
   fi
+
+  PAC_C_MAX_REAL_PRECISION="$hdf5_cv_PAC_C_MAX_REAL_PRECISION"
+
   AC_MSG_RESULT([$PAC_C_MAX_REAL_PRECISION $PRECISION_TYPE])
 
   ## Store results in config file
@@ -967,20 +967,37 @@ if test "X$HDF_FORTRAN" = "Xyes"; then
     fi
   fi
 
-  ## Check KIND and size of native integer
-  PAC_FC_NATIVE_INTEGER
-
-  ## Find all available KINDs
-  if test "X$HAVE_ISO_FORTRAN_ENV" = "X1";then
-    PAC_FC_AVAIL_KINDS_F08
-  else
-    PAC_FC_AVAIL_KINDS
-  fi
-
-  ## Find all SIZEOFs for available KINDs
-  PAC_FC_SIZEOF_INT_KINDS
-  PAC_FC_SIZEOF_REAL_KINDS
-
+ PAC_FC_ALL_REAL_KINDS="$hdf5_cv_PAC_FC_ALL_REAL_KINDS"
+ PAC_FC_MAX_REAL_PRECISION="$hdf5_cv_PAC_FC_MAX_REAL_PRECISION"
+ PAC_FORTRAN_NUM_INTEGER_KINDS="$hdf5_cv_PAC_FORTRAN_NUM_INTEGER_KINDS"
+ PAC_FC_ALL_INTEGER_KINDS="$hdf5_cv_PAC_FC_ALL_INTEGER_KINDS"
+ PAC_FC_ALL_REAL_KINDS_SIZEOF="$hdf5_cv_PAC_FC_ALL_REAL_KINDS_SIZEOF"
+ PAC_FC_ALL_INTEGER_KINDS_SIZEOF="$hdf5_cv_PAC_FC_ALL_INTEGER_KINDS_SIZEOF"
+ PAC_FORTRAN_NATIVE_INTEGER_KIND="$hdf5_cv_PAC_FORTRAN_NATIVE_INTEGER_KIND"
+ PAC_FORTRAN_NATIVE_INTEGER_SIZEOF="$hdf5_cv_PAC_FORTRAN_NATIVE_INTEGER_SIZEOF"
+ PAC_FORTRAN_NATIVE_REAL_KIND="$hdf5_cv_PAC_FORTRAN_NATIVE_REAL_KIND"
+ PAC_FORTRAN_NATIVE_REAL_SIZEOF="$hdf5_cv_PAC_FORTRAN_NATIVE_REAL_SIZEOF"
+ PAC_FORTRAN_NATIVE_DOUBLE_KIND="$hdf5_cv_PAC_FORTRAN_NATIVE_DOUBLE_KIND"
+ PAC_FORTRAN_NATIVE_DOUBLE_SIZEOF="$hdf5_cv_PAC_FORTRAN_NATIVE_DOUBLE_SIZEOF"
+ HAVE_Fortran_INTEGER_SIZEOF="$hdf5_cv_HAVE_Fortran_INTEGER_SIZEOF"
+ FORTRAN_HAVE_C_LONG_DOUBLE="$hdf5_cv_FORTRAN_HAVE_C_LONG_DOUBLE"
+ FORTRAN_C_LONG_DOUBLE_IS_UNIQUE="$hdf5_cv_FORTRAN_C_LONG_DOUBLE_IS_UNIQUE"
+ H5CONFIG_F_NUM_RKIND="$hdf5_cv_H5CONFIG_F_NUM_RKIND"
+ H5CONFIG_F_RKIND="$hdf5_cv_H5CONFIG_F_RKIND"
+ H5CONFIG_F_RKIND_SIZEOF="$hdf5_cv_H5CONFIG_F_RKIND_SIZEOF"
+ H5CONFIG_F_NUM_IKIND="$hdf5_cv_H5CONFIG_F_NUM_IKIND"
+ H5CONFIG_F_IKIND="$hdf5_cv_H5CONFIG_F_IKIND"
+
+ AC_DEFINE_UNQUOTED([PAC_FC_MAX_REAL_PRECISION], $PAC_FC_MAX_REAL_PRECISION, [Define Fortran Maximum Real Decimal Precision])
+ AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_RKIND], $H5CONFIG_F_NUM_RKIND, [Define number of valid Fortran REAL KINDs])
+ AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_IKIND], $H5CONFIG_F_NUM_IKIND, [Define number of valid Fortran INTEGER KINDs])
+ AC_DEFINE_UNQUOTED([H5CONFIG_F_RKIND], $H5CONFIG_F_RKIND, [Define valid Fortran REAL KINDs])
+ AC_DEFINE_UNQUOTED([H5CONFIG_F_IKIND], $H5CONFIG_F_IKIND, [Define valid Fortran INTEGER KINDs])
+ AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_RKIND], $H5CONFIG_F_NUM_RKIND, [Define number of valid Fortran REAL KINDs])
+ AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_IKIND], $H5CONFIG_F_NUM_IKIND, [Define number of valid Fortran INTEGER KINDs])
+ AC_DEFINE_UNQUOTED([H5CONFIG_F_RKIND], $H5CONFIG_F_RKIND, [Define valid Fortran REAL KINDs])
+ AC_DEFINE_UNQUOTED([H5CONFIG_F_IKIND], $H5CONFIG_F_IKIND, [Define valid Fortran INTEGER KINDs])
+ 
   AC_SUBST([PAC_FC_ALL_REAL_KINDS])
   AC_SUBST([PAC_FC_MAX_REAL_PRECISION])
   AC_SUBST([PAC_FORTRAN_NUM_INTEGER_KINDS])
