--- a/clang/lib/Driver/ToolChains/Gnu.cpp
+++ b/clang/lib/Driver/ToolChains/Gnu.cpp
@@ -2077,7 +2077,8 @@ void Generic_GCC::GCCInstallationDetector::AddDefaultGCCPrefixes(
   static const char *const AArch64LibDirs[] = {"/lib64", "/lib"};
   static const char *const AArch64Triples[] = {
       "aarch64-none-linux-gnu", "aarch64-linux-gnu", "aarch64-redhat-linux",
-      "aarch64-suse-linux", "aarch64-linux-android"};
+      "aarch64-suse-linux", "aarch64-linux-android", "aarch64-linux-musl",
+  };
   static const char *const AArch64beLibDirs[] = {"/lib"};
   static const char *const AArch64beTriples[] = {"aarch64_be-none-linux-gnu",
                                                  "aarch64_be-linux-gnu"};
@@ -2089,6 +2090,10 @@ void Generic_GCC::GCCInstallationDetector::AddDefaultGCCPrefixes(
                                              "armv7hl-redhat-linux-gnueabi",
                                              "armv6hl-suse-linux-gnueabi",
                                              "armv7hl-suse-linux-gnueabi"};
+  static const char *const ARMHFMuslTriples[] = {
+      "arm-linux-musleabihf",    "armv7l-linux-musleabihf",
+      "armv6l-linux-musleabihf",
+  };
   static const char *const ARMebLibDirs[] = {"/lib"};
   static const char *const ARMebTriples[] = {"armeb-linux-gnueabi",
                                              "armeb-linux-androideabi"};
@@ -2105,7 +2110,9 @@ void Generic_GCC::GCCInstallationDetector::AddDefaultGCCPrefixes(
       "x86_64-redhat-linux",    "x86_64-suse-linux",
       "x86_64-manbo-linux-gnu", "x86_64-linux-gnu",
       "x86_64-slackware-linux", "x86_64-unknown-linux",
-      "x86_64-amazon-linux",    "x86_64-linux-android"};
+      "x86_64-amazon-linux",    "x86_64-linux-android",
+      "x86_64-linux-musl",
+  };
   static const char *const X32Triples[] = {"x86_64-linux-gnux32",
                                            "x86_64-pc-linux-gnux32"};
   static const char *const X32LibDirs[] = {"/libx32", "/lib"};
@@ -2116,6 +2123,7 @@ void Generic_GCC::GCCInstallationDetector::AddDefaultGCCPrefixes(
       "i686-redhat-linux",  "i386-redhat-linux",
       "i586-suse-linux",    "i686-montavista-linux",
       "i686-linux-android", "i686-gnu",
+      "i686-linux-musl",
   };
 
   static const char *const M68kLibDirs[] = {"/lib"};
@@ -2321,6 +2329,8 @@ void Generic_GCC::GCCInstallationDetector::AddDefaultGCCPrefixes(
     LibDirs.append(begin(ARMLibDirs), end(ARMLibDirs));
     if (TargetTriple.getEnvironment() == llvm::Triple::GNUEABIHF) {
       TripleAliases.append(begin(ARMHFTriples), end(ARMHFTriples));
+    } else if (TargetTriple.getEnvironment() == llvm::Triple::MuslEABIHF) {
+      TripleAliases.append(begin(ARMHFMuslTriples), end(ARMHFMuslTriples));
     } else {
       TripleAliases.append(begin(ARMTriples), end(ARMTriples));
     }
@@ -2330,6 +2340,8 @@ void Generic_GCC::GCCInstallationDetector::AddDefaultGCCPrefixes(
     LibDirs.append(begin(ARMebLibDirs), end(ARMebLibDirs));
     if (TargetTriple.getEnvironment() == llvm::Triple::GNUEABIHF) {
       TripleAliases.append(begin(ARMebHFTriples), end(ARMebHFTriples));
+    } else if (TargetTriple.getEnvironment() == llvm::Triple::MuslEABIHF) {
+      TripleAliases.append(begin(ARMHFMuslTriples), end(ARMHFMuslTriples));
     } else {
       TripleAliases.append(begin(ARMebTriples), end(ARMebTriples));
     }
