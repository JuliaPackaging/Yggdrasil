diff --git a/cmake/ConfigArchitecture.cmake b/cmake/ConfigArchitecture.cmake
index 87717b7f5..d67381387 100644
--- a/cmake/ConfigArchitecture.cmake
+++ b/cmake/ConfigArchitecture.cmake
@@ -1,7 +1,7 @@
 if(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
     add_definitions(-DSYS_LINUX)
     add_definitions(-DSYS_UNIX)
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "i686")
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "i686")
         add_definitions(-DARCH32BIT)
     endif()
 endif()
@@ -9,7 +9,7 @@ endif()
 if(${CMAKE_SYSTEM_NAME} STREQUAL "FreeBSD")
     add_definitions(-DSYS_FREEBSD)
     add_definitions(-DSYS_UNIX)
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "i386")
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "i386")
         add_definitions(-DARCH32BIT)
     endif()
     add_definitions(-DHAVE_NO_LSEEK64)
@@ -26,8 +26,8 @@ if(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
     #      not needed there. For now live with always on.
 
     # work-around for error in Macports cmake on OSX
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "i386")
-        set(CMAKE_HOST_SYSTEM_PROCESSOR x86_64)
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "i386")
+        set(CMAKE_SYSTEM_PROCESSOR x86_64)
     endif()
 endif()
 
diff --git a/cmake/ConfigInfo.cmake b/cmake/ConfigInfo.cmake
index cae7c7339..cf8e41ef3 100644
--- a/cmake/ConfigInfo.cmake
+++ b/cmake/ConfigInfo.cmake
@@ -1,5 +1,5 @@
 message("-- System                : ${CMAKE_SYSTEM_NAME}")
-message("-- Processor type        : ${CMAKE_HOST_SYSTEM_PROCESSOR}")
+message("-- Processor type        : ${CMAKE_SYSTEM_PROCESSOR}")
 message("-- Fortran compiler flags: ${CMAKE_Fortran_FLAGS} ${CMAKE_Fortran_FLAGS_${cmake_build_type_toupper}}")
 message("-- C compiler flags      : ${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_${cmake_build_type_toupper}}")
 message("-- Libraries             : ${EXTERNAL_LIBS}")
diff --git a/cmake/ConfigTesting.cmake b/cmake/ConfigTesting.cmake
index f43b0e826..6f826bf55 100644
--- a/cmake/ConfigTesting.cmake
+++ b/cmake/ConfigTesting.cmake
@@ -1,6 +1,6 @@
 # set cdash buildname
 set(BUILDNAME
-    "${CMAKE_SYSTEM_NAME}-${CMAKE_HOST_SYSTEM_PROCESSOR}-${CMAKE_Fortran_COMPILER_ID}-${BLAS_TYPE}-${CMAKE_BUILD_TYPE}"
+    "${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}-${CMAKE_Fortran_COMPILER_ID}-${BLAS_TYPE}-${CMAKE_BUILD_TYPE}"
     CACHE STRING
     "Name of build on the dashboard"
     )
diff --git a/cmake/compilers/CFlags.cmake b/cmake/compilers/CFlags.cmake
index 54a841f6a..ecbdde5f3 100644
--- a/cmake/compilers/CFlags.cmake
+++ b/cmake/compilers/CFlags.cmake
@@ -1,11 +1,11 @@
 if(CMAKE_C_COMPILER_ID MATCHES GNU)
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99 -DRESTRICT=restrict -DFUNDERSCORE=1 -DHAVE_NO_LSEEK64 -ffloat-store -Wall")
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "i386")
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "i386")
         set(CMAKE_C_FLAGS
             "${CMAKE_C_FLAGS} -m32"
             )
     endif()
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "x86_64")
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
         set(CMAKE_C_FLAGS
             "${CMAKE_C_FLAGS} -m64"
             )
diff --git a/cmake/compilers/CXXFlags.cmake b/cmake/compilers/CXXFlags.cmake
index 4f877929e..b7cb533bf 100644
--- a/cmake/compilers/CXXFlags.cmake
+++ b/cmake/compilers/CXXFlags.cmake
@@ -1,11 +1,11 @@
 if(CMAKE_CXX_COMPILER_ID MATCHES GNU)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Wall -fno-rtti -fno-exceptions")
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "i386")
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "i386")
         set(CMAKE_CXX_FLAGS
             "${CMAKE_CXX_FLAGS} -m32"
             )
     endif()
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "x86_64")
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
         set(CMAKE_CXX_FLAGS
             "${CMAKE_CXX_FLAGS} -m64"
             )
diff --git a/cmake/compilers/FortranFlags.cmake b/cmake/compilers/FortranFlags.cmake
index 99d870117..28f2218bd 100644
--- a/cmake/compilers/FortranFlags.cmake
+++ b/cmake/compilers/FortranFlags.cmake
@@ -4,12 +4,12 @@ if(CMAKE_Fortran_COMPILER_ID MATCHES GNU) # this is gfortran
     if(CMAKE_Fortran_COMPILER_VERSION VERSION_GREATER 10.0.0)
         set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -fallow-invalid-boz -fallow-argument-mismatch")
     endif()
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "i386")
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "i386")
         set(CMAKE_Fortran_FLAGS
             "${CMAKE_Fortran_FLAGS} -m32"
             )
     endif()
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "x86_64")
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
         set(CMAKE_Fortran_FLAGS
             "${CMAKE_Fortran_FLAGS} -m64"
             )
@@ -76,10 +76,10 @@ endif()
 if(CMAKE_Fortran_COMPILER_ID MATCHES PGI)
 # Patrick: mcmodel=medium is not available on PGI Free for MacOS X
     if(NOT ${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
-        if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "x86_64")
+        if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
             set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -mcmodel=medium")
         endif()
-        if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "aarch64")
+        if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
             set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -mcmodel=large")
         endif()
     endif()
@@ -98,10 +98,10 @@ endif()
 if(CMAKE_Fortran_COMPILER_ID MATCHES NVHPC)
 # Patrick: mcmodel=medium is not available on PGI Free for MacOS X
     if(NOT ${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
-        if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "x86_64")
+        if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
             set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -mcmodel=medium")
         endif()
-        if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "aarch64")
+        if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
             set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -mcmodel=large")
         endif()
     endif()
diff --git a/cmake/math/MathLibs.cmake b/cmake/math/MathLibs.cmake
index 086c64047..9fd696a17 100644
--- a/cmake/math/MathLibs.cmake
+++ b/cmake/math/MathLibs.cmake
@@ -97,7 +97,7 @@ set(MKL_LAPACK_INCLUDE_PATH_SUFFIXES)
 set(MKL_BLAS_HEADERS   mkl_cblas.h)
 set(MKL_LAPACK_HEADERS mkl_lapack.h)
 
-if(${CMAKE_HOST_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+if(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
     set(MKL_BLAS_LIBRARY_PATH_SUFFIXES   intel64 em64t)
     set(MKL_LAPACK_LIBRARY_PATH_SUFFIXES intel64 em64t)
 else()
@@ -137,7 +137,7 @@ if(MKL_COMPILER_BINDINGS MATCHES Clang)
 endif()
 
 set(_lib_suffix)
-if(${CMAKE_HOST_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+if(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
     if(ENABLE_64BIT_INTEGERS)
         set(_lib_suffix _ilp64)
     else()
Submodule external/gen1int contains modified content
diff --git a/external/gen1int/CMakeLists.txt b/external/gen1int/CMakeLists.txt
index 93e4b46..0c8bcf4 100644
--- a/external/gen1int/CMakeLists.txt
+++ b/external/gen1int/CMakeLists.txt
@@ -39,7 +39,7 @@ if(CMAKE_Fortran_COMPILER_ID MATCHES GNU) # this is gfortran
             "${CMAKE_Fortran_FLAGS} -fdefault-integer-8"
             )
     endif()
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "x86_64")
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
         set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -m64")
     endif()
 endif()
Submodule external/pelib contains modified content
diff --git a/external/pelib/CMakeLists.txt b/external/pelib/CMakeLists.txt
index 09f3cf6..cb7d9f6 100644
--- a/external/pelib/CMakeLists.txt
+++ b/external/pelib/CMakeLists.txt
@@ -79,7 +79,7 @@ message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
 
 message(STATUS "Compiler ID: ${CMAKE_Fortran_COMPILER_ID}")
 message(STATUS "System name: ${CMAKE_SYSTEM_NAME}")
-message(STATUS "System processor: ${CMAKE_HOST_SYSTEM_PROCESSOR}")
+message(STATUS "System processor: ${CMAKE_SYSTEM_PROCESSOR}")
 if(CMAKE_Fortran_COMPILER_ID MATCHES "Intel")
     if(REAL_PRECISION MATCHES "REAL64")
         set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -r8")
@@ -119,7 +119,7 @@ elseif(CMAKE_Fortran_COMPILER_ID MATCHES "GNU")
     endif()
 elseif(CMAKE_Fortran_COMPILER_ID MATCHES "PGI")
     if(NOT CMAKE_SYSTEM_NAME MATCHES "Darwin")
-        if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "aarch64")
+        if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
             set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -mcmodel=large")
         else()
             set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -mcmodel=medium")
@@ -137,7 +137,7 @@ elseif(CMAKE_Fortran_COMPILER_ID MATCHES "NVHPC")
         set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -i8")
     endif()
     if(NOT CMAKE_SYSTEM_NAME MATCHES "Darwin")
-        if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "aarch64")
+        if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
             set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -mcmodel=large")
         else()
             set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -mcmodel=medium")
Submodule external/qfitlib contains modified content
diff --git a/external/qfitlib/cmake/FortranFlags.cmake b/external/qfitlib/cmake/FortranFlags.cmake
index d55cc59..540e842 100644
--- a/external/qfitlib/cmake/FortranFlags.cmake
+++ b/external/qfitlib/cmake/FortranFlags.cmake
@@ -7,7 +7,7 @@ if(CMAKE_Fortran_COMPILER_ID MATCHES GNU) # this is gfortran
     if(CMAKE_Fortran_COMPILER_VERSION VERSION_GREATER 10.0.0)
         set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -fallow-argument-mismatch")
     endif()
-    if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "x86_64")
+    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
         set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -m64")
     endif()
     if(ENABLE_STATIC_LINKING)
