diff -ru IntelRDFPMathLib20U2.orig/LIBRARY/src/bid32_string.c IntelRDFPMathLib20U2/LIBRARY/src/bid32_string.c
--- IntelRDFPMathLib20U2.orig/LIBRARY/src/bid32_string.c	2018-06-07 20:54:04.000000000 -0400
+++ IntelRDFPMathLib20U2/LIBRARY/src/bid32_string.c	2022-03-28 10:11:47.000000000 -0400
@@ -170,7 +170,7 @@
 #endif
   BID_UINT64 sign_x, coefficient_x = 0, rounded = 0, res;
   int expon_x = 0, sgn_expon, ndigits, add_expon = 0, midpoint =
-    0, rounded_up = 0;
+    0, rounded_up = 0, dround=0;
   int dec_expon_scale = 0, right_radix_leading_zeros = 0, rdx_pt_enc =
     0;
   char c;
@@ -343,10 +343,10 @@
 	break;
 
 	case BID_ROUNDING_DOWN:
-		if(sign_x) { coefficient_x++; rounded_up=1; }
+		if(sign_x) { if(c>'0') {coefficient_x++; rounded_up=1;} else dround=1; }
 		break;
 	case BID_ROUNDING_UP:
-		if(!sign_x) { coefficient_x++; rounded_up=1; }
+		if(!sign_x) { if(c>'0') {coefficient_x++; rounded_up=1;} else dround=1; }
 		break;
 	case BID_ROUNDING_TIES_AWAY:
 		if(c>='5') { coefficient_x++; rounded_up=1; }
@@ -367,8 +367,19 @@
 	midpoint = 0;
 	rounded_up = 1;
       }
-      if (c > '0')
+      if (c > '0') {
 	rounded = 1;
+        if(dround)
+        {
+          dround = 0;
+          coefficient_x ++;
+          rounded_up = 1;
+          if (coefficient_x == 10000000ul) {
+              coefficient_x = 1000000ul; add_expon ++; }
+
+        }
+
+       }
     }
     ps++;
     c = *ps;
diff -ru IntelRDFPMathLib20U2.orig/LIBRARY/src/bid64_string.c IntelRDFPMathLib20U2/LIBRARY/src/bid64_string.c
--- IntelRDFPMathLib20U2.orig/LIBRARY/src/bid64_string.c	2018-06-07 20:54:09.000000000 -0400
+++ IntelRDFPMathLib20U2/LIBRARY/src/bid64_string.c	2022-03-28 10:11:55.000000000 -0400
@@ -256,7 +256,7 @@
 #endif
   BID_UINT64 sign_x, coefficient_x = 0, rounded = 0, res;
   int expon_x = 0, sgn_expon, ndigits, add_expon = 0, midpoint =
-    0, rounded_up = 0;
+    0, rounded_up = 0, dround = 0;
   int dec_expon_scale = 0, right_radix_leading_zeros = 0, rdx_pt_enc =
     0;
   char c;
@@ -423,10 +423,10 @@
 	break;
 
 	case BID_ROUNDING_DOWN:
-		if(sign_x) { coefficient_x++; rounded_up=1; }
+		if(sign_x) { if(c>'0') {coefficient_x++; rounded_up=1;} else dround=1; }
 		break;
 	case BID_ROUNDING_UP:
-		if(!sign_x) { coefficient_x++; rounded_up=1; }
+		if(!sign_x) { if(c>'0') {coefficient_x++; rounded_up=1;} else dround=1; }
 		break;
 	case BID_ROUNDING_TIES_AWAY:
 		if(c>='5') { coefficient_x++; rounded_up=1; }
@@ -447,9 +447,22 @@
 	midpoint = 0;
 	rounded_up = 1;
       }
-      if (c > '0')
+      if (c > '0') {
 	rounded = 1;
+
+       if(dround)
+        {
+          dround = 0;
+          coefficient_x ++;
+          rounded_up = 1;
+
+        if (coefficient_x == 10000000000000000ull) {
+          coefficient_x = 1000000000000000ull; 
+          add_expon = 1; 
+        }
+     }
     }
+   }
     ps++;
     c = *ps;
   }
