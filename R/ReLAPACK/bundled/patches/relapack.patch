diff --git before/ReLAPACK/config.h after/ReLAPACK/config.h
index 99174dc..88f7f7f 100644
--- before/ReLAPACK/config.h
+++ after/ReLAPACK/config.h
@@ -17,7 +17,7 @@
 // Complex BLAS/LAPACK routines return their result in the first argument
 // This option must be enabled when linking to MKL for ctrsyl and ztrsyl to
 // work.
-#define COMPLEX_FUNCTIONS_AS_ROUTINES 0
+#define COMPLEX_FUNCTIONS_AS_ROUTINES 1
 #define BLAS_COMPLEX_FUNCTIONS_AS_ROUTINES COMPLEX_FUNCTIONS_AS_ROUTINES
 #define LAPACK_BLAS_COMPLEX_FUNCTIONS_AS_ROUTINES COMPLEX_FUNCTIONS_AS_ROUTINES
 
@@ -112,7 +112,7 @@
 #define INCLUDE_CTGSYL INCLUDE_XTGSYL
 #define INCLUDE_ZTGSYL INCLUDE_XTGSYL
 
-#define INCLUDE_XGEMMT 0
+#define INCLUDE_XGEMMT 1
 #define INCLUDE_SGEMMT INCLUDE_XGEMMT
 #define INCLUDE_DGEMMT INCLUDE_XGEMMT
 #define INCLUDE_CGEMMT INCLUDE_XGEMMT
diff --git before/ReLAPACK/make.inc after/ReLAPACK/make.inc
index d85186d..75708e9 100644
--- before/ReLAPACK/make.inc
+++ after/ReLAPACK/make.inc
@@ -2,13 +2,11 @@
 LIBNAME = librelapack.a
 
 # compiler options
-CC = gcc
-CFLAGS = -O3 -std=c99 -pedantic
+CC = cc
+CFLAGS = -fpic -O3 -std=c99 -pedantic
 
 # archive creation
 AR = ar
 
 # BLAS / LAPACK link line for test
-LINK_TEST = -Llapack -Lblas -llapack -lblas -lgfortran -lm
-
-# vim: ft=make
+LINK_TEST = -lblastrampoline -lgfortran -lm
diff --git before/ReLAPACK/src/lapack_wrappers.c after/ReLAPACK/src/lapack_wrappers.c
index 4885472..e057bb9 100644
--- before/ReLAPACK/src/lapack_wrappers.c
+++ after/ReLAPACK/src/lapack_wrappers.c
@@ -566,7 +566,8 @@ void LAPACK(sgemmt)(
     const float *B, const int *ldB,
     const float *beta, float *C, const int *ldC
 ) {
-    RELAPACK_sgemmt(uplo, n, A, ldA, info);
+    int info;
+    RELAPACK_sgemmt(uplo, transA, transB, n, k, alpha, A, ldA, B, ldB, beta, C, info);
 }
 #endif
 
@@ -578,7 +579,8 @@ void LAPACK(dgemmt)(
     const double *B, const int *ldB,
     const double *beta, double *C, const int *ldC
 ) {
-    RELAPACK_dgemmt(uplo, n, A, ldA, info);
+    int info;
+    RELAPACK_dgemmt(uplo, transA, transB, n, k, alpha, A, ldA, B, ldB, beta, C, info);
 }
 #endif
 
@@ -590,7 +592,8 @@ void LAPACK(cgemmt)(
     const float *B, const int *ldB,
     const float *beta, float *C, const int *ldC
 ) {
-    RELAPACK_cgemmt(uplo, n, A, ldA, info);
+    int info;
+    RELAPACK_cgemmt(uplo, transA, transB, n, k, alpha, A, ldA, B, ldB, beta, C, info);
 }
 #endif
 
@@ -602,6 +605,7 @@ void LAPACK(zgemmt)(
     const double *B, const int *ldB,
     const double *beta, double *C, const int *ldC
 ) {
-    RELAPACK_zgemmt(uplo, n, A, ldA, info);
+    int info;
+    RELAPACK_zgemmt(uplo, transA, transB, n, k, alpha, A, ldA, B, ldB, beta, C, info);
 }
 #endif
diff --git before/ReLAPACK/src/relapack.h after/ReLAPACK/src/relapack.h
index 2cb061c..b33e1fb 100644
--- before/ReLAPACK/src/relapack.h
+++ after/ReLAPACK/src/relapack.h
@@ -7,14 +7,14 @@
 
 // add an underscore to BLAS routines (or not)
 #if BLAS_UNDERSCORE
-#define BLAS(routine) routine ## _
+#define BLAS(routine) routine ## _64
 #else
 #define BLAS(routine) routine
 #endif
 
 // add an underscore to LAPACK routines (or not)
 #if LAPACK_UNDERSCORE
-#define LAPACK(routine) routine ## _
+#define LAPACK(routine) routine ## _64
 #else
 #define LAPACK(routine) routine
 #endif
