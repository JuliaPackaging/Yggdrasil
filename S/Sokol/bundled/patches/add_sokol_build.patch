commit dcda3ba0412a147e85af5e3cf727efc67f4392d8
Author: Chetan Vardhan <chetan.verdhan8@gmail.com>
Date:   Sat Feb 1 02:09:42 2025 +0900

    add sokol build

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..54251b8
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,46 @@
+cmake_minimum_required(VERSION 3.0)
+project(sokol)
+set(CMAKE_C_STANDARD 11)
+if (CMAKE_SYSTEM_NAME STREQUAL Emscripten)
+    set(CMAKE_EXECUTABLE_SUFFIX ".html")
+endif()
+
+# Linux -pthread shenanigans
+if (CMAKE_SYSTEM_NAME STREQUAL Linux)
+    set(THREADS_PREFER_PTHREAD_FLAG ON)
+    find_package(Threads REQUIRED)
+endif()
+
+#=== LIBRARY: sokol
+# add headers to the the file list because they are useful to have in IDEs
+set(SOKOL_HEADERS
+    sokol_gfx.h
+    sokol_app.h
+    sokol_audio.h
+    sokol_time.h
+    sokol_glue.h
+    sokol_log.h
+    sokol_args.h
+    sokol_fetch.h
+    )
+add_library(sokol SHARED sokol.c ${SOKOL_HEADERS})
+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)
+    set(exe_type MACOSX_BUNDLE)    
+    # compile sokol.c as Objective-C
+    target_compile_options(sokol PRIVATE -x objective-c)
+    target_link_libraries(sokol
+        "-framework QuartzCore"
+        "-framework Cocoa"
+        "-framework MetalKit"
+        "-framework Metal"
+        "-framework AudioToolbox")
+else()
+    if (CMAKE_SYSTEM_NAME STREQUAL Linux)
+        target_link_libraries(sokol INTERFACE X11 Xi Xcursor GL asound dl m)
+        target_link_libraries(sokol PUBLIC Threads::Threads)
+    endif()
+    if(CMAKE_SYSTEM_NAME STREQUAL Windows)
+        set(exe_type WIN32)
+    endif()
+endif()
+target_include_directories(sokol INTERFACE sokol)
diff --git a/sokol.c b/sokol.c
new file mode 100644
index 0000000..340e4b3
--- /dev/null
+++ b/sokol.c
@@ -0,0 +1,24 @@
+#define SOKOL_IMPL
+#if defined(_MSC_VER)
+#define SOKOL_D3D11
+#define SOKOL_LOG(str) OutputDebugStringA(str)
+#elif defined(__EMSCRIPTEN__)
+#define SOKOL_GLES2
+#elif defined(__APPLE__)
+// NOTE: on macOS, sokol.c is compiled explicitly as ObjC 
+#include <TargetConditionals.h>
+#define SOKOL_METAL
+#else
+#define SOKOL_GLCORE
+#endif
+
+#define SOKOL_WIN32_FORCE_MAIN
+#include "sokol_audio.h"
+#include "sokol_app.h"
+#include "sokol_gfx.h"
+#include "sokol_time.h"
+#include "sokol_glue.h"
+#include "sokol_fetch.h"
+#include "sokol_log.h"
+#include "sokol_args.h"
+

