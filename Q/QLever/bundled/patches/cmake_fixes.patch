diff --git a/CMakeLists.txt b/CMakeLists.txt
index 49506e4..9ae5dd0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.8.4)
+cmake_minimum_required(VERSION 3.16)
 project(QLever C CXX)
 
 # C/C++ Versions
@@ -46,11 +46,14 @@ endif ()
 ###############################
 add_subdirectory(third_party/antlr4/runtime/Cpp EXCLUDE_FROM_ALL)
 target_compile_options(antlr4_static PUBLIC -Wno-attributes -Wno-implicit-fallthrough -Wno-ambiguous-reversed-operator)
-include_directories(third_party/antlr4/runtime/Cpp/runtime/src)
+# include_directories(third_party/antlr4/runtime/Cpp/runtime/src)
+include_directories(${ANTLR_INCLUDE_DIR})
 
 ################################
 # Threading
 ################################
+set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
+set(THREADS_PREFER_PTHREAD_FLAG TRUE)
 find_package(Threads REQUIRED)
 
 #################################
@@ -111,8 +114,9 @@ set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG}")
 ################################
 # GTEST
 ################################
-add_subdirectory(third_party/googletest/googletest EXCLUDE_FROM_ALL)
-include_directories(third_party/googletest/googletest/include)
+# add_subdirectory(third_party/googletest/googletest EXCLUDE_FROM_ALL)
+# include_directories(third_party/googletest/googletest/include)
+include_directories(${GTEST_INCLUDE_DIR})
 
 ################################
 # NLOHNMANN-JSON
@@ -211,8 +215,8 @@ add_subdirectory(src/parser)
 add_subdirectory(src/engine)
 add_subdirectory(src/index)
 add_subdirectory(src/util)
-enable_testing()
-add_subdirectory(test)
+# enable_testing()
+# add_subdirectory(test)
 
 
 
@@ -222,25 +226,25 @@ configure_file(src/web/script.js script.js)
 
 
 add_executable(IndexBuilderMain src/index/IndexBuilderMain.cpp)
-target_link_libraries(IndexBuilderMain index ${CMAKE_THREAD_LIBS_INIT})
+target_link_libraries(IndexBuilderMain index Threads::Threads)
 
 add_executable(CreatePatternsMain src/index/CreatePatternsMain.cpp src/util/ConstexprSmallString.h)
-target_link_libraries(CreatePatternsMain index ${CMAKE_THREAD_LIBS_INIT})
+target_link_libraries(CreatePatternsMain index Threads::Threads)
 
 add_executable(ServerMain src/ServerMain.cpp)
-target_link_libraries (ServerMain engine ${CMAKE_THREAD_LIBS_INIT})
+target_link_libraries (ServerMain engine Threads::Threads)
 
 add_executable(PrefixHeuristicEvaluatorMain src/PrefixHeuristicEvaluatorMain.cpp)
-target_link_libraries (PrefixHeuristicEvaluatorMain index ${CMAKE_THREAD_LIBS_INIT})
+target_link_libraries (PrefixHeuristicEvaluatorMain index Threads::Threads)
 
 add_executable(TurtleParserMain src/TurtleParserMain.cpp)
-target_link_libraries(TurtleParserMain parser ${CMAKE_THREAD_LIBS_INIT} absl::flat_hash_map)
+target_link_libraries(TurtleParserMain parser Threads::Threads absl::flat_hash_map)
 
 add_executable(VocabularyMergerMain src/VocabularyMergerMain.cpp)
-target_link_libraries(VocabularyMergerMain index ${CMAKE_THREAD_LIBS_INIT})
+target_link_libraries(VocabularyMergerMain index Threads::Threads)
 
 add_executable(PermutationExporterMain src/index/PermutationExporterMain.cpp)
-target_link_libraries(PermutationExporterMain index ${CMAKE_THREAD_LIBS_INIT})
+target_link_libraries(PermutationExporterMain index Threads::Threads)
 
 #add_executable(TextFilterComparison src/experiments/TextFilterComparison.cpp)
 #target_link_libraries (TextFilterComparison experiments)
diff --git a/src/parser/CMakeLists.txt b/src/parser/CMakeLists.txt
index 1f36195..4457af8 100644
--- a/src/parser/CMakeLists.txt
+++ b/src/parser/CMakeLists.txt
@@ -3,6 +3,8 @@ target_link_libraries(rdfEscaping absl::flat_hash_map ${ICU_LIBRARIES})
 
 add_subdirectory(sparqlParser)
 
+add_library(sparqlParserHelpers SparqlParserHelpers.h SparqlParserHelpers.cpp)
+
 add_library(parser
         SparqlParser.h SparqlParser.cpp
         ParsedQuery.h ParsedQuery.cpp
@@ -15,8 +17,6 @@ add_library(parser
         PropertyPathParser.h PropertyPathParser.cpp
         SparqlLexer.h SparqlLexer.cpp
         TokenizerCtre.h TurtleTokenId.h
-        ParallelBuffer.cpp
-        SparqlParserHelpers.h SparqlParserHelpers.cpp)
-target_link_libraries(parser sparqlParser sparqlExpressions rdfEscaping re2 absl::flat_hash_map)
-
+        ParallelBuffer.cpp)
+target_link_libraries(parser sparqlParserHelpers sparqlParser sparqlExpressions rdfEscaping re2 absl::flat_hash_map)
 
