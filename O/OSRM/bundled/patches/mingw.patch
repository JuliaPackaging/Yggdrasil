diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1876d6b85..fd793de08 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -256,6 +256,18 @@ elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
     add_dependency_defines(-DWIN32)
     set(OPTIONAL_SOCKET_LIBS ws2_32 wsock32)
   endif()
+
+    if (MINGW)
+        set(MINGW_FLAGS "-U__STRICT_ANSI__")
+        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${MINGW_FLAGS}")
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${MINGW_FLAGS}")
+        set(OSRM_CXXFLAGS "${OSRM_CXXFLAGS} ${MINGW_FLAGS}")
+        add_dependency_defines(-U__STRICT_ANSI__)
+       add_compile_definitions(-U__STRICT_ANSI__)
+       add_compile_definitions(-D_WIN32_WINNT=0x0600)
+    endif()
+
+
 elseif(CMAKE_CXX_COMPILER_ID MATCHES "Intel")
   # using Intel C++
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-intel -wd10237 -Wall -ipo -fPIC")
@@ -266,7 +278,7 @@ elseif(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
   add_dependency_defines(-DBOOST_LIB_DIAGNOSTIC)
   add_dependency_defines(-D_CRT_SECURE_NO_WARNINGS)
   add_dependency_defines(-DNOMINMAX) # avoid min and max macros that can break compilation
-  add_dependency_defines(-D_WIN32_WINNT=0x0501)
+  add_dependency_defines(-D_WIN32_WINNT=0x0600)
   add_dependency_defines(-DXML_STATIC)
   find_library(ws2_32_LIBRARY_PATH ws2_32)
   target_link_libraries(osrm-extract wsock32 ws2_32)
diff --git a/include/util/isatty.hpp b/include/util/isatty.hpp
index 05fbd5aaf..a449356e8 100644
--- a/include/util/isatty.hpp
+++ b/include/util/isatty.hpp
@@ -5,7 +5,7 @@
 #if defined(__unix__) || (defined(__APPLE__) && defined(__MACH__))
 #include <unistd.h>
 #else
-#ifdef WIN32
+#if defined(__MINGW32__) || defined(__CYGWIN__)
 #include <io.h>
 #define isatty _isatty
 #define fileno _fileno
