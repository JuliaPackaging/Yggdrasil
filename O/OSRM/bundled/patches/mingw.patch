--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,6 +1,11 @@
 cmake_minimum_required(VERSION 3.18)
 
-set(CMAKE_CXX_STANDARD 17)
+if(MINGW)
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17")
+else()
+  set(CMAKE_CXX_STANDARD 17)
+endif()
+
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 set(CMAKE_CXX_EXTENSIONS OFF)
 
@@ -253,6 +258,10 @@ elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
   # using GCC
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 ${COLOR_FLAG} -fPIC -ftemplate-depth=1024")
 
+  if(MINGW)
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -U__STRICT_ANSI__")
+  endif()
+
   if(WIN32) # using mingw
     add_dependency_defines(-DWIN32)
     set(OPTIONAL_SOCKET_LIBS ws2_32 wsock32)
@@ -374,9 +383,28 @@ if(ENABLE_CONAN)
   add_dependency_includes(${CONAN_INCLUDE_DIRS_LUA})
   add_dependency_includes(${CONAN_INCLUDE_DIRS_TBB})
 
-  set(Boost_USE_STATIC_LIBS ON)
-  find_package(Boost REQUIRED COMPONENTS ${BOOST_COMPONENTS})
-  set(Boost_DATE_TIME_LIBRARY "${Boost_date_time_LIB_TARGETS}")
+  # boost
+  # FROM: https://stackoverflow.com/questions/28887680/linking-boost-library-with-boost-use-static-lib-off-on-windows
+  set(Boost_NO_SYSTEM_PATHS true)
+  set (Boost_USE_STATIC_LIBS OFF CACHE BOOL "use static libraries from Boost")
+  set (Boost_USE_MULTITHREADED ON)
+  find_package(Boost REQUIRED 
+    COMPONENTS
+    system program_options thread filesystem
+    date_time chrono timer regex serialization
+    )
+  include_directories(${Boost_INCLUDE_DIRS})
+  link_libraries(${Boost_LIBRARIES})
+
+  if (WIN32)
+    # disable autolinking in boost
+    add_definitions( -DBOOST_ALL_NO_LIB )
+
+    # force all boost libraries to dynamic link (we already disabled
+    # autolinking, so I don't know why we need this, but we do!)
+    add_definitions( -DBOOST_ALL_DYN_LINK )
+  endif()
+    set(Boost_DATE_TIME_LIBRARY "${Boost_date_time_LIB_TARGETS}")
   set(Boost_CHRONO_LIBRARY "${Boost_chrono_LIB_TARGETS}")
   set(Boost_PROGRAM_OPTIONS_LIBRARY "${Boost_program_options_LIB_TARGETS}")
   set(Boost_FILESYSTEM_LIBRARY "${Boost_filesystem_LIB_TARGETS}")
diff --git a/cmake/warnings.cmake b/cmake/warnings.cmake
index ad9cfb086..6043613f6 100644
--- a/cmake/warnings.cmake
+++ b/cmake/warnings.cmake
@@ -79,15 +79,19 @@ add_warning(sizeof-array-argument)
 add_warning(switch-bool)
 add_warning(tautological-compare)
 add_warning(trampolines)
-no_warning(c++17-extensions)
 # TODO: these warnings are not enabled by default, but we consider them as useful and good to enable in the future
-no_warning(implicit-int-conversion)
-no_warning(implicit-float-conversion)
-no_warning(unused-member-function)
 no_warning(old-style-cast)
 no_warning(non-virtual-dtor)
 no_warning(float-conversion)
 no_warning(sign-conversion)
-no_warning(shorten-64-to-32)
 no_warning(padded)
-no_warning(missing-noreturn)
\ No newline at end of file
+no_warning(missing-noreturn)
+
+# These calls are not available on mingw
+if(NOT MINGW)
+    no_warning(shorten-64-to-32)
+    no_warning(implicit-float-conversion)
+    no_warning(unused-member-function)
+    no_warning(implicit-int-conversion)
+    no_warning(c++17-extensions)
+endif()
