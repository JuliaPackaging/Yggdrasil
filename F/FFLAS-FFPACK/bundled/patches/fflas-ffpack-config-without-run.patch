diff -ur fflas-ffpack-2.5.0.orig/macros/common.m4 fflas-ffpack-2.5.0/macros/common.m4
--- fflas-ffpack-2.5.0.orig/macros/common.m4	2021-09-21 13:23:36.000000000 +0000
+++ fflas-ffpack-2.5.0/macros/common.m4	2024-10-21 18:12:32.283126751 +0000
@@ -137,18 +137,8 @@
     CXXFLAGS="${OPTIM_FLAGS} ${CXXFLAGS}"
     AS_CASE([$target],
             [*i386*|*i686*],
-                [AC_RUN_IFELSE([AC_LANG_PROGRAM([[]], [[#ifdef __SSE__
-                                                          return 0;
-                                                        #else
-                                                          return 1;
-                                                        #endif
-                                                        ]])],
                     [AC_MSG_NOTICE("Adding '-mfpmath=sse' to OPTIM_FLAGS")
                      OPTIM_FLAGS+=" -mfpmath=sse"],
-                    [], # either the flag is not recognized by the compiler or
-                        # SSE is not avail => do nothing
-                    [AC_MSG_NOTICE("If available you may want to add
-                     '-mfpmath=sse' to flags")])] # cross-compilation case
                 []) # not on i386 nor i686 => do nothing
     CXXFLAGS="${BACKUP_CXXFLAGS}"
     ])
diff -ur fflas-ffpack-2.5.0.orig/macros/debug.m4 fflas-ffpack-2.5.0/macros/debug.m4
--- fflas-ffpack-2.5.0.orig/macros/debug.m4	2021-09-21 13:23:36.000000000 +0000
+++ fflas-ffpack-2.5.0/macros/debug.m4	2024-10-21 18:15:38.707125128 +0000
@@ -69,77 +69,6 @@
 
 AC_DEFUN([AC_COMPILER_NAME], [
 		AC_MSG_CHECKING(for family name of compiler)
-
-		dnl CHECKING for various compilers
-		dnl ICC ?
-		AC_TRY_RUN( [
-           #ifdef __INTEL_COMPILER
-              int main() { return 0 ; }
-           #else
-              not intel
-           #endif],
-		      [ AC_MSG_RESULT(icc)
-            CCNAM=icc
-            AC_SUBST(CCNAM)
-		])
-
-    dnl PATHSCALE > 4 ?
-    AS_IF([ test -z "${CCNAM}"], [
-        AC_TRY_RUN( [
-            #ifdef __PATHSCALE__
-               int main() { return !(__PATHCC__ >= 4) ; }
-            #else
-               not ekopath either.
-            #endif],
-            [ CCNAM=eko ])
-        ])
-
-    dnl CLANG >= 3.9 ?
-		AS_IF([ test -z "${CCNAM}"], [
-			AC_TRY_RUN( [
-				#ifdef __clang__
-				   int main() { return !((__clang_major__ >= 4) ||(__clang_major__  ==3 && __clang_minor__ >= 9) ) ; }
-			   #else
-				   not clang3.9
-				#endif], [
-		CCNAM=clang
-		AC_SUBST(CCNAM)
-		AC_MSG_RESULT($CCNAM) ])
-		])
-
-  dnl 3.1 < CLANG <=  3.8 ?
-		AS_IF([ test -z "${CCNAM}"], [
-			AC_TRY_RUN( [
-				#ifdef __clang__
-				   int main() { return !(__clang_major__  ==3 && __clang_minor__ >=1 && __clang_minor__ <=8) ; }
-			   #else
-				   not clang3.8
-				#endif], [
-		CCNAM=clang38
-		AC_SUBST(CCNAM)
-		AC_MSG_RESULT($CCNAM) ])
-		])
-    
-    dnl GCC >= 5 ?
-    AS_IF([ test -z "${CCNAM}"], [
-        AC_TRY_RUN( [
-            #ifdef __GNUC__
-                int main() { return !(__GNUC__ >= 5 ) ; }
-            #else
-                not gcc neither.
-            #endif],
-            [ CCNAM=gcc ])
-        ])
-
-		dnl  other ?
-
-		AS_IF([ test -z "${CCNAM}"],
-				[ AC_MSG_RESULT(unknown)
-				  CCNAM=unknown
-				  AC_SUBST(CCNAM)
-				  echo
-				  echo " *** unknow compiler. please file a bug "
-				  echo
-				])
-
+    CCNAM=cc
+    AC_SUBST(CCNAM)
 ])
diff -ur fflas-ffpack-2.5.0.orig/macros/fflas-ffpack-blas.m4 fflas-ffpack-2.5.0/macros/fflas-ffpack-blas.m4
--- fflas-ffpack-2.5.0.orig/macros/fflas-ffpack-blas.m4	2020-06-10 08:00:45.000000000 +0000
+++ fflas-ffpack-2.5.0/macros/fflas-ffpack-blas.m4	2024-10-21 18:19:07.891123306 +0000
@@ -63,77 +63,10 @@
                 dnl is there user CBLAS accessible ?
 		AC_MSG_CHECKING(for BLAS)
 
-		AC_TRY_RUN([ ${CODE_CBLAS} ],[
-				blas_found="yes"
-                                is_cblas="yes"
-                                AC_MSG_RESULT(found CBLAS)
-				],[
-                                dnl No, then checking for Fortran BLAS
-                                AC_TRY_RUN(
-                                  [ ${CODE_FBLAS} ],
-                                   [ blas_found="yes"
-                                     is_cblas="no"
-                                     AC_MSG_RESULT(found Fortran BLAS)
-                                   ],[
-                                     dnl No, then checking for  OpenBLAS
-                                     BLAS_LIBS="${BLAS_LIBS} -lopenblas -lpthread"
-                                     AS_CASE([$CCNAM], [gcc*], [BLAS_LIBS="${BLAS_LIBS} -lgfortran"])
-                                     LIBS="${BACKUP_LIBS} ${BLAS_LIBS}"
-				     AC_TRY_RUN(
-					[ ${CODE_CBLAS} ],[
-                                        AC_MSG_RESULT(found OpenBLAS)
-					blas_found="yes"
-                                        is_cblas="yes"
-					AC_SUBST(BLAS_LIBS)
-					],[
-					blas_problem="$problem"
-			                AC_MSG_RESULT(problem)
-					],[
-					blas_found="yes"
-                                        is_cblas="yes"
-			                AC_MSG_RESULT(cross compiling)
-					blas_cross="yes"
-					AC_SUBST(BLAS_LIBS)
-					])
-                                        ],[
-		                       blas_found="yes"
-                                       is_cblas="no"
-			               AC_MSG_RESULT(cross compiling)
-				       blas_cross="yes"
-                                   ])
-				],[
-				blas_found="yes"
-		                AC_MSG_RESULT(cross compiling)
-                                is_cblas="yes"
-				blas_cross="yes"
-				])
-
-		AS_IF([ test "x$blas_found" = "xyes" ],
-				[
-				BLAS_VENDOR="USER"
-				AC_SUBST(BLAS_VENDOR)
-                                AC_DEFINE(HAVE_BLAS,1,[Define if BLAS is available])
-                                AS_IF([test "x$is_cblas" = "xyes" ],[
-                                            AC_DEFINE(HAVE_CBLAS,1,[Define if BLAS is a CBLAS])
-                                      ],[])
-
-				AS_IF([test "x$blas_cross" = "xyes"], [
-					echo "WARNING: You appear to be cross compiling, so there is no way to determine"
-					echo "whether your BLAS are good. I am assuming it is."],[])
-				],
-				[
-                                echo ''
-	echo '*******************************************************************************'
-	echo ' ERROR: BLAS not found!'
-	echo
-	echo ' BLAS routines are required for this library to compile. Please'
-	echo ' make sure BLAS are installed and specify its location with the option'
-	echo ' --with-blas-libs=<libs> and if necessary --with-blas-cflags=<cflags>'
-	echo ' when running configure.'
-	echo '*******************************************************************************'
-	exit 1
-        ])
-
+        BLAS_LIBS="-lblastrampoline -lpthread"
+		blas_found="yes"
+		is_cblas="yes"
+		AC_SUBST(BLAS_LIBS)
 
         dnl	AM_CONDITIONAL(FFLASFFPACK_HAVE_BLAS, test "x$blas_found" = "xyes")
         dnl     AM_CONDITIONAL(FFLASFFPACK_HAVE_CBLAS, test "x$is_cblas" = "xyes")
diff -ur fflas-ffpack-2.5.0.orig/macros/givaro-check.m4 fflas-ffpack-2.5.0/macros/givaro-check.m4
--- fflas-ffpack-2.5.0.orig/macros/givaro-check.m4	2020-06-10 08:00:45.000000000 +0000
+++ fflas-ffpack-2.5.0/macros/givaro-check.m4	2024-10-21 18:20:22.555122656 +0000
@@ -80,24 +80,6 @@
 	[#include <givaro/givinteger.h>],
 	[Givaro::Integer a;],
 	[
-	AC_TRY_RUN(
-	[#include <givaro/givconfig.h>
-	 int main () { if (GIVARO_VERSION >= $version_min && GIVARO_VERSION < $version_max) return 0; else return -1; /* old version of Givaro are defined as hexa 0x03yyzz*/ }
-	],[
-	givaro_found="yes"
-	break
-	],[
-	givaro_problem="$problem $GIVARO_HOME"
-	unset GIVARO_CFLAGS
-	unset GIVARO_LIBS
-	],[
-	givaro_found="yes"
-	givaro_cross="yes"
-
-	break
-	])
-	],
-	[
 	givaro_found="yes"
 	givaro_checked="$checked $GIVARO_HOME"
 #unset GIVARO_CFLAGS
diff -ur fflas-ffpack-2.5.0.orig/macros/omp-check.m4 fflas-ffpack-2.5.0/macros/omp-check.m4
--- fflas-ffpack-2.5.0.orig/macros/omp-check.m4	2021-09-21 13:23:36.000000000 +0000
+++ fflas-ffpack-2.5.0/macros/omp-check.m4	2024-10-21 18:33:33.647115767 +0000
@@ -37,19 +37,10 @@
 		[
 		BACKUP_CXXFLAGS=${CXXFLAGS}
 		CXXFLAGS="${BACKUP_CXXFLAGS} ${OMPFLAGS}"
-		AC_TRY_RUN([
-#include <omp.h>
-			int main() {
-			int p = omp_get_num_threads();
-			return 0;
-			}
-		],
-		[ omp_found="yes" ],
-		[ omp_found="no" ],
-		[
-			echo "cross compiling...disabling"
-			omp_found="no"
-		])
+		AC_CHECK_HEADER([omp.h],
+		    [ omp_found="yes" ],
+		    [ omp_found="no" ]
+        )
 		AS_IF(	[ test "x$omp_found" = "xyes" ],
 			[
 				AC_DEFINE(USE_OPENMP,1,[Define if OMP is available])
