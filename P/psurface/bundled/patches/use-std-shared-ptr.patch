From 800f2af41dd18558c744efb84e447205638cd026 Mon Sep 17 00:00:00 2001
From: Ansgar Burchardt <burchardt@igpm.rwth-aachen.de>
Date: Fri, 17 Jul 2015 15:03:57 +0200
Subject: [PATCH] Use std::shared_ptr instead of std::tr1::shared_ptr.

---
 Hdf5IO.cpp           |  1 -
 VtkIO.cpp            | 21 ++++++++++-----------
 psurface-convert.cpp |  1 -
 3 files changed, 10 insertions(+), 13 deletions(-)

diff --git a/Hdf5IO.cpp b/Hdf5IO.cpp
index bb0c446..63385cb 100644
--- a/Hdf5IO.cpp
+++ b/Hdf5IO.cpp
@@ -4,7 +4,6 @@
 #include <string.h>
 #include <hdf5.h>
 #include <memory>
-#include <tr1/memory>
 #include <stdexcept>
 
 #include "StaticVector.h"
diff --git a/VtkIO.cpp b/VtkIO.cpp
index 0138ae2..e4d4ba3 100644
--- a/VtkIO.cpp
+++ b/VtkIO.cpp
@@ -2,7 +2,6 @@
 #include <vector>
 #include <string.h>
 #include <memory>
-#include <tr1/memory>
 #include <fstream>
 
 #include "StaticVector.h"
@@ -143,7 +142,7 @@
 
       writer.beginPointData(scalars, vectors);
       {
-            std::tr1::shared_ptr<VTK::DataArrayWriter<ctype> > p
+            std::shared_ptr<VTK::DataArrayWriter<ctype> > p
             (writer.makeArrayWriter<ctype>(scalars, 1, numNodes));
             for (int i = 0; i < numNodes; i++)
                 p->write(nodeType[i]);
@@ -158,7 +157,7 @@
   {
       writer.beginPoints();
       {
-            std::tr1::shared_ptr<VTK::DataArrayWriter<ctype> > p
+            std::shared_ptr<VTK::DataArrayWriter<ctype> > p
             (writer.makeArrayWriter<ctype>("Coordinates", 3, numVertices));
             if(!p->writeIsNoop()) {
                   for(int i = 0; i < numVertices; i++)
@@ -174,7 +173,7 @@
   {
       writer.beginPoints();
       {
-            std::tr1::shared_ptr<VTK::DataArrayWriter<ctype> > p
+            std::shared_ptr<VTK::DataArrayWriter<ctype> > p
             (writer.makeArrayWriter<ctype>("Coordinates", 3, numNodes));
             if(!p->writeIsNoop()) {
               for(int i = 0; i < numNodes; i++)
@@ -192,7 +191,7 @@
       writer.beginCells();
       // connectivity
       {
-          std::tr1::shared_ptr<VTK::DataArrayWriter<int> > p1
+          std::shared_ptr<VTK::DataArrayWriter<int> > p1
           (writer.makeArrayWriter<int>("connectivity", 1, 3*numTriangles));
           if(!p1->writeIsNoop())
           {
@@ -204,7 +203,7 @@
 
       // offsets
       {
-          std::tr1::shared_ptr<VTK::DataArrayWriter<int> > p2
+          std::shared_ptr<VTK::DataArrayWriter<int> > p2
           (writer.makeArrayWriter<int>("offsets", 1, numTriangles));
           if(!p2->writeIsNoop()) {
               int offset = 0;
@@ -218,7 +217,7 @@
 
       // types
       {
-          std::tr1::shared_ptr<VTK::DataArrayWriter<unsigned char> > p3
+          std::shared_ptr<VTK::DataArrayWriter<unsigned char> > p3
           (writer.makeArrayWriter<unsigned char>("types", 1, numTriangles));
           if(!p3->writeIsNoop())
           {
@@ -236,7 +235,7 @@
       writer.beginCells();
       // connectivity
       {
-          std::tr1::shared_ptr<VTK::DataArrayWriter<int> > p1
+          std::shared_ptr<VTK::DataArrayWriter<int> > p1
           (writer.makeArrayWriter<int>("connectivity", 1, 2*numParamEdges));
           if(!p1->writeIsNoop())
           {
@@ -248,7 +247,7 @@
 
       // offsets
       {
-          std::tr1::shared_ptr<VTK::DataArrayWriter<int> > p2
+          std::shared_ptr<VTK::DataArrayWriter<int> > p2
           (writer.makeArrayWriter<int>("offsets", 1, numParamEdges));
           if(!p2->writeIsNoop()) {
               int offset = 0;
@@ -262,7 +261,7 @@
 
       // types
       {
-          std::tr1::shared_ptr<VTK::DataArrayWriter<unsigned char> > p3
+          std::shared_ptr<VTK::DataArrayWriter<unsigned char> > p3
           (writer.makeArrayWriter<unsigned char>("types", 1, numParamEdges));
           if(!p3->writeIsNoop())
           {
@@ -281,7 +280,7 @@
 
     // patch numbers
     {
-      std::tr1::shared_ptr<VTK::DataArrayWriter<int> > p
+      std::shared_ptr<VTK::DataArrayWriter<int> > p
         (writer.makeArrayWriter<int>("Patch", 1, numTriangles));
       if(!p->writeIsNoop()) {
         for(int i = 0; i < numTriangles; i++)
diff --git a/psurface-convert.cpp b/psurface-convert.cpp
index 8863ad6..ccf8e68 100644
--- a/psurface-convert.cpp
+++ b/psurface-convert.cpp
@@ -8,7 +8,6 @@
 #include <string.h>
 #include <fstream>
 #include <memory>
-#include <tr1/memory>
 
 #ifdef PSURFACE_STANDALONE
 #include "TargetSurface.h"
