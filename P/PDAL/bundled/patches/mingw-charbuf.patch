diff --git a/pdal/util/Charbuf.cpp b/pdal/util/Charbuf.cpp
index ca096810a..dcad9206a 100644
--- a/pdal/util/Charbuf.cpp
+++ b/pdal/util/Charbuf.cpp
@@ -37,6 +37,22 @@
 namespace pdal
 {
 
+Charbuf::~Charbuf() {
+
+}
+
+Charbuf::Charbuf() {
+    m_bufOffset = 0;
+}
+
+Charbuf::Charbuf(std::vector<char>& v, pos_type bufOffset)
+{
+    initialize(v.data(), v.size(), bufOffset);
+}
+
+Charbuf::Charbuf (char *buf, size_t count, pos_type bufOffset) {
+    initialize(buf, count, bufOffset);
+}
 
 void Charbuf::initialize(char *buf, size_t count, std::ios::pos_type bufOffset)
 {
diff --git a/pdal/util/Charbuf.hpp b/pdal/util/Charbuf.hpp
index b982814c3..4a97fca88 100644
--- a/pdal/util/Charbuf.hpp
+++ b/pdal/util/Charbuf.hpp
@@ -49,11 +49,12 @@ namespace pdal
 class Charbuf : public std::streambuf
 {
 public:
+    PDAL_DLL ~Charbuf() override;
+
     /**
       Construct an empty Charbuf.
     */
-    PDAL_DLL Charbuf() : m_bufOffset(0)
-        {}
+    PDAL_DLL Charbuf();
 
     /**
       Construct a Charbuf that wraps a byte vector.
@@ -61,8 +62,7 @@ public:
       \param v  Byte vector to back streambuf.
       \param bufOffset  Offset in vector (ignore bytes before offset).
     */
-    PDAL_DLL Charbuf (std::vector<char>& v, pos_type bufOffset = 0)
-        { initialize(v.data(), v.size(), bufOffset); }
+    PDAL_DLL Charbuf (std::vector<char>& v, pos_type bufOffset = 0);
 
     /**
       Construct a Charbuf that wraps a byte buffer.
@@ -71,8 +71,7 @@ public:
       \param count  Size of buffer.
       \param bufOffset  Offset in vector (ignore bytes before offset).
     */
-    PDAL_DLL Charbuf (char *buf, size_t count, pos_type bufOffset = 0)
-        { initialize(buf, count, bufOffset); }
+    PDAL_DLL Charbuf (char *buf, size_t count, pos_type bufOffset = 0);
 
     /**
       Set a buffer to back a Charbuf.
