diff --git a/src/mat/impls/aij/mpi/superlu_dist/superlu_dist.c b/src/mat/impls/aij/mpi/superlu_dist/superlu_dist.c
diff --git a/src/mat/impls/aij/mpi/superlu_dist/superlu_dist.c b/src/mat/impls/aij/mpi/superlu_dist/superlu_dist.c
index 7b5e24b..b0edf7d 100644
--- a/src/mat/impls/aij/mpi/superlu_dist/superlu_dist.c
+++ b/src/mat/impls/aij/mpi/superlu_dist/superlu_dist.c
@@ -144,7 +144,8 @@ typedef struct {
 #endif
 } PetscSuperLU_DIST;
 
-static PetscMPIInt Petsc_Superlu_dist_keyval = MPI_KEYVAL_INVALID;
+static PetscMPIInt Petsc_Superlu_dist_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Superlu_dist_keyval() { Petsc_Superlu_dist_keyval = MPI_KEYVAL_INVALID; }
 
 PETSC_EXTERN PetscMPIInt MPIAPI Petsc_Superlu_dist_keyval_DeleteFn(MPI_Comm comm, PetscMPIInt keyval, void *attr_val, void *extra_state)
 {
diff --git a/src/sys/classes/viewer/impls/ascii/vcreatea.c b/src/sys/classes/viewer/impls/ascii/vcreatea.c
index cb3c3d5..c128a74 100644
--- a/src/sys/classes/viewer/impls/ascii/vcreatea.c
+++ b/src/sys/classes/viewer/impls/ascii/vcreatea.c
@@ -4,8 +4,9 @@
     The variable Petsc_Viewer_Stdout_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_Stdout_keyval = MPI_KEYVAL_INVALID;
-
+PetscMPIInt Petsc_Viewer_Stdout_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_Stdout_keyval() { Petsc_Viewer_Stdout_keyval = MPI_KEYVAL_INVALID; }
+ 
 /*@C
    PETSC_VIEWER_STDOUT_ - Creates a `PETSCVIEWERASCII` `PetscViewer` shared by all MPI processes
                     in a communicator.
@@ -45,8 +46,9 @@ PetscViewer PETSC_VIEWER_STDOUT_(MPI_Comm comm)
     The variable Petsc_Viewer_Stderr_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_Stderr_keyval = MPI_KEYVAL_INVALID;
-
+PetscMPIInt Petsc_Viewer_Stderr_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_Stderr_keyval() { Petsc_Viewer_Stderr_keyval = MPI_KEYVAL_INVALID; }
+ 
 /*@
   PetscViewerASCIIGetStderr - Creates a `PETSCVIEWERASCII` `PetscViewer` shared by all MPI processes
   in a communicator. Error returning version of `PETSC_VIEWER_STDERR_()`
@@ -128,7 +130,8 @@ PetscViewer PETSC_VIEWER_STDERR_(MPI_Comm comm)
   PetscFunctionReturn(viewer);
 }
 
-PetscMPIInt Petsc_Viewer_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_keyval() { Petsc_Viewer_keyval = MPI_KEYVAL_INVALID; }
 /*
    Called with MPI_Comm_free() is called on a communicator that has a viewer as an attribute. The viewer is not actually destroyed
    because that is managed by PetscObjectDestroyRegisterAll(). PetscViewerASCIIGetStdout() registers the viewer with PetscObjectDestroyRegister() to be destroyed when PetscFinalize() is called.
diff --git a/src/sys/classes/viewer/impls/binary/binv.c b/src/sys/classes/viewer/impls/binary/binv.c
index 4d975b4..b497054 100644
--- a/src/sys/classes/viewer/impls/binary/binv.c
+++ b/src/sys/classes/viewer/impls/binary/binv.c
@@ -1577,7 +1577,8 @@ PETSC_EXTERN PetscErrorCode PetscViewerCreate_Binary(PetscViewer v)
     The variable Petsc_Viewer_Binary_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_Binary_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_Binary_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_Binary_keyval() { Petsc_Viewer_Binary_keyval = MPI_KEYVAL_INVALID; }
 
 /*@C
      PETSC_VIEWER_BINARY_ - Creates a `PETSCVIEWERBINARY` `PetscViewer` shared by all processors
diff --git a/src/sys/classes/viewer/impls/draw/drawv.c b/src/sys/classes/viewer/impls/draw/drawv.c
index 09f7f94..8c18913 100644
--- a/src/sys/classes/viewer/impls/draw/drawv.c
+++ b/src/sys/classes/viewer/impls/draw/drawv.c
@@ -721,7 +721,8 @@ PetscErrorCode PetscViewerDrawGetHold(PetscViewer viewer, PetscBool *hold)
     The variable Petsc_Viewer_Draw_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_Draw_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_Draw_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_Draw_keyval() { Petsc_Viewer_Draw_keyval = MPI_KEYVAL_INVALID; }
 
 /*@C
     PETSC_VIEWER_DRAW_ - Creates a window `PETSCVIEWERDRAW` `PetscViewer` shared by all processors
diff --git a/src/sys/classes/viewer/impls/hdf5/hdf5v.c b/src/sys/classes/viewer/impls/hdf5/hdf5v.c
index e5b5380..10035dd 100644
--- a/src/sys/classes/viewer/impls/hdf5/hdf5v.c
+++ b/src/sys/classes/viewer/impls/hdf5/hdf5v.c
@@ -1580,7 +1580,8 @@ static PetscErrorCode PetscViewerHDF5HasAttribute_Internal(PetscViewer viewer, c
   The variable Petsc_Viewer_HDF5_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_HDF5_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_HDF5_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_HDF5_keyval() { Petsc_Viewer_HDF5_keyval = MPI_KEYVAL_INVALID; }
 
 /*@C
   PETSC_VIEWER_HDF5_ - Creates an `PETSCVIEWERHDF5` `PetscViewer` shared by all processors in a communicator.
diff --git a/src/sys/classes/viewer/impls/socket/send.c b/src/sys/classes/viewer/impls/socket/send.c
index 9bcc6fd..38aca30 100644
--- a/src/sys/classes/viewer/impls/socket/send.c
+++ b/src/sys/classes/viewer/impls/socket/send.c
@@ -463,7 +463,8 @@ PetscErrorCode PetscViewerSocketSetConnection(PetscViewer v, const char machine[
     The variable Petsc_Viewer_Socket_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_Socket_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_Socket_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_Socket_keyval() { Petsc_Viewer_Socket_keyval = MPI_KEYVAL_INVALID; }
 
 /*@C
    PETSC_VIEWER_SOCKET_ - Creates a socket viewer shared by all processors in a communicator.
diff --git a/src/sys/objects/pinit.c b/src/sys/objects/pinit.c
index 6867c8a..7d606e1 100644
--- a/src/sys/objects/pinit.c
+++ b/src/sys/objects/pinit.c
@@ -42,22 +42,36 @@ PETSC_INTERN PetscErrorCode PetscSequentialPhaseEnd_Private(MPI_Comm, int);
 PETSC_INTERN PetscErrorCode PetscCloseHistoryFile(FILE **);
 
 /* user may set these BEFORE calling PetscInitialize() */
-MPI_Comm PETSC_COMM_WORLD = MPI_COMM_NULL;
-#if PetscDefined(HAVE_MPI_INIT_THREAD)
-PetscMPIInt PETSC_MPI_THREAD_REQUIRED = PETSC_DECIDE;
-#else
-PetscMPIInt PETSC_MPI_THREAD_REQUIRED = MPI_THREAD_SINGLE;
-#endif
-
-PetscMPIInt Petsc_Counter_keyval      = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_InnerComm_keyval    = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_OuterComm_keyval    = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_ShmComm_keyval      = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_CreationIdx_keyval  = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_Garbage_HMap_keyval = MPI_KEYVAL_INVALID;
-
-PetscMPIInt Petsc_SharedWD_keyval  = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_SharedTmp_keyval = MPI_KEYVAL_INVALID;
+MPI_Comm PETSC_COMM_WORLD;
+PetscMPIInt PETSC_MPI_THREAD_REQUIRED;
+
+PetscMPIInt Petsc_Counter_keyval;
+PetscMPIInt Petsc_InnerComm_keyval;
+PetscMPIInt Petsc_OuterComm_keyval;
+PetscMPIInt Petsc_ShmComm_keyval;
+PetscMPIInt Petsc_CreationIdx_keyval;
+PetscMPIInt Petsc_Garbage_HMap_keyval;
+PetscMPIInt Petsc_SharedWD_keyval;
+PetscMPIInt Petsc_SharedTmp_keyval;
+
+__attribute__((__constructor__)) static void init_PETSC_COMM_WORLD()
+{
+  PETSC_COMM_WORLD = MPI_COMM_NULL;
+ #if PetscDefined(HAVE_MPI_INIT_THREAD)
+   PETSC_MPI_THREAD_REQUIRED = MPI_THREAD_FUNNELED;
+ #else
+   PETSC_MPI_THREAD_REQUIRED = 0;
+ #endif
+ 
+  Petsc_Counter_keyval      = MPI_KEYVAL_INVALID;
+  Petsc_InnerComm_keyval    = MPI_KEYVAL_INVALID;
+  Petsc_OuterComm_keyval    = MPI_KEYVAL_INVALID;
+  Petsc_ShmComm_keyval      = MPI_KEYVAL_INVALID;
+  Petsc_CreationIdx_keyval  = MPI_KEYVAL_INVALID;
+  Petsc_Garbage_HMap_keyval = MPI_KEYVAL_INVALID;
+  Petsc_SharedWD_keyval  = MPI_KEYVAL_INVALID;
+  Petsc_SharedTmp_keyval = MPI_KEYVAL_INVALID;
+}
 
 /*
      Declare and set all the string names of the PETSc enums
@@ -426,7 +440,8 @@ PETSC_EXTERN PetscMPIInt PetscDataRep_read_conv_fn(void *, MPI_Datatype, PetscMP
 PETSC_EXTERN PetscMPIInt PetscDataRep_write_conv_fn(void *, MPI_Datatype, PetscMPIInt, void *, MPI_Offset, void *);
 #endif
 
-PetscMPIInt PETSC_MPI_ERROR_CLASS = MPI_ERR_LASTCODE, PETSC_MPI_ERROR_CODE;
+PetscMPIInt PETSC_MPI_ERROR_CLASS,PETSC_MPI_ERROR_CODE;
+__attribute__((__constructor__)) static void init_PETSC_MPI_ERROR_CLASS() { PETSC_MPI_ERROR_CLASS=MPI_ERR_LASTCODE; }
 
 PETSC_INTERN int    PetscGlobalArgc;
 PETSC_INTERN char **PetscGlobalArgs;
diff --git a/src/sys/utils/mpiu.c b/src/sys/utils/mpiu.c
index 93290f4..cace2e4 100644
--- a/src/sys/utils/mpiu.c
+++ b/src/sys/utils/mpiu.c
@@ -41,7 +41,8 @@ PETSC_INTERN PetscErrorCode PetscSequentialPhaseEnd_Private(MPI_Comm comm, int n
     The variable Petsc_Seq_keyval is used to indicate an MPI attribute that
   is attached to a communicator that manages the sequential phase code below.
 */
-PetscMPIInt Petsc_Seq_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Seq_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Seq_keyval() { Petsc_Seq_keyval = MPI_KEYVAL_INVALID; }
 
 /*@
   PetscSequentialPhaseBegin - Begins a sequential section of code.
diff --git a/src/vec/vec/utils/comb.c b/src/vec/vec/utils/comb.c
index 67335d4..ecc67d9 100644
--- a/src/vec/vec/utils/comb.c
+++ b/src/vec/vec/utils/comb.c
@@ -272,7 +272,8 @@ static PetscErrorCode PetscSplitReductionDestroy(PetscSplitReduction *sr)
   PetscFunctionReturn(PETSC_SUCCESS);
 }
 
-PetscMPIInt Petsc_Reduction_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Reduction_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Reduction_keyval() { Petsc_Reduction_keyval = MPI_KEYVAL_INVALID; }
 
 /*
    Private routine to delete internal storage when a communicator is freed.
