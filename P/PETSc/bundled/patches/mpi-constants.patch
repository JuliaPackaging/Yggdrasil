diff --git a/src/mat/impls/aij/mpi/superlu_dist/superlu_dist.c b/src/mat/impls/aij/mpi/superlu_dist/superlu_dist.c
index 1361d418fdd..b2cc6a89333 100644
--- a/src/mat/impls/aij/mpi/superlu_dist/superlu_dist.c
+++ b/src/mat/impls/aij/mpi/superlu_dist/superlu_dist.c
@@ -144,7 +144,9 @@ typedef struct {
 #endif
 } PetscSuperLU_DIST;
 
-static PetscMPIInt Petsc_Superlu_dist_keyval = MPI_KEYVAL_INVALID;
+static PetscMPIInt Petsc_Superlu_dist_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Superlu_dist_keyval() { Petsc_Superlu_dist_keyval = MPI_KEYVAL_INVALID; }
+
 
 PETSC_EXTERN PetscMPIInt MPIAPI Petsc_Superlu_dist_keyval_Delete_Fn(MPI_Comm comm, PetscMPIInt keyval, void *attr_val, void *extra_state)
 {
diff --git a/src/mat/impls/scalapack/matscalapack.c b/src/mat/impls/scalapack/matscalapack.c
index d7e703b5a00..d5e78e66fb4 100644
--- a/src/mat/impls/scalapack/matscalapack.c
+++ b/src/mat/impls/scalapack/matscalapack.c
@@ -17,7 +17,8 @@ static PetscBool ScaLAPACKCite       = PETSC_FALSE;
     The variable Petsc_ScaLAPACK_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a Mat_ScaLAPACK_Grid
 */
-static PetscMPIInt Petsc_ScaLAPACK_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_ScaLAPACK_keyval;
+__attribute__((__constructor__)) static void init_Petsc_ScaLAPACK_keyval() { Petsc_ScaLAPACK_keyval = MPI_KEYVAL_INVALID; }
 
 static PetscErrorCode Petsc_ScaLAPACK_keyval_free(void)
 {
diff --git a/src/sys/classes/viewer/impls/ascii/vcreatea.c b/src/sys/classes/viewer/impls/ascii/vcreatea.c
index 2ce92a64e56..d7da3d4e9cd 100644
--- a/src/sys/classes/viewer/impls/ascii/vcreatea.c
+++ b/src/sys/classes/viewer/impls/ascii/vcreatea.c
@@ -4,8 +4,9 @@
     The variable Petsc_Viewer_Stdout_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_Stdout_keyval = MPI_KEYVAL_INVALID;
-
+PetscMPIInt Petsc_Viewer_Stdout_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_Stdout_keyval() { Petsc_Viewer_Stdout_keyval = MPI_KEYVAL_INVALID; }
+ 
 /*@
   PetscViewerASCIIGetStdout - Creates a `PETSCVIEWERASCII` `PetscViewer` shared by all processors
   in a communicator. Error returning version of `PETSC_VIEWER_STDOUT_()`
@@ -89,7 +90,9 @@ PetscViewer PETSC_VIEWER_STDOUT_(MPI_Comm comm)
     The variable Petsc_Viewer_Stderr_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_Stderr_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_Stderr_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_Stderr_keyval() { Petsc_Viewer_Stderr_keyval = MPI_KEYVAL_INVALID; }
+ 
 
 /*@
   PetscViewerASCIIGetStderr - Creates a `PETSCVIEWERASCII` `PetscViewer` shared by all MPI processes
@@ -172,7 +175,9 @@ PetscViewer PETSC_VIEWER_STDERR_(MPI_Comm comm)
   PetscFunctionReturn(viewer);
 }
 
-PetscMPIInt Petsc_Viewer_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_keyval() { Petsc_Viewer_keyval = MPI_KEYVAL_INVALID; }
+ 
 /*
    Called with MPI_Comm_free() is called on a communicator that has a viewer as an attribute. The viewer is not actually destroyed
    because that is managed by PetscObjectDestroyRegisterAll(). PetscViewerASCIIGetStdout() registers the viewer with PetscObjectDestroyRegister() to be destroyed when PetscFinalize() is called.
diff --git a/src/sys/classes/viewer/impls/binary/binv.c b/src/sys/classes/viewer/impls/binary/binv.c
index d637c3028a9..b27cd0418cd 100644
--- a/src/sys/classes/viewer/impls/binary/binv.c
+++ b/src/sys/classes/viewer/impls/binary/binv.c
@@ -1577,7 +1577,8 @@ PETSC_EXTERN PetscErrorCode PetscViewerCreate_Binary(PetscViewer v)
     The variable Petsc_Viewer_Binary_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_Binary_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_Binary_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_Binary_keyval() { Petsc_Viewer_Binary_keyval = MPI_KEYVAL_INVALID; }
 
 /*@C
      PETSC_VIEWER_BINARY_ - Creates a `PETSCVIEWERBINARY` `PetscViewer` shared by all processors
diff --git a/src/sys/classes/viewer/impls/draw/drawv.c b/src/sys/classes/viewer/impls/draw/drawv.c
index 09f7f940344..412e164ebcd 100644
--- a/src/sys/classes/viewer/impls/draw/drawv.c
+++ b/src/sys/classes/viewer/impls/draw/drawv.c
@@ -721,7 +721,9 @@ PetscErrorCode PetscViewerDrawGetHold(PetscViewer viewer, PetscBool *hold)
     The variable Petsc_Viewer_Draw_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_Draw_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_Draw_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_Draw_keyval() { Petsc_Viewer_Draw_keyval = MPI_KEYVAL_INVALID; }
+ 
 
 /*@C
     PETSC_VIEWER_DRAW_ - Creates a window `PETSCVIEWERDRAW` `PetscViewer` shared by all processors
diff --git a/src/sys/classes/viewer/impls/hdf5/hdf5v.c b/src/sys/classes/viewer/impls/hdf5/hdf5v.c
index e5b53808683..10035ddd83e 100644
--- a/src/sys/classes/viewer/impls/hdf5/hdf5v.c
+++ b/src/sys/classes/viewer/impls/hdf5/hdf5v.c
@@ -1580,7 +1580,8 @@ static PetscErrorCode PetscViewerHDF5HasAttribute_Internal(PetscViewer viewer, c
   The variable Petsc_Viewer_HDF5_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_HDF5_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_HDF5_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_HDF5_keyval() { Petsc_Viewer_HDF5_keyval = MPI_KEYVAL_INVALID; }
 
 /*@C
   PETSC_VIEWER_HDF5_ - Creates an `PETSCVIEWERHDF5` `PetscViewer` shared by all processors in a communicator.
diff --git a/src/sys/classes/viewer/impls/socket/send.c b/src/sys/classes/viewer/impls/socket/send.c
index 78aabb3f017..ebb5539deaf 100644
--- a/src/sys/classes/viewer/impls/socket/send.c
+++ b/src/sys/classes/viewer/impls/socket/send.c
@@ -464,7 +464,9 @@ PetscErrorCode PetscViewerSocketSetConnection(PetscViewer v, const char machine[
     The variable Petsc_Viewer_Socket_keyval is used to indicate an MPI attribute that
   is attached to a communicator, in this case the attribute is a PetscViewer.
 */
-PetscMPIInt Petsc_Viewer_Socket_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Viewer_Socket_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Viewer_Socket_keyval() { Petsc_Viewer_Socket_keyval = MPI_KEYVAL_INVALID; }
+
 
 /*@C
      PETSC_VIEWER_SOCKET_ - Creates a socket viewer shared by all processors in a communicator.
diff --git a/src/sys/fileio/fretrieve.c b/src/sys/fileio/fretrieve.c
index 169abd8624d..8873aef5c65 100644
--- a/src/sys/fileio/fretrieve.c
+++ b/src/sys/fileio/fretrieve.c
@@ -64,6 +64,7 @@ PETSC_EXTERN PetscMPIInt MPIAPI Petsc_DelTmpShared(MPI_Comm comm, PetscMPIInt ke
 
 .seealso: `PetscSharedTmp()`, `PetscSharedWorkingDirectory()`, `PetscGetWorkingDirectory()`, `PetscGetHomeDirectory()`
 @*/
+
 PetscErrorCode PetscGetTmp(MPI_Comm comm, char dir[], size_t len)
 {
   PetscBool flg;
@@ -74,6 +75,7 @@ PetscErrorCode PetscGetTmp(MPI_Comm comm, char dir[], size_t len)
   PetscFunctionReturn(PETSC_SUCCESS);
 }
 
+
 // "Unknown section 'Environmental Variables'"
 // PetscClangLinter pragma disable: -fdoc-section-header-unknown
 /*@C
@@ -120,15 +122,29 @@ PetscErrorCode PetscGetTmp(MPI_Comm comm, char dir[], size_t len)
 @*/
 PetscErrorCode PetscSharedTmp(MPI_Comm comm, PetscBool *shared)
 {
-  PetscMPIInt size, rank, *tagvalp, sum, cnt, i;
-  PetscBool   flg, iflg;
-  FILE       *fd;
-  int         err;
+  PetscMPIInt        size, rank, *tagvalp, sum, cnt, i;
+  PetscBool          flg, iflg;
+  FILE               *fd;
+  static int         have_Petsc_Tmp_keyval = 0;
+  static PetscMPIInt Petsc_Tmp_keyval;
+  int                err;
 
   PetscFunctionBegin;
+    
+  if (!have_Petsc_Tmp_keyval) {
+    have_Petsc_Tmp_keyval = 1;
+    Petsc_Tmp_keyval = MPI_KEYVAL_INVALID;
+  }
+  
   PetscCallMPI(MPI_Comm_size(comm, &size));
   if (size == 1) {
     *shared = PETSC_TRUE;
+    PetscMPIInt        size, rank, *tagvalp, sum, cnt, i;
+    PetscBool          flg, iflg;
+    FILE              *fd;
+    static int         have_Petsc_WD_keyval = 0;
+    static PetscMPIInt Petsc_WD_keyval;
+
     PetscFunctionReturn(PETSC_SUCCESS);
   }
 
diff --git a/src/sys/objects/optionsyaml.c b/src/sys/objects/optionsyaml.c
index 381876c57b3..dbe6e99913f 100644
--- a/src/sys/objects/optionsyaml.c
+++ b/src/sys/objects/optionsyaml.c
@@ -10,7 +10,9 @@
 PETSC_INTERN PetscErrorCode PetscOptionsSetValue_Private(PetscOptions, const char[], const char[], int *, PetscOptionSource);
 PETSC_INTERN PetscErrorCode PetscOptionsInsertStringYAML_Private(PetscOptions, const char[], PetscOptionSource);
 
-static MPI_Comm petsc_yaml_comm = MPI_COMM_NULL; /* only used for parallel error handling */
+static MPI_Comm petsc_yaml_comm; /* only used for parallel error handling */
+__attribute__((__constructor__)) static void init_petsc_yaml_comm() { petsc_yaml_comm = MPI_COMM_NULL; }
+ 
 
 static inline MPI_Comm PetscYAMLGetComm(void)
 {
diff --git a/src/sys/objects/pinit.c b/src/sys/objects/pinit.c
index 69b3bd20157..11576ecc34e 100644
--- a/src/sys/objects/pinit.c
+++ b/src/sys/objects/pinit.c
@@ -42,22 +42,40 @@ PETSC_INTERN PetscErrorCode PetscSequentialPhaseEnd_Private(MPI_Comm, int);
 PETSC_INTERN PetscErrorCode PetscCloseHistoryFile(FILE **);
 
 /* user may set these BEFORE calling PetscInitialize() */
-MPI_Comm PETSC_COMM_WORLD = MPI_COMM_NULL;
+MPI_Comm PETSC_COMM_WORLD;
+PetscMPIInt PETSC_MPI_THREAD_REQUIRED;
+
+PetscMPIInt Petsc_Counter_keyval;
+PetscMPIInt Petsc_InnerComm_keyval;
+PetscMPIInt Petsc_OuterComm_keyval;
+PetscMPIInt Petsc_ShmComm_keyval;
+PetscMPIInt Petsc_CreationIdx_keyval;
+PetscMPIInt Petsc_Garbage_HMap_keyval;
+
+PetscMPIInt Petsc_SharedWD_keyval;
+PetscMPIInt Petsc_SharedTmp_keyval;
+
+
+__attribute__((__constructor__)) static void init_PETSC_COMM_WORLD()
+{
+  PETSC_COMM_WORLD = MPI_COMM_NULL;
 #if PetscDefined(HAVE_MPI_INIT_THREAD)
-PetscMPIInt PETSC_MPI_THREAD_REQUIRED = MPI_THREAD_FUNNELED;
+  PETSC_MPI_THREAD_REQUIRED = MPI_THREAD_FUNNELED;
 #else
-PetscMPIInt PETSC_MPI_THREAD_REQUIRED = 0;
+  PETSC_MPI_THREAD_REQUIRED = 0;
 #endif
-
-PetscMPIInt Petsc_Counter_keyval      = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_InnerComm_keyval    = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_OuterComm_keyval    = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_ShmComm_keyval      = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_CreationIdx_keyval  = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_Garbage_HMap_keyval = MPI_KEYVAL_INVALID;
-
-PetscMPIInt Petsc_SharedWD_keyval  = MPI_KEYVAL_INVALID;
-PetscMPIInt Petsc_SharedTmp_keyval = MPI_KEYVAL_INVALID;
+ 
+  Petsc_Counter_keyval      = MPI_KEYVAL_INVALID;
+  Petsc_InnerComm_keyval    = MPI_KEYVAL_INVALID;
+  Petsc_OuterComm_keyval    = MPI_KEYVAL_INVALID;
+  Petsc_ShmComm_keyval      = MPI_KEYVAL_INVALID;
+  Petsc_CreationIdx_keyval  = MPI_KEYVAL_INVALID;
+  Petsc_Garbage_HMap_keyval = MPI_KEYVAL_INVALID;
+
+  Petsc_SharedWD_keyval     = MPI_KEYVAL_INVALID;
+  Petsc_SharedTmp_keyval    = MPI_KEYVAL_INVALID;
+  
+}
 
 /*
      Declare and set all the string names of the PETSc enums
@@ -424,7 +442,8 @@ PETSC_EXTERN PetscMPIInt PetscDataRep_read_conv_fn(void *, MPI_Datatype, PetscMP
 PETSC_EXTERN PetscMPIInt PetscDataRep_write_conv_fn(void *, MPI_Datatype, PetscMPIInt, void *, MPI_Offset, void *);
 #endif
 
-PetscMPIInt PETSC_MPI_ERROR_CLASS = MPI_ERR_LASTCODE, PETSC_MPI_ERROR_CODE;
+PetscMPIInt PETSC_MPI_ERROR_CLASS,PETSC_MPI_ERROR_CODE;
+__attribute__((__constructor__)) static void init_PETSC_MPI_ERROR_CLASS() { PETSC_MPI_ERROR_CLASS=MPI_ERR_LASTCODE; }
 
 PETSC_INTERN int    PetscGlobalArgc;
 PETSC_INTERN char **PetscGlobalArgs;
diff --git a/src/sys/utils/mpiu.c b/src/sys/utils/mpiu.c
index 93290f4e207..ecd8a449d32 100644
--- a/src/sys/utils/mpiu.c
+++ b/src/sys/utils/mpiu.c
@@ -41,8 +41,9 @@ PETSC_INTERN PetscErrorCode PetscSequentialPhaseEnd_Private(MPI_Comm comm, int n
     The variable Petsc_Seq_keyval is used to indicate an MPI attribute that
   is attached to a communicator that manages the sequential phase code below.
 */
-PetscMPIInt Petsc_Seq_keyval = MPI_KEYVAL_INVALID;
-
+PetscMPIInt Petsc_Seq_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Seq_keyval() { Petsc_Seq_keyval = MPI_KEYVAL_INVALID; }
+ 
 /*@
   PetscSequentialPhaseBegin - Begins a sequential section of code.
 
diff --git a/src/vec/vec/utils/comb.c b/src/vec/vec/utils/comb.c
index 745a0c07bc5..80b00ed376d 100644
--- a/src/vec/vec/utils/comb.c
+++ b/src/vec/vec/utils/comb.c
@@ -271,7 +271,9 @@ static PetscErrorCode PetscSplitReductionDestroy(PetscSplitReduction *sr)
   PetscFunctionReturn(PETSC_SUCCESS);
 }
 
-PetscMPIInt Petsc_Reduction_keyval = MPI_KEYVAL_INVALID;
+PetscMPIInt Petsc_Reduction_keyval;
+__attribute__((__constructor__)) static void init_Petsc_Reduction_keyval() { Petsc_Reduction_keyval = MPI_KEYVAL_INVALID; }
+
 
 /*
    Private routine to delete internal storage when a communicator is freed.
