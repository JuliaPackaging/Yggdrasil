diff --git a/config/PETSc/options/sharedLibraries.py b/config/PETSc/options/sharedLibraries.py
index af416f2..950e96c 100755
--- a/config/PETSc/options/sharedLibraries.py
+++ b/config/PETSc/options/sharedLibraries.py
@@ -18,6 +18,7 @@ class Configure(config.base.Configure):
     import nargs
     help.addArgument('PETSc', '-with-shared-libraries=<bool>', nargs.ArgBool(None, 1, 'Make PETSc libraries shared -- libpetsc.so (Unix/Linux) or libpetsc.dylib (Mac)'))
     help.addArgument('PETSc', '-with-serialize-functions=<bool>', nargs.ArgBool(None, 0, 'Allows function pointers to be serialized to binary files with string representations'))
+    help.addArgument('PETSc', '-SOSUFFIX=<string>', nargs.Arg(None, 0, 'Add a suffix to shared libraries'))
     return
 
   def setupDependencies(self, framework):
@@ -53,6 +54,10 @@ class Configure(config.base.Configure):
     import sys
 
     self.useShared = self.framework.argDB['with-shared-libraries'] and not self.setCompilers.staticLibraries
+    if self.framework.argDB['SOSUFFIX'] is None:
+        self.SOSUFFIX = ''
+    else:
+        self.SOSUFFIX = '_{0}'.format(self.framework.argDB['SOSUFFIX'])
 
     if self.useShared:
       #if config.setCompilers.Configure.isSolaris(self.log) and config.setCompilers.Configure.isGNU(self.framework.getCompiler(),self.log):
@@ -65,10 +70,10 @@ class Configure(config.base.Configure):
       # Linux is the default
       if self.setCompilers.isDarwin(self.log):
         self.addMakeRule('shared_arch','shared_darwin')
-        self.addMakeMacro('SONAME_FUNCTION', '$(1).$(2).dylib')
+        self.addMakeMacro('SONAME_FUNCTION', '$(1){0}.$(2).dylib'.format(self.SOSUFFIX))
         self.addMakeMacro('SL_LINKER_FUNCTION', '-dynamiclib -install_name $(call SONAME_FUNCTION,$(1),$(2)) -compatibility_version $(2) -current_version $(3) -undefined dynamic_lookup')
       elif self.setCompilers.CC.find('win32fe') >=0:
-        self.addMakeMacro('SONAME_FUNCTION', '$(1).dll')
+        self.addMakeMacro('SONAME_FUNCTION', '$(1){0}.dll'.format(self.SOSUFFIX))
         self.addMakeMacro('SL_LINKER_FUNCTION', '-LD')
         self.addMakeMacro('PETSC_DLL_EXPORTS', '1')
       else:
@@ -77,9 +82,9 @@ class Configure(config.base.Configure):
         self.addMakeRule('shared_arch','shared_linux')
         if config.setCompilers.Configure.isMINGW(self.framework.getCompiler(),self.log):
           self.addMakeMacro('PETSC_DLL_EXPORTS', '1')
-          self.addMakeMacro('SONAME_FUNCTION', '$(1)-$(2).$(SL_LINKER_SUFFIX)')
+          self.addMakeMacro('SONAME_FUNCTION', '$(1){0}-$(2).$(SL_LINKER_SUFFIX)'.format(self.SOSUFFIX))
         else:
-          self.addMakeMacro('SONAME_FUNCTION', '$(1).$(SL_LINKER_SUFFIX).$(2)')
+          self.addMakeMacro('SONAME_FUNCTION', '$(1){0}.$(SL_LINKER_SUFFIX).$(2)'.format(self.SOSUFFIX))
 
         self.addMakeMacro('SL_LINKER_FUNCTION', self.framework.getSharedLinkerFlags() + ' -Wl,-soname,$(call SONAME_FUNCTION,$(notdir $(1)),$(2))')
       self.addMakeMacro('BUILDSHAREDLIB','yes')
