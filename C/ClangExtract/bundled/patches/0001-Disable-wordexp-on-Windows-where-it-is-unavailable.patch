From 9af1a0b296becc1d0e91472edcee576d3ebf8391 Mon Sep 17 00:00:00 2001
From: Keno Fischer <Keno@users.noreply.github.com>
Date: Wed, 8 Oct 2025 21:40:23 +0000
Subject: [PATCH] Disable wordexp on Windows where it is unavailable

The wordexp() function is a POSIX extension not available on Windows.
This patch conditionally compiles wordexp usage only on non-Windows platforms.

On Windows, the path is used as-is without shell expansion, since Windows
does not support tilde expansion in the same way as POSIX systems.

Changes:
- Wrap #include <wordexp.h> with #ifndef _WIN32
- Add platform-specific constructor implementations
- Windows version simply stores the path without expansion
---
 libcextract/Parser.hh | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/libcextract/Parser.hh b/libcextract/Parser.hh
index 3bd5c4b..0a089b8 100644
--- a/libcextract/Parser.hh
+++ b/libcextract/Parser.hh
@@ -20,7 +20,9 @@
 #include <string.h>
 #include <errno.h>
 #include <stdexcept>
+#ifndef _WIN32
 #include <wordexp.h>
+#endif
 
 class Parser
 {
@@ -32,6 +34,7 @@ public:
 
   Parser(const char *path)
   {
+#ifndef _WIN32
     /* Expand shell characters like '~' in paths.  */
     wordexp_t exp_result;
     wordexp(path, &exp_result, 0);
@@ -41,6 +44,10 @@ public:
 
     /* Release expansion object.  */
     wordfree(&exp_result);
+#else
+    /* wordexp is not available on Windows, use path as-is */
+    parser_path = std::string(path);
+#endif
   }
 
   // Some parsers work on files
-- 
2.50.1

