commit f1b5ea6b6e55e6d2eddf0aad14d2f584617046ff
Author: Keno Fischer <keno@juliacomputing.com>
Date:   Sat Aug 13 01:59:00 2022 -0400

    Stop inlining exception_ptr
    
    Clang has a bug where it fails to emit the C1 ctor for
    inline ctors marked __attribute__((used)). Make the
    ctor non-inline to force emission of the C1 ctor for
    ABI compatibility.
    
    Co-authored-by: Diana Sinyukova <diana_sinyukova@yahoo.co.uk>

diff --git a/libstdc++-v3/libsupc++/eh_ptr.cc b/libstdc++-v3/libsupc++/eh_ptr.cc
index 5c4685606fe..ea5b1a4a949 100644
--- a/libstdc++-v3/libsupc++/eh_ptr.cc
+++ b/libstdc++-v3/libsupc++/eh_ptr.cc
@@ -217,4 +217,22 @@ std::rethrow_exception(std::exception_ptr ep)
   std::terminate();
 }
 
+std::exception_ptr::exception_ptr() _GLIBCXX_NOEXCEPT
+: _M_exception_object(0)
+{ }
+
+
+std::exception_ptr::exception_ptr(const std::exception_ptr& __other) _GLIBCXX_NOEXCEPT
+: _M_exception_object(__other._M_exception_object)
+{
+  if (_M_exception_object)
+_M_addref();
+}
+
+std::exception_ptr::~exception_ptr() _GLIBCXX_USE_NOEXCEPT
+{
+  if (_M_exception_object)
+_M_release();
+}
+
 #undef _GLIBCXX_EH_PTR_COMPAT
diff --git a/libstdc++-v3/libsupc++/exception_ptr.h b/libstdc++-v3/libsupc++/exception_ptr.h
index f9dffd565bf..a2aad241daa 100644
--- a/libstdc++-v3/libsupc++/exception_ptr.h
+++ b/libstdc++-v3/libsupc++/exception_ptr.h
@@ -173,29 +173,6 @@ namespace std
 	__attribute__ ((__pure__));
     };
 
-    _GLIBCXX_EH_PTR_USED
-    inline
-    exception_ptr::exception_ptr() _GLIBCXX_NOEXCEPT
-    : _M_exception_object(0)
-    { }
-
-    _GLIBCXX_EH_PTR_USED
-    inline
-    exception_ptr::exception_ptr(const exception_ptr& __other) _GLIBCXX_NOEXCEPT
-    : _M_exception_object(__other._M_exception_object)
-    {
-      if (_M_exception_object)
-	_M_addref();
-    }
-
-    _GLIBCXX_EH_PTR_USED
-    inline
-    exception_ptr::~exception_ptr() _GLIBCXX_USE_NOEXCEPT
-    {
-      if (_M_exception_object)
-	_M_release();
-    }
-
     _GLIBCXX_EH_PTR_USED
     inline exception_ptr&
     exception_ptr::operator=(const exception_ptr& __other) _GLIBCXX_USE_NOEXCEPT

