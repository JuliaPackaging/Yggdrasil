diff --git a/src/Makefile b/src/Makefile
index 30d64be2..0173acc3 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -24,10 +24,10 @@ NODOTABIVER= 51
 # removing the '#' in front of them. Make sure you force a full recompile
 # with "make clean", followed by "make" if you change any options.
 #
-DEFAULT_CC = gcc
+#DEFAULT_CC = gcc
 #
 # LuaJIT builds as a native 32 or 64 bit binary by default.
-CC= $(DEFAULT_CC)
+#CC= $(DEFAULT_CC)
 #
 # Use this if you want to force a 32 bit build on a 64 bit multilib OS.
 #CC= $(DEFAULT_CC) -m32
@@ -47,7 +47,7 @@ CCOPT= -O2 -fomit-frame-pointer
 # x86/x64 only: For GCC 4.2 or higher and if you don't intend to distribute
 # the binaries to a different machine you could also use: -march=native
 #
-CCOPT_x86= -march=i686 -msse -msse2 -mfpmath=sse
+CCOPT_x86=
 CCOPT_x64=
 CCOPT_arm=
 CCOPT_arm64=
@@ -155,23 +155,23 @@ XCFLAGS=
 # Host system detection.
 ##############################################################################
 
-ifeq (Windows,$(findstring Windows,$(OS))$(MSYSTEM)$(TERM))
-  HOST_SYS= Windows
-else
-  HOST_SYS:= $(shell uname -s)
-  ifneq (,$(findstring MINGW,$(HOST_SYS)))
-    HOST_SYS= Windows
-    HOST_MSYS= mingw
-  endif
-  ifneq (,$(findstring MSYS,$(HOST_SYS)))
-    HOST_SYS= Windows
-    HOST_MSYS= mingw
-  endif
-  ifneq (,$(findstring CYGWIN,$(HOST_SYS)))
-    HOST_SYS= Windows
-    HOST_MSYS= cygwin
-  endif
-endif
+#ifeq (Windows,$(findstring Windows,$(OS))$(MSYSTEM)$(TERM))
+#  HOST_SYS= Windows
+#else
+#  HOST_SYS:= $(shell uname -s)
+#  ifneq (,$(findstring MINGW,$(HOST_SYS)))
+#    HOST_SYS= Windows
+#    HOST_MSYS= mingw
+#  endif
+#  ifneq (,$(findstring MSYS,$(HOST_SYS)))
+#    HOST_SYS= Windows
+#    HOST_MSYS= mingw
+#  endif
+#  ifneq (,$(findstring CYGWIN,$(HOST_SYS)))
+#    HOST_SYS= Windows
+#    HOST_MSYS= cygwin
+#  endif
+#endif
 
 ##############################################################################
 # Flags and options for host and target.
@@ -192,7 +192,7 @@ ASOPTIONS= $(CCOPT) $(CCWARN) $(XCFLAGS) $(CFLAGS)
 CCOPTIONS= $(CCDEBUG) $(ASOPTIONS)
 LDOPTIONS= $(CCDEBUG) $(LDFLAGS)
 
-HOST_CC= $(CC)
+HOST_CC?= $(CC)
 HOST_RM?= rm -f
 # If left blank, minilua is built and used. You can supply an installed
 # copy of (plain) Lua 5.1 or 5.2, plus Lua BitOp. E.g. with: HOST_LUA=lua
@@ -205,12 +205,12 @@ HOST_ACFLAGS= $(CCOPTIONS) $(HOST_XCFLAGS) $(TARGET_ARCH) $(HOST_CFLAGS)
 HOST_ALDFLAGS= $(LDOPTIONS) $(HOST_XLDFLAGS) $(HOST_LDFLAGS)
 HOST_ALIBS= $(HOST_XLIBS) $(LIBS) $(HOST_LIBS)
 
-STATIC_CC = $(CROSS)$(CC)
-DYNAMIC_CC = $(CROSS)$(CC) -fPIC
-TARGET_CC= $(STATIC_CC)
+TARGET_CC?= $(CROSS)$(CC)
+STATIC_CC = $(TARGET_CC)
+DYNAMIC_CC = $(TARGET_CC) -fPIC
 TARGET_STCC= $(STATIC_CC)
 TARGET_DYNCC= $(DYNAMIC_CC)
-TARGET_LD= $(CROSS)$(CC)
+TARGET_LD= $(TARGET_CC)
 TARGET_AR= $(CROSS)ar rcus
 TARGET_STRIP= $(CROSS)strip
 
@@ -368,12 +368,16 @@ ifneq ($(HOST_SYS),$(TARGET_SYS))
   else
   ifeq (iOS,$(TARGET_SYS))
     HOST_XCFLAGS+= -DLUAJIT_OS=LUAJIT_OS_OSX -DTARGET_OS_IPHONE=1
+  else
+  ifeq (FreeBSD,$(TARGET_SYS))
+    HOST_XCFLAGS+= -DLUAJIT_OS=LUAJIT_OS_BSD
   else
     HOST_XCFLAGS+= -DLUAJIT_OS=LUAJIT_OS_OTHER
   endif
   endif
   endif
   endif
+  endif
 endif
 
 ifneq (,$(CCDEBUG))
@@ -596,10 +600,10 @@ endif
 endif
 endif
 
-Q= @
-E= @echo
-#Q=
-#E= @:
+#Q= @
+#E= @echo
+Q=
+E= @:
 
 ##############################################################################
 # Make targets.
