--- CMakeLists.txt	2025-09-27 09:46:43.761899815 +0200
+++ CMakeLists.txt	2025-09-27 10:07:11.670709917 +0200
@@ -45,7 +45,6 @@
 option(USE_HIDAPI        "Use hidapi as the HID backend"           OFF)
 option(USE_PCSC          "Enable experimental PCSC support"        OFF)
 option(USE_WINHELLO      "Abstract Windows Hello as a FIDO device" ON)
-option(NFC_LINUX         "Enable NFC support on Linux"             ON)
 
 add_definitions(-D_FIDO_MAJOR=${FIDO_MAJOR})
 add_definitions(-D_FIDO_MINOR=${FIDO_MINOR})
@@ -64,7 +63,7 @@
 endif()
 
 if(WIN32)
-	add_definitions(-DWIN32_LEAN_AND_MEAN -D_WIN32_WINNT=0x0600)
+    add_definitions(-DWIN32_LEAN_AND_MEAN)
 endif()
 
 if(APPLE)
@@ -244,23 +243,29 @@
 		set(CRYPTO_LIBRARIES "crypto")
 	endif()
 
-	if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
-		pkg_search_module(UDEV libudev REQUIRED)
-		set(UDEV_NAME "udev")
-		# If using hidapi, use hidapi-hidraw.
-		set(HIDAPI_SUFFIX -hidraw)
-		if(NOT HAVE_CLOCK_GETTIME)
-			# Look for clock_gettime in librt.
-			check_library_exists(rt clock_gettime "time.h"
-			    HAVE_CLOCK_GETTIME)
-			if (HAVE_CLOCK_GETTIME)
-				add_definitions(-DHAVE_CLOCK_GETTIME)
-				set(BASE_LIBRARIES ${BASE_LIBRARIES} rt)
-			endif()
-		endif()
-	else()
-		set(NFC_LINUX OFF)
-	endif()
+	option(WITH_LIBUDEV "Enable udev support on Linux" OFF)
+
+if(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND WITH_LIBUDEV)
+    pkg_search_module(UDEV libudev)
+    if(UDEV_FOUND)
+        set(UDEV_NAME "udev")
+        # If using hidapi, use hidapi-hidraw.
+        set(HIDAPI_SUFFIX -hidraw)
+        if(NOT HAVE_CLOCK_GETTIME)
+            # Look for clock_gettime in librt.
+            check_library_exists(rt clock_gettime "time.h"
+                HAVE_CLOCK_GETTIME)
+            if (HAVE_CLOCK_GETTIME)
+                add_definitions(-DHAVE_CLOCK_GETTIME)
+                set(BASE_LIBRARIES ${BASE_LIBRARIES} rt)
+            endif()
+        endif()
+    else()
+        message(STATUS "libudev not found, building without udev support.")
+    endif()
+else()
+    set(NFC_LINUX OFF)
+endif()
 
 	if(MINGW)
 		# MinGW is stuck with a flavour of C89.
@@ -306,7 +311,9 @@
 	add_compile_options(-Wwrite-strings)
 	add_compile_options(-Wmissing-prototypes)
 	add_compile_options(-Wbad-function-cast)
-	add_compile_options(-Wimplicit-fallthrough)
+	if(CMAKE_C_COMPILER_ID MATCHES "Clang")
+    add_compile_options(-Wimplicit-fallthrough)
+endif()
 	add_compile_options(-pedantic)
 	add_compile_options(-pedantic-errors)
 
@@ -314,7 +321,6 @@
 
 	if(WIN32)
 		add_compile_options(-Wno-type-limits)
-		add_compile_options(-Wno-cast-function-type)
 	endif()
 
 	if(HAVE_SHORTEN_64_TO_32)
