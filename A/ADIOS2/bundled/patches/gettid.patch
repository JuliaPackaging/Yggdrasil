diff --git a/source/adios2/toolkit/profiling/taustubs/tautimer.cpp b/source/adios2/toolkit/profiling/taustubs/tautimer.cpp
index 1837290b4..fb0d669ed 100644
--- a/source/adios2/toolkit/profiling/taustubs/tautimer.cpp
+++ b/source/adios2/toolkit/profiling/taustubs/tautimer.cpp
@@ -22,6 +22,10 @@
 #include <sys/types.h>
 #include <thread>

+#if defined(__FreeBSD__)
+#include <pthread_np.h>
+#endif
+
 /* Clean assertion handling */
 inline void _tautimer_assert(const char *expression, const char *file, int line)
 {
@@ -199,12 +203,14 @@ thread_local bool TauTimer::thread_seen(false);
 // constructor
 TauTimer::TauTimer(void) : initialized(false)
 {
-    // Confirm that we are instantializing this singleton on the main thread!
+    // Confirm that we are instantiating this singleton on the main thread!
     mypid = getpid();
 #if defined(__APPLE__) && defined(__MACH__)
-    // why should Apple support gettid? BE DIFFERENT, BABY!
     pthread_threadid_np(NULL, &mytid);
+#elif defined(__FreeBSD__)
+    mytid = pthread_getthreadid_np();
 #else
+    // __NR_gettid is Linux-only
     mytid = (uint64_t)syscall(__NR_gettid);
 #endif
     if (tau_stub_initialize_simple_() == 0)
@@ -228,11 +234,13 @@ inline void TauTimer::_RegisterThread(void)
 {
     if (!thread_seen)
     {
-// Confirm that we are NOT on the main thread!
+        // Confirm that we are NOT on the main thread!
 #if defined(__APPLE__) && defined(__MACH__)
-        // why should Apple support gettid? BE DIFFERENT, BABY!
         pthread_threadid_np(NULL, &mytid);
+#elif defined(__FreeBSD__)
+        mytid = pthread_getthreadid_np();
 #else
+        // __NR_gettid is Linux-only
         mytid = (uint64_t)syscall(__NR_gettid);
 #endif
         my_Tau_register_thread();
