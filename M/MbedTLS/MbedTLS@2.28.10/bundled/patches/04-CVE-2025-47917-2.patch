From: Manuel Pégourié-Gonnard <manuel.pegourie-gonnard@arm.com>
Date: Mon, 5 May 2025 16:49:45 +0200
Subject: Restore behaviour of mbedtls_x509write_set_foo_name()

The documentation doesn't say you can't call these functions more than
once on the same context, and if you do it shouldn't result in a memory
leak. Historically, the call to mbedtls_asn1_free_named_data_list() in
mbedtls_x509_string_to_names() (that was removed in the previous commit)
was ensuring that. Let's restore it where it makes sense. (These are the
only 3 places calling mbedtls_x509_string_to_names() in the library.)

Signed-off-by: Manuel Pégourié-Gonnard <manuel.pegourie-gonnard@arm.com>

Origin: backport, https://github.com/Mbed-TLS/mbedtls/commit/2dc6b583acde7dfe99e920e7c41edec49de54da5
---
 library/x509write_crt.c | 2 ++
 library/x509write_csr.c | 1 +
 2 files changed, 3 insertions(+)

diff --git a/library/x509write_crt.c b/library/x509write_crt.c
index 5462e83..f3ba336 100644
--- a/library/x509write_crt.c
+++ b/library/x509write_crt.c
@@ -126,12 +126,14 @@ void mbedtls_x509write_crt_set_issuer_key( mbedtls_x509write_cert *ctx,
 int mbedtls_x509write_crt_set_subject_name( mbedtls_x509write_cert *ctx,
                                             const char *subject_name )
 {
+    mbedtls_asn1_free_named_data_list(&ctx->subject);
     return mbedtls_x509_string_to_names( &ctx->subject, subject_name );
 }
 
 int mbedtls_x509write_crt_set_issuer_name( mbedtls_x509write_cert *ctx,
                                            const char *issuer_name )
 {
+    mbedtls_asn1_free_named_data_list(&ctx->issuer);
     return mbedtls_x509_string_to_names( &ctx->issuer, issuer_name );
 }
 
diff --git a/library/x509write_csr.c b/library/x509write_csr.c
index 60cf123..d17a322 100644
--- a/library/x509write_csr.c
+++ b/library/x509write_csr.c
@@ -113,6 +113,7 @@ void mbedtls_x509write_csr_set_key( mbedtls_x509write_csr *ctx, mbedtls_pk_conte
 int mbedtls_x509write_csr_set_subject_name( mbedtls_x509write_csr *ctx,
                                     const char *subject_name )
 {
+    mbedtls_asn1_free_named_data_list(&ctx->subject);
     return mbedtls_x509_string_to_names( &ctx->subject, subject_name );
 }
 
