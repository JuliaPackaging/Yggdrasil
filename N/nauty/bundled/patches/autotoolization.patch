diff --git a/Makefile.am b/Makefile.am
new file mode 100644
index 0000000..bd56b2e
--- /dev/null
+++ b/Makefile.am
@@ -0,0 +1,371 @@
+AUTOMAKE_OPTIONS = foreign
+ACLOCAL_AMFLAGS = -I m4
+
+SUBDIRS = nauty
+
+pkginclude_HEADERS = \
+	nauty.h \
+	nautinv.h \
+	naurng.h \
+	nausparse.h \
+	naututil.h \
+	naugroup.h \
+	schreier.h \
+	traces.h \
+	gtools.h \
+	gutils.h
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA= nauty.pc
+
+bin_PROGRAMS = \
+	dreadnaut \
+	\
+	addedgeg \
+	amtog \
+	biplabg \
+	catg \
+	complg \
+	converseg \
+	copyg \
+	countg \
+	cubhamg \
+	deledgeg \
+	delptg \
+	directg \
+	dretodot \
+	dretog \
+	genbg \
+	genbgL \
+	geng \
+	genquarticg \
+	genrang \
+	genspecialg \
+	gentourng \
+	gentreeg \
+	hamheuristic \
+	labelg \
+	linegraphg \
+	listg \
+	multig \
+	newedgeg \
+	NRswitchg \
+	pickg \
+	planarg \
+	ranlabg \
+	shortg \
+	showg \
+	subdivideg \
+	twohamg \
+	vcolg \
+	watercluster2 \
+	\
+	blisstog \
+	checks6 \
+	sumlines
+
+lib_LTLIBRARIES = \
+	libnauty.la \
+	libnautyA1.la \
+	libnautyS0.la \
+	libnautyW0.la \
+	libnautyL0.la \
+	libnautyS1.la \
+	libnautyW1.la \
+	libnautyL1.la
+
+check_PROGRAMS = \
+	dreadtest \
+	dreadtest1 \
+	dreadtestS \
+	dreadtestW \
+	dreadtestL \
+	dreadtestS1 \
+	dreadtestW1 \
+	dreadtestL1 \
+	dreadtest4K \
+	naucompare
+
+TESTS = runalltests
+
+AM_CPPFLAGS =
+AM_CFLAGS =
+AM_LDFLAGS =
+LDADD =
+
+NAUTY_LDADD =   $(top_builddir)/libnauty.la $(threadlib)
+NAUTYW1_LDADD = $(top_builddir)/libnautyW1.la $(threadlib)
+NAUTYL1_LDADD = $(top_builddir)/libnautyL1.la $(threadlib)
+
+##
+#nauty_flavour_CPPFLAGS =
+nautyA1_flavour_CPPFLAGS = -DMAXN=WORDSIZE
+nautyS0_flavour_CPPFLAGS = -DWORDSIZE=16
+nautyS1_flavour_CPPFLAGS = $(nautyA1_flavour_CPPFLAGS) $(nautyS0_flavour_CPPFLAGS)
+nautyW0_flavour_CPPFLAGS = -DWORDSIZE=32
+nautyW1_flavour_CPPFLAGS = $(nautyA1_flavour_CPPFLAGS) $(nautyW0_flavour_CPPFLAGS)
+nautyL0_flavour_CPPFLAGS = -DWORDSIZE=64
+nautyL1_flavour_CPPFLAGS = $(nautyA1_flavour_CPPFLAGS) $(nautyL0_flavour_CPPFLAGS)
+
+
+## short descriptions inspired from the basic functions of the programs as described
+## in section `Utilities' (15) of the `Nauty and Traces User's Guide' (version 2.6)
+dreadnaut_DESCRIPTION =     "command line interface to nauty graph isomorphism library"
+addedgeg_DESCRIPTION =      "add an edge in each possible way"
+amtog_DESCRIPTION =         "read graphs in matrix format"
+biplabg_DESCRIPTION =       "label bipartite graphs so the colour classes are contiguous"
+catg_DESCRIPTION =          "concatenate files of graphs"
+complg_DESCRIPTION =        "complement graphs"
+converseg_DESCRIPTION =     "converse digraphs"
+copyg_DESCRIPTION =         "convert format and select subset"
+countg_DESCRIPTION =        "count graphs according to a variety of properties"
+cubhamg_DESCRIPTION =       "find hamiltonian cycles in subcubic graphs"
+deledgeg_DESCRIPTION =      "delete an edge in each possible way"
+delptg_DESCRIPTION =        "delete vertices"
+directg_DESCRIPTION =       "generate small digraphs with given underlying graph"
+dretodot_DESCRIPTION =      "read graphs and initial coloring in dreadnaut format and write in dot format"
+dretog_DESCRIPTION =        "read graphs in dreadnaut format"
+genbg_DESCRIPTION =         "generate small bicoloured graphs"
+genbgL_DESCRIPTION =        "$(shell printf "%s %s" $(genbg_DESCRIPTION) "(L1 flavour)")"
+geng_DESCRIPTION =          "generate small graphs"
+genquarticg_DESCRIPTION =   "generate quartic graphs"
+genrang_DESCRIPTION =       "generate random graphs"
+genspecialg_DESCRIPTION =   "generate special graphs"
+gentourng_DESCRIPTION =     "generate small tournaments"
+gentreeg_DESCRIPTION =      "generate trees"
+hamheuristic_DESCRIPTION =  "try to find hamiltonian cycles in any graphs"
+labelg_DESCRIPTION =        "canonically label graphs"
+linegraphg_DESCRIPTION =    "compute the linegraphs of a file of graphs"
+listg_DESCRIPTION =         "display graphs in a variety of forms"
+multig_DESCRIPTION =        "generate small multigraphs with given underlying graph"
+newedgeg_DESCRIPTION =      "create new edges from pairs of non-adjacent edges in each possible way"
+NRswitchg_DESCRIPTION =     "complement vertex edges"
+pickg_DESCRIPTION =         "select graphs according to a variety of properties"
+planarg_DESCRIPTION =       "test graphs for planarity and find embeddings or obstructions"
+ranlabg_DESCRIPTION =       "randomly relabel graphs"
+shortg_DESCRIPTION =        "remove isomorphs from a file of graphs"
+showg_DESCRIPTION =         "$(shell printf "%s %s" $(listg_DESCRIPTION) "(stand-alone subset of listg)")"
+subdivideg_DESCRIPTION =    "compute the subdivision graphs of a file of graphs"
+twohamg_DESCRIPTION =       "split quartic graphs into two hamiltonian cycles"
+vcolg_DESCRIPTION =         "colour the vertices of graphs in all distinct ways"
+watercluster2_DESCRIPTION = "$(shell printf "%s %s" $(directg_DESCRIPTION) "(faster alternative to directg)")"
+blisstog_DESCRIPTION =      "convert files of graphs in bliss format to stdout in sparse6 format"
+checks6_DESCRIPTION =       "check a file of graphs and optionally perform corrections"
+sumlines_DESCRIPTION =      "sum lines matching specified graph formats"
+
+dreadnaut_CPPFLAGS =
+addedgeg_CPPFLAGS =
+amtog_CPPFLAGS =
+biplabg_CPPFLAGS =
+catg_CPPFLAGS =
+complg_CPPFLAGS =
+converseg_CPPFLAGS =
+copyg_CPPFLAGS =
+countg_CPPFLAGS =
+cubhamg_CPPFLAGS =
+deledgeg_CPPFLAGS =
+delptg_CPPFLAGS =
+directg_CPPFLAGS =
+dretodot_CPPFLAGS =
+dretog_CPPFLAGS =
+genbg_CPPFLAGS =         $(nautyW1_flavour_CPPFLAGS)
+genbgL_CPPFLAGS =        $(nautyL1_flavour_CPPFLAGS) -DMAXN1=30
+geng_CPPFLAGS =          $(nautyW1_flavour_CPPFLAGS)
+genquarticg_CPPFLAGS =   $(nautyL1_flavour_CPPFLAGS)
+genrang_CPPFLAGS =
+genspecialg_CPPFLAGS =
+gentourng_CPPFLAGS =     -DMAXN=24
+gentreeg_CPPFLAGS =
+hamheuristic_CPPFLAGS =
+labelg_CPPFLAGS =
+linegraphg_CPPFLAGS =
+listg_CPPFLAGS =
+multig_CPPFLAGS =
+newedgeg_CPPFLAGS =
+NRswitchg_CPPFLAGS =
+pickg_CPPFLAGS =
+planarg_CPPFLAGS =
+ranlabg_CPPFLAGS =
+shortg_CPPFLAGS =
+showg_CPPFLAGS =
+subdivideg_CPPFLAGS =
+twohamg_CPPFLAGS =
+vcolg_CPPFLAGS =
+watercluster2_CPPFLAGS = -DMAXN=32
+blisstog_CPPFLAGS =      $(ZLIB_CFLAGS)
+checks6_CPPFLAGS =
+sumlines_CPPFLAGS =      $(GMP_CFLAGS)
+
+dreadnaut_SOURCES = dreadnaut.c
+addedgeg_SOURCES = addedgeg.c
+amtog_SOURCES = amtog.c
+biplabg_SOURCES = biplabg.c
+catg_SOURCES = catg.c
+complg_SOURCES = complg.c
+converseg_SOURCES = converseg.c
+copyg_SOURCES = copyg.c
+countg_SOURCES = testg.c
+cubhamg_SOURCES = cubhamg.c
+deledgeg_SOURCES = deledgeg.c
+delptg_SOURCES = delptg.c
+directg_SOURCES = directg.c
+dretodot_SOURCES = dretodot.c
+dretog_SOURCES = dretog.c
+genbg_SOURCES = genbg.c
+genbgL_SOURCES = genbg.c
+geng_SOURCES = geng.c
+genquarticg_SOURCES = genquarticg.c
+genrang_SOURCES = genrang.c
+genspecialg_SOURCES = genspecialg.c
+gentourng_SOURCES = gentourng.c
+gentreeg_SOURCES = gentreeg.c
+hamheuristic_SOURCES = hamheuristic.c
+labelg_SOURCES = labelg.c
+linegraphg_SOURCES = linegraphg.c
+listg_SOURCES = listg.c
+multig_SOURCES = multig.c
+newedgeg_SOURCES = newedgeg.c
+NRswitchg_SOURCES = NRswitchg.c
+pickg_SOURCES = testg.c
+planarg_SOURCES = planarg.c planarity.c
+ranlabg_SOURCES = ranlabg.c
+shortg_SOURCES = shortg.c
+showg_SOURCES = showg.c
+subdivideg_SOURCES = subdivideg.c
+twohamg_SOURCES = twohamg.c
+vcolg_SOURCES = vcolg.c
+watercluster2_SOURCES = watercluster2.c
+blisstog_SOURCES = blisstog.c
+checks6_SOURCES = checks6.c
+sumlines_SOURCES = sumlines.c
+
+dreadnaut_LDADD =     $(NAUTY_LDADD)
+addedgeg_LDADD =      $(NAUTY_LDADD)
+amtog_LDADD =         $(NAUTY_LDADD)
+biplabg_LDADD =       $(NAUTY_LDADD)
+catg_LDADD =          $(NAUTY_LDADD)
+complg_LDADD =        $(NAUTY_LDADD)
+converseg_LDADD =     $(NAUTY_LDADD)
+copyg_LDADD =         $(NAUTY_LDADD)
+countg_LDADD =        $(NAUTY_LDADD)
+cubhamg_LDADD =       $(NAUTY_LDADD)
+deledgeg_LDADD =      $(NAUTY_LDADD)
+delptg_LDADD =        $(NAUTY_LDADD)
+directg_LDADD =       $(NAUTY_LDADD)
+dretodot_LDADD =      $(NAUTY_LDADD) $(LIBM)
+dretog_LDADD =        $(NAUTY_LDADD)
+genbg_LDADD =         $(NAUTYW1_LDADD)
+genbgL_LDADD =        $(NAUTYL1_LDADD)
+geng_LDADD =          $(NAUTYW1_LDADD)
+genquarticg_LDADD =   $(NAUTYL1_LDADD)
+genrang_LDADD =       $(NAUTY_LDADD)
+genspecialg_LDADD =   $(NAUTY_LDADD)
+gentourng_LDADD =     $(NAUTY_LDADD)
+gentreeg_LDADD =      $(NAUTY_LDADD)
+hamheuristic_LDADD =  $(NAUTY_LDADD)
+labelg_LDADD =        $(NAUTY_LDADD)
+linegraphg_LDADD =    $(NAUTY_LDADD)
+listg_LDADD =         $(NAUTY_LDADD)
+multig_LDADD =        $(NAUTY_LDADD)
+newedgeg_LDADD =      $(NAUTY_LDADD)
+NRswitchg_LDADD =     $(NAUTY_LDADD)
+pickg_LDADD =         $(NAUTY_LDADD)
+planarg_LDADD =       $(NAUTY_LDADD)
+ranlabg_LDADD =       $(NAUTY_LDADD)
+shortg_LDADD =        $(NAUTY_LDADD)
+showg_LDADD =
+subdivideg_LDADD =    $(NAUTY_LDADD)
+twohamg_LDADD =       $(NAUTY_LDADD)
+vcolg_LDADD =         $(NAUTY_LDADD)
+watercluster2_LDADD = $(NAUTY_LDADD)
+blisstog_LDADD =      $(NAUTY_LDADD) $(ZLIB_LIBS)
+checks6_LDADD =       $(NAUTY_LDADD)
+sumlines_LDADD =      $(GMP_LIBS) -lgmp
+
+libnauty_la_LIBADD = $(threadlib)
+libnauty_la_LDFLAGS = -version-info $(LIBNAUTY_LT_VERSION)
+
+libnauty_la_SOURCES = \
+	nauty.c \
+	nautil.c \
+	nausparse.c \
+	naugraph.c \
+	naurng.c \
+	schreier.c \
+	traces.c \
+	gtools.c \
+	naututil.c \
+	nautinv.c \
+	gutil1.c \
+	gutil2.c \
+	gtnauty.c \
+	naugroup.c
+
+libnautyA1_la_CPPFLAGS = $(nautyA1_flavour_CPPFLAGS)
+libnautyA1_la_LIBADD = $(threadlib)
+libnautyA1_la_LDFLAGS = -version-info $(LIBNAUTY_LT_VERSION)
+libnautyA1_la_SOURCES =$(libnauty_la_SOURCES)
+
+libnautyS0_la_CPPFLAGS = $(nautyS0_flavour_CPPFLAGS)
+libnautyS0_la_LIBADD = $(threadlib)
+libnautyS0_la_LDFLAGS = -version-info $(LIBNAUTY_LT_VERSION)
+libnautyS0_la_SOURCES =$(libnauty_la_SOURCES)
+
+libnautyS1_la_CPPFLAGS = $(nautyS1_flavour_CPPFLAGS)
+libnautyS1_la_LIBADD = $(threadlib)
+libnautyS1_la_LDFLAGS = -version-info $(LIBNAUTY_LT_VERSION)
+libnautyS1_la_SOURCES =$(libnauty_la_SOURCES)
+
+libnautyW0_la_CPPFLAGS = $(nautyW0_flavour_CPPFLAGS)
+libnautyW0_la_LIBADD = $(threadlib)
+libnautyW0_la_LDFLAGS = -version-info $(LIBNAUTY_LT_VERSION)
+libnautyW0_la_SOURCES =$(libnauty_la_SOURCES)
+
+libnautyW1_la_CPPFLAGS = $(nautyW1_flavour_CPPFLAGS)
+libnautyW1_la_LIBADD = $(threadlib)
+libnautyW1_la_LDFLAGS = -version-info $(LIBNAUTY_LT_VERSION)
+libnautyW1_la_SOURCES =$(libnauty_la_SOURCES)
+
+libnautyL0_la_CPPFLAGS = $(nautyL0_flavour_CPPFLAGS)
+libnautyL0_la_LIBADD = $(threadlib)
+libnautyL0_la_LDFLAGS = -version-info $(LIBNAUTY_LT_VERSION)
+libnautyL0_la_SOURCES =$(libnauty_la_SOURCES)
+
+libnautyL1_la_CPPFLAGS = $(nautyL1_flavour_CPPFLAGS)
+libnautyL1_la_LIBADD = $(threadlib)
+libnautyL1_la_LDFLAGS = -version-info $(LIBNAUTY_LT_VERSION)
+libnautyL1_la_SOURCES =$(libnauty_la_SOURCES)
+
+dreadtest_CPPFLAGS =   $(dreadnaut_CPPFLAGS) -DDREADTEST
+dreadtest1_CPPFLAGS =  $(dreadtest_CPPFLAGS) $(nautyA1_flavour_CPPFLAGS)
+dreadtestS_CPPFLAGS =  $(dreadtest_CPPFLAGS) $(nautyS0_flavour_CPPFLAGS)
+dreadtestS1_CPPFLAGS = $(dreadtest_CPPFLAGS) $(nautyS1_flavour_CPPFLAGS)
+dreadtestW_CPPFLAGS =  $(dreadtest_CPPFLAGS) $(nautyW0_flavour_CPPFLAGS)
+dreadtestW1_CPPFLAGS = $(dreadtest_CPPFLAGS) $(nautyW1_flavour_CPPFLAGS)
+dreadtestL_CPPFLAGS =  $(dreadtest_CPPFLAGS) $(nautyL0_flavour_CPPFLAGS)
+dreadtestL1_CPPFLAGS = $(dreadtest_CPPFLAGS) $(nautyL1_flavour_CPPFLAGS)
+dreadtest4K_CPPFLAGS = $(dreadtest_CPPFLAGS) -DMAXN=4096
+
+dreadtest_SOURCES =   $(dreadnaut_SOURCES)
+dreadtest1_SOURCES =  $(dreadnaut_SOURCES)
+dreadtestS1_SOURCES = $(dreadnaut_SOURCES)
+dreadtestS_SOURCES =  $(dreadnaut_SOURCES)
+dreadtestW_SOURCES =  $(dreadnaut_SOURCES)
+dreadtestW1_SOURCES = $(dreadnaut_SOURCES)
+dreadtestL_SOURCES =  $(dreadnaut_SOURCES)
+dreadtestL1_SOURCES = $(dreadnaut_SOURCES)
+dreadtest4K_SOURCES = $(dreadnaut_SOURCES) $(libnauty_la_SOURCES)
+
+dreadtest_LDADD =   $(NAUTY_LDADD)
+dreadtest1_LDADD =  $(top_builddir)/libnautyA1.la $(threadlib)
+dreadtestS_LDADD =  $(top_builddir)/libnautyS0.la $(threadlib)
+dreadtestS1_LDADD = $(top_builddir)/libnautyS1.la $(threadlib)
+dreadtestW_LDADD =  $(top_builddir)/libnautyW0.la $(threadlib)
+dreadtestW1_LDADD = $(top_builddir)/libnautyW1.la $(threadlib)
+dreadtestL_LDADD =  $(top_builddir)/libnautyL0.la $(threadlib)
+dreadtestL1_LDADD = $(top_builddir)/libnautyL1.la $(threadlib)
+dreadtest4K_LDADD = $(threadlib)
+
+CLEANFILES = \
+	runtest-*.data \
+	runtest-*.atad
diff --git a/configure.ac b/configure.ac
index d2e1209..b77944d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1,5 +1,22 @@
 dnl Process this file with autoconf to produce a configure script.
-AC_INIT(nauty-h.in)
+AC_INIT([nauty],[@INJECTVER@],[bdm@cs.anu.edu.au],[nauty],[http://pallini.di.uniroma1.it/])
+AC_CONFIG_MACRO_DIR([m4])
+AC_CONFIG_AUX_DIR([autotool])
+AC_CONFIG_SRCDIR([dreadnaut.c])
+AC_CONFIG_HEADER([nauty/nauty_config.h])
+AM_INIT_AUTOMAKE([foreign])
+AM_MAINTAINER_MODE
+
+LIBNAUTY_VERSION_MAJOR=${PACKAGE_VERSION%%.*}
+LIBNAUTY_VERSION_MINOR=${PACKAGE_VERSION#*.}
+LIBNAUTY_VERSION_MINOR=${LIBNAUTY_VERSION_MINOR%%.*}
+LIBNAUTY_VERSION_MICRO=${PACKAGE_VERSION##*.}
+LIBNAUTY_LT_VERSION="$(expr ${LIBNAUTY_VERSION_MAJOR} + ${LIBNAUTY_VERSION_MINOR}):${LIBNAUTY_VERSION_MICRO}:${LIBNAUTY_VERSION_MINOR}"
+
+AC_SUBST(LIBNAUTY_VERSION_MAJOR)
+AC_SUBST(LIBNAUTY_VERSION_MINOR)
+AC_SUBST(LIBNAUTY_VERSION_MICRO)
+AC_SUBST(LIBNAUTY_LT_VERSION)
 
 AC_DEFUN([AX_TLS], [
   AC_MSG_CHECKING(for thread local storage (TLS) class)
@@ -48,7 +65,7 @@ AC_DEFUN([AC_TRY_CFLAGS],
 
 dnl CVT_YESNO([YES-NO VARIABLE],[0-1 VARIABLE])
 dnl Make a 0-1 output variable from a yes/no shell variable
-AC_DEFUN(CVT_YESNO,[if test x"$$1" = x"yes"; then
+AC_DEFUN([CVT_YESNO],[if test x"$$1" = x"yes"; then
 $2=1
 else
 $2=0
@@ -81,6 +98,10 @@ esac
 dnl Checks for C compiler and sets CFLAGS if not set by user
 user_cflags="$CFLAGS"
 AC_PROG_CC
+AC_PROG_INSTALL
+AC_PROG_LN_S
+AC_PROG_MAKE_SET
+LT_INIT
 CFLAGS=$user_cflags
 MORECFLAGS=""
 dnl  we need  AC_SYS_LARGEFILE and AC_FUNC_FSEEKO
@@ -400,6 +421,19 @@ AC_SUBST(edit_msg)
 echo CFLAGS=$CFLAGS
 echo MORECFLAGS=$MORECFLAGS
 
-AC_OUTPUT(makefile:makefile.in nauty.h:nauty-h.in
-    naututil.h:naututil-h.in gtools.h:gtools-h.in)
-
+dnl Checks for libraries
+## pkg-config
+PKG_PROG_PKG_CONFIG
+## math library
+LT_LIB_M
+
+AC_CONFIG_FILES([
+	nauty.pc
+	Makefile
+	nauty/Makefile
+	nauty.h:nauty-h.in
+	naututil.h:naututil-h.in
+	gtools.h:gtools-h.in
+	])
+
+AC_OUTPUT
diff --git a/gtools-h.in b/gtools-h.in
index cadb987..9d81928 100644
--- a/gtools-h.in
+++ b/gtools-h.in
@@ -60,8 +60,8 @@ used, it is necessary to check they are correct.
      This twisted expression works up to n=160529 in 32-bit arithmetic
      and for larger n if size_t has 64 bits.  */
 
-#include "naututil.h"      /* which includes stdio.h */
-#include "nausparse.h"
+#include <nauty/naututil.h>      /* which includes stdio.h */
+#include <nauty/nausparse.h>
 
 #if HAVE_ERRNO_H
 #include <errno.h>
diff --git a/gutils.h b/gutils.h
index 823b6d6..54f4d0e 100644
--- a/gutils.h
+++ b/gutils.h
@@ -1,5 +1,8 @@
 /* gutils.h - procedure declarations for gutil1.c and gutil2.c */
 
+#ifndef  _GUTILS_H_    /* only process this file once */
+#define  _GUTILS_H_
+
 #ifdef __cplusplus
 extern "C" {
 #endif
@@ -44,3 +47,5 @@ extern boolean stronglyconnected(graph*,int,int);
 #ifdef __cplusplus
 }
 #endif
+
+#endif /* _GUTILS_H_  */
diff --git a/naugroup.h b/naugroup.h
index a43c262..abc9914 100644
--- a/naugroup.h
+++ b/naugroup.h
@@ -3,7 +3,10 @@
 Procedures for handling groups found by nauty.
 */
 
-#include "nauty.h"
+#ifndef  _NAUGROUP_H_    /* only process this file once */
+#define  _NAUGROUP_H_
+
+#include <nauty/nauty.h>
 
 typedef struct perm_struct
 {
@@ -53,3 +56,5 @@ extern void freegroup(grouprec*);
 #ifdef __cplusplus
 }
 #endif
+
+#endif /* _NAUGROUP_H_  */
diff --git a/naurng.h b/naurng.h
index fa4b17e..0e99c84 100644
--- a/naurng.h
+++ b/naurng.h
@@ -11,8 +11,10 @@
          random number 0..k-1.
 */
 
-#ifndef NAURNG_H
-#include "nauty.h"
+#ifndef _NAURNG_H_     /* only process this file once */
+#define _NAURNG_H_
+
+#include <nauty/nauty.h>
 
 #ifdef __cplusplus
 extern "C" {
@@ -36,5 +38,4 @@ long ran_nextran(void);
     var = __getkran % (k);}
 #define INITRANBYTIME ran_init((long)time(NULL))
 
-#define NAURNG_H
-#endif
+#endif /* _NAURNG_H_ */
diff --git a/nausparse.h b/nausparse.h
index b432ca8..c378c7c 100644
--- a/nausparse.h
+++ b/nausparse.h
@@ -23,7 +23,7 @@
 #ifndef  _NAUSPARSE_H_    /* only process this file once */
 #define  _NAUSPARSE_H_
 
-#include "nauty.h"
+#include <nauty/nauty.h>
 
 #ifndef SG_WEIGHT
 #define SG_WEIGHT int
@@ -125,4 +125,4 @@ extern void
 }
 #endif
 
-#endif
+#endif /* _NAUSPARSE_H_ */
diff --git a/nautinv.h b/nautinv.h
index 738d8c2..17f0fbe 100644
--- a/nautinv.h
+++ b/nautinv.h
@@ -10,7 +10,10 @@
 *                                                                            *
 *****************************************************************************/
 
-#include "nauty.h"              /* which includes stdio.h */
+#ifndef  _NAUTINV_H_    /* only process this file once */
+#define  _NAUTINV_H_
+
+#include <nauty/nauty.h>              /* which includes stdio.h */
 
 #ifdef __cplusplus
 extern "C" {
@@ -40,3 +43,5 @@ extern void twopaths(graph*,int*,int*,int,int,int,int*,int,boolean,int,int);
 #ifdef __cplusplus
 }
 #endif
+
+#endif /* _NAUTINV_H_ */
diff --git a/naututil-h.in b/naututil-h.in
index 1879604..79b778a 100644
--- a/naututil-h.in
+++ b/naututil-h.in
@@ -115,9 +115,13 @@ used, it is necessary to check they are correct.
 *                                                                            *
 *****************************************************************************/
 
-#include "nauty.h"              /* which includes stdio.h */
-#include "nausparse.h"
-#include "naurng.h"
+#ifndef  _NAUTUTIL_H_    /* only process this file once */
+#define  _NAUTUTIL_H_
+
+#include <nauty/nauty.h>              /* which includes stdio.h */
+#include <nauty/nausparse.h>
+#include <nauty/naurng.h>
+
 /* At this point we can assume that <sys/types.h>, <unistd.h>, <stddef.h>,
    <stdlib.h>, <string.h> or <strings.h> and <malloc.h> if necessary have
    been included if they exist. */
@@ -287,3 +291,5 @@ extern void unitptn(int*,int*,int*,int);
 #endif /*NAUTY_SEED_DEFINED*/
 
 /* @edit_msg@ */
+
+#endif /* _NAUTUTIL_H_ */
diff --git a/nauty.pc.in b/nauty.pc.in
new file mode 100644
index 0000000..7543b8b
--- /dev/null
+++ b/nauty.pc.in
@@ -0,0 +1,12 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: nauty
+Description: nauty graph automorphism library
+Version: @PACKAGE_VERSION@
+URL: @PACKAGE_URL@
+Libs: -L${libdir} -l@PACKAGE@
+Libs.private: @threadlib@
+Cflags: -I${includedir}
diff --git a/nauty/Makefile.am b/nauty/Makefile.am
new file mode 100644
index 0000000..738bdbc
--- /dev/null
+++ b/nauty/Makefile.am
@@ -0,0 +1,29 @@
+
+header-links: remove-links
+	HEADERLIST=" \
+		$(top_builddir)/nauty.h \
+		$(top_builddir)/naututil.h \
+		$(top_builddir)/gtools.h \
+		$(top_srcdir)/nautinv.h \
+		$(top_srcdir)/naurng.h \
+		$(top_srcdir)/nausparse.h \
+		$(top_srcdir)/naugroup.h \
+		$(top_srcdir)/schreier.h \
+		$(top_srcdir)/traces.h \
+		$(top_srcdir)/gutils.h \
+		"; \
+	for h in $$HEADERLIST; do \
+		BASENAME=`basename $$h`; \
+		test -e $$BASENAME || $(LN_S) $$h $$BASENAME; \
+	done
+
+remove-links:
+	rm -f nauty.h nautinv.h naurng.h nausparse.h naututil.h naugroup.h schreier.h traces.h gtools.h gutils.h
+
+all-local: header-links
+
+clean-local: remove-links
+
+distclean-local: remove-links
+	-rm -f Makefile
+
diff --git a/runalltests b/runalltests
index 903b3bb..538a63f 100755
--- a/runalltests
+++ b/runalltests
@@ -1,12 +1,16 @@
 #!/bin/sh
 # Run all nauty checks
 
+top_workingdir=$(pwd)
+
+tdx=0
+
 runonetest() {
 cmd="$1"
 in="$2"
 ok="$3"
 printf "%s %s %s  " "$cmd" "$in" "$ok"
- 
+
 if [ "X$in" = "X" ] ; then
    in=/dev/null
 elif [ ! -r "$in" ] ; then
@@ -19,10 +23,16 @@ if [ ! -r "$ok" ] ; then
    exit 1
 fi
 
-out1=`mktemp runtest.XXXXXX`
-out2=`mktemp runtest.XXXXXX`
+tdx=`expr $tdx + 1`
+out1=`printf "runtest-%02d.data" $tdx`
+out2=`printf "runtest-%02d.atad" $tdx`
 
 eval $cmd <"$in" 2>$out2 >$out1
+
+if [ -d $top_workingdir/.libs ]; then
+   sed -i 's@'$top_workingdir'/.libs/lt-@./@' $out2
+fi
+
 LC_COLLATE=C sort $out2 >>$out1
 if ./naucompare "$out1" "$ok" ; then
    rm $out1 $out2
diff --git a/schreier.h b/schreier.h
index b53b758..368fbd7 100644
--- a/schreier.h
+++ b/schreier.h
@@ -3,8 +3,8 @@
 #ifndef  _SCHREIER_H_    /* only process this file once */
 #define  _SCHREIER_H_
 
-#include "nauty.h"
-#include "naurng.h"
+#include <nauty/nauty.h>
+#include <nauty/naurng.h>
 
 typedef struct permnodestruct
 {
diff --git a/traces.h b/traces.h
index 0e7aa97..b511d02 100644
--- a/traces.h
+++ b/traces.h
@@ -23,6 +23,9 @@
  *       12-Jul-16 : bug correction (reaching degree 2 vertices)              *
 *****************************************************************************/
 
+#ifndef  _TRACES_H_    /* only process this file once */
+#define  _TRACES_H_
+
 #include "gtools.h"
 #include "schreier.h" 
 
@@ -62,3 +65,5 @@ extern void Traces(sparsegraph*,int*,int*,int*,TracesOptions*,
 				   TracesStats*,sparsegraph*);									
 extern void refine_tr(sparsegraph*,int*,int*,int*,int*,TracesOptions*);		
 extern void traces_freedyn(void);
+
+#endif /* _TRACES_H_ */
